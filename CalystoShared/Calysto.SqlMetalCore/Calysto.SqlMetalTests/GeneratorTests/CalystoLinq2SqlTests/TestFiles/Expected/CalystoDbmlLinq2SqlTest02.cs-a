#pragma warning disable 1591
//************************************************************
// Generated using CalystoLinqToSQLGenerator - CalystoSqlMetal
//************************************************************
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using Calysto.Data.Linq;
using Calysto.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;

namespace CalystoUnittestNamespace
{
	[DatabaseAttribute(Name="dbCalystoUnittest")]
	public partial class dbCalystoUnittestDataContext : Calysto.Data.Linq.DataContext
	{
		private static MappingSource mappingSource = new AttributeMappingSource();

		#region Extensibility Method Definitions
		partial void OnCreated();
		#endregion Extensibility Method Definitions

		#region Context constructors

		public dbCalystoUnittestDataContext(string connection) : base(connection, mappingSource)
		{
			OnCreated();
		}

		public dbCalystoUnittestDataContext(IDbConnection connection) : base(connection, mappingSource)
		{
			OnCreated();
		}

		public dbCalystoUnittestDataContext(string connection, MappingSource mappingSource) : base(connection, mappingSource)
		{
			OnCreated();
		}

		public dbCalystoUnittestDataContext(IDbConnection connection, MappingSource mappingSource) : base(connection, mappingSource)
		{
			OnCreated();
		}
		#endregion Context constructors

		#region Context properties for tables
		public Calysto.Data.Linq.Table<tblAppMember> tblAppMember { get { return this.GetTable<tblAppMember>(); } }
		public Calysto.Data.Linq.Table<tblAppMember2> tblAppMember2 { get { return this.GetTable<tblAppMember2>(); } }
		public Calysto.Data.Linq.Table<guest_tblAppMember2> guest_tblAppMember2 { get { return this.GetTable<guest_tblAppMember2>(); } }
		public Calysto.Data.Linq.Table<tblAppMemberAssignedPermission> tblAppMemberAssignedPermission { get { return this.GetTable<tblAppMemberAssignedPermission>(); } }
		public Calysto.Data.Linq.Table<tblAppMemberPermission> tblAppMemberPermission { get { return this.GetTable<tblAppMemberPermission>(); } }
		public Calysto.Data.Linq.Table<tblAppMemberPicture> tblAppMemberPicture { get { return this.GetTable<tblAppMemberPicture>(); } }
		public Calysto.Data.Linq.Table<tblAppMemberPicture2> tblAppMemberPicture2 { get { return this.GetTable<tblAppMemberPicture2>(); } }
		public Calysto.Data.Linq.Table<tblAppMemberStatus> tblAppMemberStatus { get { return this.GetTable<tblAppMemberStatus>(); } }
		public Calysto.Data.Linq.Table<guest_tblAppMemberStatus> guest_tblAppMemberStatus { get { return this.GetTable<guest_tblAppMemberStatus>(); } }
		public Calysto.Data.Linq.Table<tblAppMobileLog> tblAppMobileLog { get { return this.GetTable<tblAppMobileLog>(); } }
		public Calysto.Data.Linq.Table<tblAppMobileLogKind> tblAppMobileLogKind { get { return this.GetTable<tblAppMobileLogKind>(); } }
		public Calysto.Data.Linq.Table<tblAppNewsletter> tblAppNewsletter { get { return this.GetTable<tblAppNewsletter>(); } }
		public Calysto.Data.Linq.Table<tblAppPermission> tblAppPermission { get { return this.GetTable<tblAppPermission>(); } }
		public Calysto.Data.Linq.Table<tblMemberAddress> tblMemberAddress { get { return this.GetTable<tblMemberAddress>(); } }
		public Calysto.Data.Linq.Table<tblVehicle> tblVehicle { get { return this.GetTable<tblVehicle>(); } }
		public Calysto.Data.Linq.Table<tblVehicleOverview> tblVehicleOverview { get { return this.GetTable<tblVehicleOverview>(); } }
		public Calysto.Data.Linq.Table<tblVehicleOverviewImage> tblVehicleOverviewImage { get { return this.GetTable<tblVehicleOverviewImage>(); } }
		public Calysto.Data.Linq.Table<tblVehicleRip> tblVehicleRip { get { return this.GetTable<tblVehicleRip>(); } }
		public Calysto.Data.Linq.Table<tblVehicleRipStatus> tblVehicleRipStatus { get { return this.GetTable<tblVehicleRipStatus>(); } }
		public Calysto.Data.Linq.Table<viewRandom> viewRandom { get { return this.GetTable<viewRandom>(); } }
		#endregion Context properties for tables

		#region Context database functions
		[FunctionAttribute(Name="dbo.fn_diagramobjects", IsComposable=true)]
		public int? fn_diagramobjects(
		)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int?) result.ReturnValue);
		}

		[FunctionAttribute(Name="dbo.fnAddPaddingSpace", IsComposable=true)]
		public string fnAddPaddingSpace(
			[ParameterAttribute(DbType="NVarChar(MAX)")] string str,
			[ParameterAttribute(DbType="Int")] int? expectedLength,
			[ParameterAttribute(DbType="Bit")] bool? addPrefix
		)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), str, expectedLength, addPrefix);
			return ((string) result.ReturnValue);
		}

		[FunctionAttribute(Name="dbo.fnCalculateDatumValuteRokPlacanja", IsComposable=true)]
		public ISingleResult<fnCalculateDatumValuteRokPlacanjaResult> fnCalculateDatumValuteRokPlacanja(
		)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<fnCalculateDatumValuteRokPlacanjaResult>) result.ReturnValue);
		}

		[FunctionAttribute(Name="dbo.fnConvertCsvArgsToIntTable", IsComposable=true)]
		public ISingleResult<fnConvertCsvArgsToIntTableResult> fnConvertCsvArgsToIntTable(
			[ParameterAttribute(DbType="NVarChar(MAX)")] string list
		)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), list);
			return ((ISingleResult<fnConvertCsvArgsToIntTableResult>) result.ReturnValue);
		}

		[FunctionAttribute(Name="dbo.fnConvertCurrency", IsComposable=true)]
		public double? fnConvertCurrency(
			[ParameterAttribute(DbType="Float")] double? amount = (double)(0),
			[ParameterAttribute(DbType="Float")] double? amount2 = (double)(-0.05),
			[ParameterAttribute(DbType="VarChar(10)")] string fromCurrency = "EUR",
			[ParameterAttribute(DbType="VarChar(10)")] string toCurrency = "HRK",
			[ParameterAttribute(DbType="DateTime")] DateTime? exchangeRateDate = null
		)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), amount, amount2, fromCurrency, toCurrency, exchangeRateDate);
			return ((double?) result.ReturnValue);
		}

		[FunctionAttribute(Name="dbo.fnFormatDateToStringISO", IsComposable=true)]
		public string fnFormatDateToStringISO(
			[ParameterAttribute(DbType="DateTime")] DateTime? value
		)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), value);
			return ((string) result.ReturnValue);
		}

		[FunctionAttribute(Name="dbo.fnGetBankaValutaTecaj", IsComposable=true)]
		public ISingleResult<fnGetBankaValutaTecajResult> fnGetBankaValutaTecaj(
			[ParameterAttribute(DbType="Int")] int? skip111,
			[ParameterAttribute(DbType="Int")] int? take111 = (int)(50),
			[ParameterAttribute(DbType="DateTime")] DateTime? validOnDate = null,
			[ParameterAttribute(DbType="VarChar(50)")] string valuta = null
		)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), skip111, take111, validOnDate, valuta);
			return ((ISingleResult<fnGetBankaValutaTecajResult>) result.ReturnValue);
		}

		[FunctionAttribute(Name="dbo.fnGetRandomIntegerValue", IsComposable=true)]
		public int? fnGetRandomIntegerValue(
			[ParameterAttribute(DbType="VarChar(MAX)")] string csvValues
		)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), csvValues);
			return ((int?) result.ReturnValue);
		}

		[FunctionAttribute(Name="dbo.fnGetStariNoviGranica", IsComposable=true)]
		public ISingleResult<fnGetStariNoviGranicaResult> fnGetStariNoviGranica(
		)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<fnGetStariNoviGranicaResult>) result.ReturnValue);
		}

		[FunctionAttribute(Name="dbo.fnSplitStringByPattern", IsComposable=true)]
		public ISingleResult<fnSplitStringByPatternResult> fnSplitStringByPattern(
			[ParameterAttribute(DbType="VarChar(MAX)")] string strToSplit,
			[ParameterAttribute(DbType="VarChar(100)")] string pattern
		)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), strToSplit, pattern);
			return ((ISingleResult<fnSplitStringByPatternResult>) result.ReturnValue);
		}

		[FunctionAttribute(Name="dbo.fnSumNumbers", IsComposable=true)]
		public double? fnSumNumbers(
			[ParameterAttribute(DbType="Float")] double? num1,
			[ParameterAttribute(DbType="Float")] double? num2
		)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), num1, num2);
			return ((double?) result.ReturnValue);
		}

		[FunctionAttribute(Name="dbo.fnThrowErrorMessage", IsComposable=true)]
		public int? fnThrowErrorMessage(
			[ParameterAttribute(DbType="Int")] int? errorCode,
			[ParameterAttribute(DbType="NVarChar(MAX)")] string systemMessage,
			[ParameterAttribute(DbType="NVarChar(MAX)")] string customerMessage
		)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), errorCode, systemMessage, customerMessage);
			return ((int?) result.ReturnValue);
		}

		[FunctionAttribute(Name="guest.fnAddPaddingSpace", IsComposable=true)]
		public string guest_fnAddPaddingSpace(
			[ParameterAttribute(DbType="NVarChar(MAX)")] string str,
			[ParameterAttribute(DbType="Int")] int? expectedLength,
			[ParameterAttribute(DbType="Bit")] bool? addPrefix
		)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), str, expectedLength, addPrefix);
			return ((string) result.ReturnValue);
		}

		[FunctionAttribute(Name="guest.fnGetStariNoviGranica", IsComposable=true)]
		public ISingleResult<guest_fnGetStariNoviGranicaResult> guest_fnGetStariNoviGranica(
		)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<guest_fnGetStariNoviGranicaResult>) result.ReturnValue);
		}

		#endregion Context database functions

	}

	#region Entity Tables

		#region dbo.tblAppMember
		[TableAttribute(Name="dbo.tblAppMember")]
		public partial class tblAppMember : EntityBase<tblAppMember, dbCalystoUnittestDataContext>, INotifyPropertyChanging, INotifyPropertyChanged, IPropertySetterInvoked
		{
			private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

			#region Storage members
			private int _AppMemberID;
			private int _AppMemberStatusID;
			private string _MSISDN;
			private string _FacebookId;
			private string _GoogleId;
			private string _Email;
			private string _Username;
			private string _Password;
			private DateTime? _BirthDate;
			private DateTime? _CreationDate;
			private DateTime? _LastLoginDate;
			private int _LoginsCount;
			private string _FirstName;
			private string _LastName;
			private string _Gender;
			private string _PersonalNote;
			private string _WebUrl;
			private string _Address;
			private string _ZipCode;
			private string _City;
			private string _Country;
			private string _IP;
			private int? _PosFirmaID;
			private bool? _IsQuizQuestionsEditor;
			private decimal? _StanjeRacuna;
			private int? _HomeMemberAddressID;
			private int? _WorkMemberAddressID;
			private int? _PrimaryMemberAddressID;
			private EntityRef<tblAppMemberStatus> _tblAppMemberStatus;
			private EntitySet<tblAppMemberPermission> _tblAppMemberPermissionList;
			private EntitySet<tblAppMemberPicture> _tblAppMemberPictureList;
			private EntitySet<tblAppMemberPicture2> _tblAppMemberPicture2List;
			private EntityRef<tblMemberAddress> _HomeMemberAddress;
			private EntityRef<tblMemberAddress> _PrimaryMemberAddress;
			private EntityRef<tblMemberAddress> _WorkMemberAddress;
			#endregion Storage members

			#region Extensibility Method Definitions
			partial void OnLoaded();
			partial void OnValidate(Calysto.Data.Linq.ChangeAction action);
			partial void OnCreated();
			partial void OnAppMemberIDChanging(int value);
			partial void OnAppMemberIDChanged();
			partial void OnAppMemberStatusIDChanging(int value);
			partial void OnAppMemberStatusIDChanged();
			partial void OnMSISDNChanging(string value);
			partial void OnMSISDNChanged();
			partial void OnFacebookIdChanging(string value);
			partial void OnFacebookIdChanged();
			partial void OnGoogleIdChanging(string value);
			partial void OnGoogleIdChanged();
			partial void OnEmailChanging(string value);
			partial void OnEmailChanged();
			partial void OnUsernameChanging(string value);
			partial void OnUsernameChanged();
			partial void OnPasswordChanging(string value);
			partial void OnPasswordChanged();
			partial void OnBirthDateChanging(DateTime? value);
			partial void OnBirthDateChanged();
			partial void OnCreationDateChanging(DateTime? value);
			partial void OnCreationDateChanged();
			partial void OnLastLoginDateChanging(DateTime? value);
			partial void OnLastLoginDateChanged();
			partial void OnLoginsCountChanging(int value);
			partial void OnLoginsCountChanged();
			partial void OnFirstNameChanging(string value);
			partial void OnFirstNameChanged();
			partial void OnLastNameChanging(string value);
			partial void OnLastNameChanged();
			partial void OnGenderChanging(string value);
			partial void OnGenderChanged();
			partial void OnPersonalNoteChanging(string value);
			partial void OnPersonalNoteChanged();
			partial void OnWebUrlChanging(string value);
			partial void OnWebUrlChanged();
			partial void OnAddressChanging(string value);
			partial void OnAddressChanged();
			partial void OnZipCodeChanging(string value);
			partial void OnZipCodeChanged();
			partial void OnCityChanging(string value);
			partial void OnCityChanged();
			partial void OnCountryChanging(string value);
			partial void OnCountryChanged();
			partial void OnIPChanging(string value);
			partial void OnIPChanged();
			partial void OnPosFirmaIDChanging(int? value);
			partial void OnPosFirmaIDChanged();
			partial void OnIsQuizQuestionsEditorChanging(bool? value);
			partial void OnIsQuizQuestionsEditorChanged();
			partial void OnStanjeRacunaChanging(decimal? value);
			partial void OnStanjeRacunaChanged();
			partial void OnHomeMemberAddressIDChanging(int? value);
			partial void OnHomeMemberAddressIDChanged();
			partial void OnWorkMemberAddressIDChanging(int? value);
			partial void OnWorkMemberAddressIDChanged();
			partial void OnPrimaryMemberAddressIDChanging(int? value);
			partial void OnPrimaryMemberAddressIDChanged();
			#endregion

			public tblAppMember()
			{
				_tblAppMemberStatus = default(EntityRef<tblAppMemberStatus>);
				_tblAppMemberPermissionList = new EntitySet<tblAppMemberPermission>(
					new Action<tblAppMemberPermission>(item=>{this.SendPropertyChanging(); item.tblAppMember=this;}), 
					new Action<tblAppMemberPermission>(item=>{this.SendPropertyChanging(); item.tblAppMember=null;}));
				_tblAppMemberPictureList = new EntitySet<tblAppMemberPicture>(
					new Action<tblAppMemberPicture>(item=>{this.SendPropertyChanging(); item.tblAppMember=this;}), 
					new Action<tblAppMemberPicture>(item=>{this.SendPropertyChanging(); item.tblAppMember=null;}));
				_tblAppMemberPicture2List = new EntitySet<tblAppMemberPicture2>(
					new Action<tblAppMemberPicture2>(item=>{this.SendPropertyChanging(); item.tblAppMember=this;}), 
					new Action<tblAppMemberPicture2>(item=>{this.SendPropertyChanging(); item.tblAppMember=null;}));
				_HomeMemberAddress = default(EntityRef<tblMemberAddress>);
				_PrimaryMemberAddress = default(EntityRef<tblMemberAddress>);
				_WorkMemberAddress = default(EntityRef<tblMemberAddress>);
				OnCreated();
			}

			#region Columns
			/// <summary>
			/// Column DbType=Int NOT NULL IDENTITY
			/// </summary>
			[ColumnAttribute(Storage="_AppMemberID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", CanBeNull=false, IsPrimaryKey=true, IsDbGenerated=true)]
			public int AppMemberID
			{
				get
				{
					return this._AppMemberID;
				}
				set
				{
					if (this._AppMemberID != value)
					{
						this.OnAppMemberIDChanging(value);
						this.SendPropertyChanging();
						this._AppMemberID = value;
						this.SendPropertyChanged("AppMemberID");
						this.OnAppMemberIDChanged();
					}
					this.SendPropertySetterInvoked("AppMemberID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int NOT NULL
			/// </summary>
			[ColumnAttribute(Storage="_AppMemberStatusID", DbType="Int NOT NULL", CanBeNull=false)]
			public int AppMemberStatusID
			{
				get
				{
					return this._AppMemberStatusID;
				}
				set
				{
					if (this._AppMemberStatusID != value)
					{
						this.OnAppMemberStatusIDChanging(value);
						this.SendPropertyChanging();
						this._AppMemberStatusID = value;
						this.SendPropertyChanged("AppMemberStatusID");
						this.OnAppMemberStatusIDChanged();
					}
					this.SendPropertySetterInvoked("AppMemberStatusID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(15)
			/// </summary>
			[ColumnAttribute(Storage="_MSISDN", DbType="VarChar(15)", CanBeNull=true)]
			public string MSISDN
			{
				get
				{
					return this._MSISDN;
				}
				set
				{
					if (this._MSISDN != value)
					{
						this.OnMSISDNChanging(value);
						this.SendPropertyChanging();
						this._MSISDN = value;
						this.SendPropertyChanged("MSISDN");
						this.OnMSISDNChanged();
					}
					this.SendPropertySetterInvoked("MSISDN", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_FacebookId", DbType="VarChar(50)", CanBeNull=true)]
			public string FacebookId
			{
				get
				{
					return this._FacebookId;
				}
				set
				{
					if (this._FacebookId != value)
					{
						this.OnFacebookIdChanging(value);
						this.SendPropertyChanging();
						this._FacebookId = value;
						this.SendPropertyChanged("FacebookId");
						this.OnFacebookIdChanged();
					}
					this.SendPropertySetterInvoked("FacebookId", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_GoogleId", DbType="VarChar(50)", CanBeNull=true)]
			public string GoogleId
			{
				get
				{
					return this._GoogleId;
				}
				set
				{
					if (this._GoogleId != value)
					{
						this.OnGoogleIdChanging(value);
						this.SendPropertyChanging();
						this._GoogleId = value;
						this.SendPropertyChanged("GoogleId");
						this.OnGoogleIdChanged();
					}
					this.SendPropertySetterInvoked("GoogleId", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(150)
			/// </summary>
			[ColumnAttribute(Storage="_Email", DbType="VarChar(150)", CanBeNull=true)]
			public string Email
			{
				get
				{
					return this._Email;
				}
				set
				{
					if (this._Email != value)
					{
						this.OnEmailChanging(value);
						this.SendPropertyChanging();
						this._Email = value;
						this.SendPropertyChanged("Email");
						this.OnEmailChanged();
					}
					this.SendPropertySetterInvoked("Email", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_Username", DbType="NVarChar(50)", CanBeNull=true)]
			public string Username
			{
				get
				{
					return this._Username;
				}
				set
				{
					if (this._Username != value)
					{
						this.OnUsernameChanging(value);
						this.SendPropertyChanging();
						this._Username = value;
						this.SendPropertyChanged("Username");
						this.OnUsernameChanged();
					}
					this.SendPropertySetterInvoked("Username", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_Password", DbType="NVarChar(50)", CanBeNull=true)]
			public string Password
			{
				get
				{
					return this._Password;
				}
				set
				{
					if (this._Password != value)
					{
						this.OnPasswordChanging(value);
						this.SendPropertyChanging();
						this._Password = value;
						this.SendPropertyChanged("Password");
						this.OnPasswordChanged();
					}
					this.SendPropertySetterInvoked("Password", value);
				}
			}
			
			/// <summary>
			/// Column DbType=DateTime
			/// </summary>
			[ColumnAttribute(Storage="_BirthDate", DbType="DateTime", CanBeNull=true)]
			public DateTime? BirthDate
			{
				get
				{
					return this._BirthDate;
				}
				set
				{
					if (this._BirthDate != value)
					{
						this.OnBirthDateChanging(value);
						this.SendPropertyChanging();
						this._BirthDate = value;
						this.SendPropertyChanged("BirthDate");
						this.OnBirthDateChanged();
					}
					this.SendPropertySetterInvoked("BirthDate", value);
				}
			}
			
			/// <summary>
			/// Column DbType=DateTime
			/// </summary>
			[ColumnAttribute(Storage="_CreationDate", DbType="DateTime", CanBeNull=true)]
			public DateTime? CreationDate
			{
				get
				{
					return this._CreationDate;
				}
				set
				{
					if (this._CreationDate != value)
					{
						this.OnCreationDateChanging(value);
						this.SendPropertyChanging();
						this._CreationDate = value;
						this.SendPropertyChanged("CreationDate");
						this.OnCreationDateChanged();
					}
					this.SendPropertySetterInvoked("CreationDate", value);
				}
			}
			
			/// <summary>
			/// Column DbType=DateTime
			/// </summary>
			[ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime", CanBeNull=true)]
			public DateTime? LastLoginDate
			{
				get
				{
					return this._LastLoginDate;
				}
				set
				{
					if (this._LastLoginDate != value)
					{
						this.OnLastLoginDateChanging(value);
						this.SendPropertyChanging();
						this._LastLoginDate = value;
						this.SendPropertyChanged("LastLoginDate");
						this.OnLastLoginDateChanged();
					}
					this.SendPropertySetterInvoked("LastLoginDate", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int NOT NULL
			/// </summary>
			[ColumnAttribute(Storage="_LoginsCount", DbType="Int NOT NULL", CanBeNull=false)]
			public int LoginsCount
			{
				get
				{
					return this._LoginsCount;
				}
				set
				{
					if (this._LoginsCount != value)
					{
						this.OnLoginsCountChanging(value);
						this.SendPropertyChanging();
						this._LoginsCount = value;
						this.SendPropertyChanged("LoginsCount");
						this.OnLoginsCountChanged();
					}
					this.SendPropertySetterInvoked("LoginsCount", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(100)
			/// </summary>
			[ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)", CanBeNull=true)]
			public string FirstName
			{
				get
				{
					return this._FirstName;
				}
				set
				{
					if (this._FirstName != value)
					{
						this.OnFirstNameChanging(value);
						this.SendPropertyChanging();
						this._FirstName = value;
						this.SendPropertyChanged("FirstName");
						this.OnFirstNameChanged();
					}
					this.SendPropertySetterInvoked("FirstName", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(100)
			/// </summary>
			[ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)", CanBeNull=true)]
			public string LastName
			{
				get
				{
					return this._LastName;
				}
				set
				{
					if (this._LastName != value)
					{
						this.OnLastNameChanging(value);
						this.SendPropertyChanging();
						this._LastName = value;
						this.SendPropertyChanged("LastName");
						this.OnLastNameChanged();
					}
					this.SendPropertySetterInvoked("LastName", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(10)
			/// </summary>
			[ColumnAttribute(Storage="_Gender", DbType="VarChar(10)", CanBeNull=true)]
			public string Gender
			{
				get
				{
					return this._Gender;
				}
				set
				{
					if (this._Gender != value)
					{
						this.OnGenderChanging(value);
						this.SendPropertyChanging();
						this._Gender = value;
						this.SendPropertyChanged("Gender");
						this.OnGenderChanged();
					}
					this.SendPropertySetterInvoked("Gender", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(1000)
			/// </summary>
			[ColumnAttribute(Storage="_PersonalNote", DbType="NVarChar(1000)", CanBeNull=true)]
			public string PersonalNote
			{
				get
				{
					return this._PersonalNote;
				}
				set
				{
					if (this._PersonalNote != value)
					{
						this.OnPersonalNoteChanging(value);
						this.SendPropertyChanging();
						this._PersonalNote = value;
						this.SendPropertyChanged("PersonalNote");
						this.OnPersonalNoteChanged();
					}
					this.SendPropertySetterInvoked("PersonalNote", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(255)
			/// </summary>
			[ColumnAttribute(Storage="_WebUrl", DbType="VarChar(255)", CanBeNull=true)]
			public string WebUrl
			{
				get
				{
					return this._WebUrl;
				}
				set
				{
					if (this._WebUrl != value)
					{
						this.OnWebUrlChanging(value);
						this.SendPropertyChanging();
						this._WebUrl = value;
						this.SendPropertyChanged("WebUrl");
						this.OnWebUrlChanged();
					}
					this.SendPropertySetterInvoked("WebUrl", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(255)
			/// </summary>
			[ColumnAttribute(Storage="_Address", DbType="NVarChar(255)", CanBeNull=true)]
			public string Address
			{
				get
				{
					return this._Address;
				}
				set
				{
					if (this._Address != value)
					{
						this.OnAddressChanging(value);
						this.SendPropertyChanging();
						this._Address = value;
						this.SendPropertyChanged("Address");
						this.OnAddressChanged();
					}
					this.SendPropertySetterInvoked("Address", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_ZipCode", DbType="NVarChar(50)", CanBeNull=true)]
			public string ZipCode
			{
				get
				{
					return this._ZipCode;
				}
				set
				{
					if (this._ZipCode != value)
					{
						this.OnZipCodeChanging(value);
						this.SendPropertyChanging();
						this._ZipCode = value;
						this.SendPropertyChanged("ZipCode");
						this.OnZipCodeChanged();
					}
					this.SendPropertySetterInvoked("ZipCode", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(250)
			/// </summary>
			[ColumnAttribute(Storage="_City", DbType="NVarChar(250)", CanBeNull=true)]
			public string City
			{
				get
				{
					return this._City;
				}
				set
				{
					if (this._City != value)
					{
						this.OnCityChanging(value);
						this.SendPropertyChanging();
						this._City = value;
						this.SendPropertyChanged("City");
						this.OnCityChanged();
					}
					this.SendPropertySetterInvoked("City", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(250)
			/// </summary>
			[ColumnAttribute(Storage="_Country", DbType="NVarChar(250)", CanBeNull=true)]
			public string Country
			{
				get
				{
					return this._Country;
				}
				set
				{
					if (this._Country != value)
					{
						this.OnCountryChanging(value);
						this.SendPropertyChanging();
						this._Country = value;
						this.SendPropertyChanged("Country");
						this.OnCountryChanged();
					}
					this.SendPropertySetterInvoked("Country", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_IP", DbType="VarChar(50)", CanBeNull=true)]
			public string IP
			{
				get
				{
					return this._IP;
				}
				set
				{
					if (this._IP != value)
					{
						this.OnIPChanging(value);
						this.SendPropertyChanging();
						this._IP = value;
						this.SendPropertyChanged("IP");
						this.OnIPChanged();
					}
					this.SendPropertySetterInvoked("IP", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int
			/// </summary>
			[ColumnAttribute(Storage="_PosFirmaID", DbType="Int", CanBeNull=true)]
			public int? PosFirmaID
			{
				get
				{
					return this._PosFirmaID;
				}
				set
				{
					if (this._PosFirmaID != value)
					{
						this.OnPosFirmaIDChanging(value);
						this.SendPropertyChanging();
						this._PosFirmaID = value;
						this.SendPropertyChanged("PosFirmaID");
						this.OnPosFirmaIDChanged();
					}
					this.SendPropertySetterInvoked("PosFirmaID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit
			/// </summary>
			[ColumnAttribute(Storage="_IsQuizQuestionsEditor", DbType="Bit", CanBeNull=true)]
			public bool? IsQuizQuestionsEditor
			{
				get
				{
					return this._IsQuizQuestionsEditor;
				}
				set
				{
					if (this._IsQuizQuestionsEditor != value)
					{
						this.OnIsQuizQuestionsEditorChanging(value);
						this.SendPropertyChanging();
						this._IsQuizQuestionsEditor = value;
						this.SendPropertyChanged("IsQuizQuestionsEditor");
						this.OnIsQuizQuestionsEditorChanged();
					}
					this.SendPropertySetterInvoked("IsQuizQuestionsEditor", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Money
			/// </summary>
			[ColumnAttribute(Storage="_StanjeRacuna", DbType="Money", CanBeNull=true)]
			public decimal? StanjeRacuna
			{
				get
				{
					return this._StanjeRacuna;
				}
				set
				{
					if (this._StanjeRacuna != value)
					{
						this.OnStanjeRacunaChanging(value);
						this.SendPropertyChanging();
						this._StanjeRacuna = value;
						this.SendPropertyChanged("StanjeRacuna");
						this.OnStanjeRacunaChanged();
					}
					this.SendPropertySetterInvoked("StanjeRacuna", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int
			/// </summary>
			[ColumnAttribute(Storage="_HomeMemberAddressID", DbType="Int", CanBeNull=true)]
			public int? HomeMemberAddressID
			{
				get
				{
					return this._HomeMemberAddressID;
				}
				set
				{
					if (this._HomeMemberAddressID != value)
					{
						this.OnHomeMemberAddressIDChanging(value);
						this.SendPropertyChanging();
						this._HomeMemberAddressID = value;
						this.SendPropertyChanged("HomeMemberAddressID");
						this.OnHomeMemberAddressIDChanged();
					}
					this.SendPropertySetterInvoked("HomeMemberAddressID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int
			/// </summary>
			[ColumnAttribute(Storage="_WorkMemberAddressID", DbType="Int", CanBeNull=true)]
			public int? WorkMemberAddressID
			{
				get
				{
					return this._WorkMemberAddressID;
				}
				set
				{
					if (this._WorkMemberAddressID != value)
					{
						this.OnWorkMemberAddressIDChanging(value);
						this.SendPropertyChanging();
						this._WorkMemberAddressID = value;
						this.SendPropertyChanged("WorkMemberAddressID");
						this.OnWorkMemberAddressIDChanged();
					}
					this.SendPropertySetterInvoked("WorkMemberAddressID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int
			/// </summary>
			[ColumnAttribute(Storage="_PrimaryMemberAddressID", DbType="Int", CanBeNull=true)]
			public int? PrimaryMemberAddressID
			{
				get
				{
					return this._PrimaryMemberAddressID;
				}
				set
				{
					if (this._PrimaryMemberAddressID != value)
					{
						this.OnPrimaryMemberAddressIDChanging(value);
						this.SendPropertyChanging();
						this._PrimaryMemberAddressID = value;
						this.SendPropertyChanged("PrimaryMemberAddressID");
						this.OnPrimaryMemberAddressIDChanged();
					}
					this.SendPropertySetterInvoked("PrimaryMemberAddressID", value);
				}
			}
			
			#endregion Columns

			#region Associations
			/// <summary>
			/// Association [FK][Many]tblAppMember.AppMemberStatusID --- [PK][One]tblAppMemberStatus.AppMemberStatusID
			/// </summary>
			[AssociationAttribute(Name="FK_AppMember_AppMemberStatus", Storage="_tblAppMemberStatus", ThisKey="AppMemberStatusID", OtherKey="AppMemberStatusID", IsUnique=false, IsForeignKey=true)]
			public tblAppMemberStatus tblAppMemberStatus
			{
				get
				{
					return this._tblAppMemberStatus.Entity;
				}
				set
				{
					tblAppMemberStatus previousValue = this._tblAppMemberStatus.Entity;
					if ((previousValue != value) || (this._tblAppMemberStatus.HasLoadedOrAssignedValue == false))
					{
						this.SendPropertyChanging();
						if (previousValue != null)
						{
							this._tblAppMemberStatus.Entity = null;
							previousValue.tblAppMemberList.Remove(this);
						}
						this._tblAppMemberStatus.Entity = value;
						if (value != null)
						{
							value.tblAppMemberList.Add(this);
							this._AppMemberStatusID = value.AppMemberStatusID;
						}
						else
						{
							this._AppMemberStatusID = default(int);
						}
						this.SendPropertyChanged("tblAppMemberStatus");
					}
					this.SendPropertySetterInvoked("tblAppMemberStatus", value);
				}
			}
			
			/// <summary>
			/// Association [PK][One]tblAppMember.AppMemberID --- [FK][Many]tblAppMemberPermission.AppMemberID
			/// </summary>
			[AssociationAttribute(Name="FK_AppMemberPermission_AppMember", Storage="_tblAppMemberPermissionList", ThisKey="AppMemberID", OtherKey="AppMemberID", IsUnique=false, IsForeignKey=false, DeleteRule="NoAction")]
			public EntitySet<tblAppMemberPermission> tblAppMemberPermissionList
			{
				get { return this._tblAppMemberPermissionList; }
				set { this._tblAppMemberPermissionList.Assign(value); }
			}
			
			/// <summary>
			/// Association [PK][One]tblAppMember.AppMemberID --- [FK][Many]tblAppMemberPicture.AppMemberID
			/// </summary>
			[AssociationAttribute(Name="FK_AppMemberPicture_AppMember", Storage="_tblAppMemberPictureList", ThisKey="AppMemberID", OtherKey="AppMemberID", IsUnique=false, IsForeignKey=false, DeleteRule="Cascade")]
			public EntitySet<tblAppMemberPicture> tblAppMemberPictureList
			{
				get { return this._tblAppMemberPictureList; }
				set { this._tblAppMemberPictureList.Assign(value); }
			}
			
			/// <summary>
			/// Association [PK][One]tblAppMember.AppMemberID --- [FK][Many]tblAppMemberPicture2.AppMemberID
			/// </summary>
			[AssociationAttribute(Name="FK_tblAppMemberPicture2_tblAppMember", Storage="_tblAppMemberPicture2List", ThisKey="AppMemberID", OtherKey="AppMemberID", IsUnique=false, IsForeignKey=false, DeleteRule="SetDefault")]
			public EntitySet<tblAppMemberPicture2> tblAppMemberPicture2List
			{
				get { return this._tblAppMemberPicture2List; }
				set { this._tblAppMemberPicture2List.Assign(value); }
			}
			
			/// <summary>
			/// Association [FK][Many]tblAppMember.HomeMemberAddressID --- [PK][One]tblMemberAddress.MemberAddressID
			/// </summary>
			[AssociationAttribute(Name="FKEF_HomeMemberAddress", Storage="_HomeMemberAddress", ThisKey="HomeMemberAddressID", OtherKey="MemberAddressID", IsUnique=false, IsForeignKey=true)]
			public tblMemberAddress HomeMemberAddress
			{
				get
				{
					return this._HomeMemberAddress.Entity;
				}
				set
				{
					tblMemberAddress previousValue = this._HomeMemberAddress.Entity;
					if ((previousValue != value) || (this._HomeMemberAddress.HasLoadedOrAssignedValue == false))
					{
						this.SendPropertyChanging();
						if (previousValue != null)
						{
							this._HomeMemberAddress.Entity = null;
							previousValue.HomeMemberAddressList.Remove(this);
						}
						this._HomeMemberAddress.Entity = value;
						if (value != null)
						{
							value.HomeMemberAddressList.Add(this);
							this._HomeMemberAddressID = value.MemberAddressID;
						}
						else
						{
							this._HomeMemberAddressID = default(int?);
						}
						this.SendPropertyChanged("HomeMemberAddress");
					}
					this.SendPropertySetterInvoked("HomeMemberAddress", value);
				}
			}
			
			/// <summary>
			/// Association [FK][Many]tblAppMember.PrimaryMemberAddressID --- [PK][One]tblMemberAddress.MemberAddressID
			/// </summary>
			[AssociationAttribute(Name="FKEF_PrimaryMemberAddress", Storage="_PrimaryMemberAddress", ThisKey="PrimaryMemberAddressID", OtherKey="MemberAddressID", IsUnique=false, IsForeignKey=true)]
			public tblMemberAddress PrimaryMemberAddress
			{
				get
				{
					return this._PrimaryMemberAddress.Entity;
				}
				set
				{
					tblMemberAddress previousValue = this._PrimaryMemberAddress.Entity;
					if ((previousValue != value) || (this._PrimaryMemberAddress.HasLoadedOrAssignedValue == false))
					{
						this.SendPropertyChanging();
						if (previousValue != null)
						{
							this._PrimaryMemberAddress.Entity = null;
							previousValue.PrimaryMemberAddressList.Remove(this);
						}
						this._PrimaryMemberAddress.Entity = value;
						if (value != null)
						{
							value.PrimaryMemberAddressList.Add(this);
							this._PrimaryMemberAddressID = value.MemberAddressID;
						}
						else
						{
							this._PrimaryMemberAddressID = default(int?);
						}
						this.SendPropertyChanged("PrimaryMemberAddress");
					}
					this.SendPropertySetterInvoked("PrimaryMemberAddress", value);
				}
			}
			
			/// <summary>
			/// Association [FK][Many]tblAppMember.WorkMemberAddressID --- [PK][One]tblMemberAddress.MemberAddressID
			/// </summary>
			[AssociationAttribute(Name="FKEF_WorkMemberAddress", Storage="_WorkMemberAddress", ThisKey="WorkMemberAddressID", OtherKey="MemberAddressID", IsUnique=false, IsForeignKey=true)]
			public tblMemberAddress WorkMemberAddress
			{
				get
				{
					return this._WorkMemberAddress.Entity;
				}
				set
				{
					tblMemberAddress previousValue = this._WorkMemberAddress.Entity;
					if ((previousValue != value) || (this._WorkMemberAddress.HasLoadedOrAssignedValue == false))
					{
						this.SendPropertyChanging();
						if (previousValue != null)
						{
							this._WorkMemberAddress.Entity = null;
							previousValue.WorkMemberAddressList.Remove(this);
						}
						this._WorkMemberAddress.Entity = value;
						if (value != null)
						{
							value.WorkMemberAddressList.Add(this);
							this._WorkMemberAddressID = value.MemberAddressID;
						}
						else
						{
							this._WorkMemberAddressID = default(int?);
						}
						this.SendPropertyChanged("WorkMemberAddress");
					}
					this.SendPropertySetterInvoked("WorkMemberAddress", value);
				}
			}
			
			#endregion Associations

			#region Property changing events
			public event PropertyChangingEventHandler PropertyChanging;
			public event PropertyChangedEventHandler PropertyChanged;
			public event PropertySetterInvokedEventHandler PropertySetterInvoked;
			
			protected virtual void SendPropertyChanging()
			{
				if (this.PropertyChanging != null)
				{
					this.PropertyChanging(this, emptyChangingEventArgs);
				}
			}
			
			protected virtual void SendPropertyChanged(String propertyName)
			{
				if (this.PropertyChanged != null)
				{
					this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
				}
			}
			
			protected virtual void SendPropertySetterInvoked(String propertyName, Object value)
			{
				if (this.PropertySetterInvoked != null)
				{
					this.PropertySetterInvoked.Invoke(this, propertyName, value);
				}
			}
			#endregion Property changing events
		}
		#endregion dbo.tblAppMember

		#region dbo.tblAppMember2
		[TableAttribute(Name="dbo.tblAppMember2")]
		public partial class tblAppMember2 : EntityBase<tblAppMember2, dbCalystoUnittestDataContext>, INotifyPropertyChanging, INotifyPropertyChanged, IPropertySetterInvoked
		{
			private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

			#region Storage members
			private int _AppMemberID;
			private int _AppMemberStatusID;
			private string _MSISDN;
			private string _FacebookId;
			private string _GoogleId;
			private string _Email;
			private string _Username;
			private string _Password;
			private DateTime? _BirthDate;
			private DateTime? _CreationDate;
			private DateTime? _LastLoginDate;
			private int _LoginsCount;
			private string _FirstName;
			private string _LastName;
			private string _Gender;
			private string _PersonalNote;
			private string _WebUrl;
			private string _Address;
			private string _ZipCode;
			private string _City;
			private string _Country;
			private string _IP;
			private int? _PosFirmaID;
			private string _ReferentNote;
			private bool? _IsQuizQuestionsEditor;
			#endregion Storage members

			#region Extensibility Method Definitions
			partial void OnLoaded();
			partial void OnValidate(Calysto.Data.Linq.ChangeAction action);
			partial void OnCreated();
			partial void OnAppMemberIDChanging(int value);
			partial void OnAppMemberIDChanged();
			partial void OnAppMemberStatusIDChanging(int value);
			partial void OnAppMemberStatusIDChanged();
			partial void OnMSISDNChanging(string value);
			partial void OnMSISDNChanged();
			partial void OnFacebookIdChanging(string value);
			partial void OnFacebookIdChanged();
			partial void OnGoogleIdChanging(string value);
			partial void OnGoogleIdChanged();
			partial void OnEmailChanging(string value);
			partial void OnEmailChanged();
			partial void OnUsernameChanging(string value);
			partial void OnUsernameChanged();
			partial void OnPasswordChanging(string value);
			partial void OnPasswordChanged();
			partial void OnBirthDateChanging(DateTime? value);
			partial void OnBirthDateChanged();
			partial void OnCreationDateChanging(DateTime? value);
			partial void OnCreationDateChanged();
			partial void OnLastLoginDateChanging(DateTime? value);
			partial void OnLastLoginDateChanged();
			partial void OnLoginsCountChanging(int value);
			partial void OnLoginsCountChanged();
			partial void OnFirstNameChanging(string value);
			partial void OnFirstNameChanged();
			partial void OnLastNameChanging(string value);
			partial void OnLastNameChanged();
			partial void OnGenderChanging(string value);
			partial void OnGenderChanged();
			partial void OnPersonalNoteChanging(string value);
			partial void OnPersonalNoteChanged();
			partial void OnWebUrlChanging(string value);
			partial void OnWebUrlChanged();
			partial void OnAddressChanging(string value);
			partial void OnAddressChanged();
			partial void OnZipCodeChanging(string value);
			partial void OnZipCodeChanged();
			partial void OnCityChanging(string value);
			partial void OnCityChanged();
			partial void OnCountryChanging(string value);
			partial void OnCountryChanged();
			partial void OnIPChanging(string value);
			partial void OnIPChanged();
			partial void OnPosFirmaIDChanging(int? value);
			partial void OnPosFirmaIDChanged();
			partial void OnReferentNoteChanging(string value);
			partial void OnReferentNoteChanged();
			partial void OnIsQuizQuestionsEditorChanging(bool? value);
			partial void OnIsQuizQuestionsEditorChanged();
			#endregion

			public tblAppMember2()
			{
				OnCreated();
			}

			#region Columns
			/// <summary>
			/// Column DbType=Int NOT NULL
			/// </summary>
			[ColumnAttribute(Storage="_AppMemberID", DbType="Int NOT NULL", CanBeNull=false)]
			public int AppMemberID
			{
				get
				{
					return this._AppMemberID;
				}
				set
				{
					if (this._AppMemberID != value)
					{
						this.OnAppMemberIDChanging(value);
						this.SendPropertyChanging();
						this._AppMemberID = value;
						this.SendPropertyChanged("AppMemberID");
						this.OnAppMemberIDChanged();
					}
					this.SendPropertySetterInvoked("AppMemberID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int NOT NULL
			/// </summary>
			[ColumnAttribute(Storage="_AppMemberStatusID", DbType="Int NOT NULL", CanBeNull=false)]
			public int AppMemberStatusID
			{
				get
				{
					return this._AppMemberStatusID;
				}
				set
				{
					if (this._AppMemberStatusID != value)
					{
						this.OnAppMemberStatusIDChanging(value);
						this.SendPropertyChanging();
						this._AppMemberStatusID = value;
						this.SendPropertyChanged("AppMemberStatusID");
						this.OnAppMemberStatusIDChanged();
					}
					this.SendPropertySetterInvoked("AppMemberStatusID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(15)
			/// </summary>
			[ColumnAttribute(Storage="_MSISDN", DbType="VarChar(15)", CanBeNull=true)]
			public string MSISDN
			{
				get
				{
					return this._MSISDN;
				}
				set
				{
					if (this._MSISDN != value)
					{
						this.OnMSISDNChanging(value);
						this.SendPropertyChanging();
						this._MSISDN = value;
						this.SendPropertyChanged("MSISDN");
						this.OnMSISDNChanged();
					}
					this.SendPropertySetterInvoked("MSISDN", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_FacebookId", DbType="VarChar(50)", CanBeNull=true)]
			public string FacebookId
			{
				get
				{
					return this._FacebookId;
				}
				set
				{
					if (this._FacebookId != value)
					{
						this.OnFacebookIdChanging(value);
						this.SendPropertyChanging();
						this._FacebookId = value;
						this.SendPropertyChanged("FacebookId");
						this.OnFacebookIdChanged();
					}
					this.SendPropertySetterInvoked("FacebookId", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_GoogleId", DbType="VarChar(50)", CanBeNull=true)]
			public string GoogleId
			{
				get
				{
					return this._GoogleId;
				}
				set
				{
					if (this._GoogleId != value)
					{
						this.OnGoogleIdChanging(value);
						this.SendPropertyChanging();
						this._GoogleId = value;
						this.SendPropertyChanged("GoogleId");
						this.OnGoogleIdChanged();
					}
					this.SendPropertySetterInvoked("GoogleId", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(150)
			/// </summary>
			[ColumnAttribute(Storage="_Email", DbType="VarChar(150)", CanBeNull=true)]
			public string Email
			{
				get
				{
					return this._Email;
				}
				set
				{
					if (this._Email != value)
					{
						this.OnEmailChanging(value);
						this.SendPropertyChanging();
						this._Email = value;
						this.SendPropertyChanged("Email");
						this.OnEmailChanged();
					}
					this.SendPropertySetterInvoked("Email", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_Username", DbType="NVarChar(50)", CanBeNull=true)]
			public string Username
			{
				get
				{
					return this._Username;
				}
				set
				{
					if (this._Username != value)
					{
						this.OnUsernameChanging(value);
						this.SendPropertyChanging();
						this._Username = value;
						this.SendPropertyChanged("Username");
						this.OnUsernameChanged();
					}
					this.SendPropertySetterInvoked("Username", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_Password", DbType="NVarChar(50)", CanBeNull=true)]
			public string Password
			{
				get
				{
					return this._Password;
				}
				set
				{
					if (this._Password != value)
					{
						this.OnPasswordChanging(value);
						this.SendPropertyChanging();
						this._Password = value;
						this.SendPropertyChanged("Password");
						this.OnPasswordChanged();
					}
					this.SendPropertySetterInvoked("Password", value);
				}
			}
			
			/// <summary>
			/// Column DbType=DateTime
			/// </summary>
			[ColumnAttribute(Storage="_BirthDate", DbType="DateTime", CanBeNull=true)]
			public DateTime? BirthDate
			{
				get
				{
					return this._BirthDate;
				}
				set
				{
					if (this._BirthDate != value)
					{
						this.OnBirthDateChanging(value);
						this.SendPropertyChanging();
						this._BirthDate = value;
						this.SendPropertyChanged("BirthDate");
						this.OnBirthDateChanged();
					}
					this.SendPropertySetterInvoked("BirthDate", value);
				}
			}
			
			/// <summary>
			/// Column DbType=DateTime
			/// </summary>
			[ColumnAttribute(Storage="_CreationDate", DbType="DateTime", CanBeNull=true)]
			public DateTime? CreationDate
			{
				get
				{
					return this._CreationDate;
				}
				set
				{
					if (this._CreationDate != value)
					{
						this.OnCreationDateChanging(value);
						this.SendPropertyChanging();
						this._CreationDate = value;
						this.SendPropertyChanged("CreationDate");
						this.OnCreationDateChanged();
					}
					this.SendPropertySetterInvoked("CreationDate", value);
				}
			}
			
			/// <summary>
			/// Column DbType=DateTime
			/// </summary>
			[ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime", CanBeNull=true)]
			public DateTime? LastLoginDate
			{
				get
				{
					return this._LastLoginDate;
				}
				set
				{
					if (this._LastLoginDate != value)
					{
						this.OnLastLoginDateChanging(value);
						this.SendPropertyChanging();
						this._LastLoginDate = value;
						this.SendPropertyChanged("LastLoginDate");
						this.OnLastLoginDateChanged();
					}
					this.SendPropertySetterInvoked("LastLoginDate", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int NOT NULL
			/// </summary>
			[ColumnAttribute(Storage="_LoginsCount", DbType="Int NOT NULL", CanBeNull=false)]
			public int LoginsCount
			{
				get
				{
					return this._LoginsCount;
				}
				set
				{
					if (this._LoginsCount != value)
					{
						this.OnLoginsCountChanging(value);
						this.SendPropertyChanging();
						this._LoginsCount = value;
						this.SendPropertyChanged("LoginsCount");
						this.OnLoginsCountChanged();
					}
					this.SendPropertySetterInvoked("LoginsCount", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(100)
			/// </summary>
			[ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)", CanBeNull=true)]
			public string FirstName
			{
				get
				{
					return this._FirstName;
				}
				set
				{
					if (this._FirstName != value)
					{
						this.OnFirstNameChanging(value);
						this.SendPropertyChanging();
						this._FirstName = value;
						this.SendPropertyChanged("FirstName");
						this.OnFirstNameChanged();
					}
					this.SendPropertySetterInvoked("FirstName", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(100)
			/// </summary>
			[ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)", CanBeNull=true)]
			public string LastName
			{
				get
				{
					return this._LastName;
				}
				set
				{
					if (this._LastName != value)
					{
						this.OnLastNameChanging(value);
						this.SendPropertyChanging();
						this._LastName = value;
						this.SendPropertyChanged("LastName");
						this.OnLastNameChanged();
					}
					this.SendPropertySetterInvoked("LastName", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(10)
			/// </summary>
			[ColumnAttribute(Storage="_Gender", DbType="VarChar(10)", CanBeNull=true)]
			public string Gender
			{
				get
				{
					return this._Gender;
				}
				set
				{
					if (this._Gender != value)
					{
						this.OnGenderChanging(value);
						this.SendPropertyChanging();
						this._Gender = value;
						this.SendPropertyChanged("Gender");
						this.OnGenderChanged();
					}
					this.SendPropertySetterInvoked("Gender", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(1000)
			/// </summary>
			[ColumnAttribute(Storage="_PersonalNote", DbType="NVarChar(1000)", CanBeNull=true)]
			public string PersonalNote
			{
				get
				{
					return this._PersonalNote;
				}
				set
				{
					if (this._PersonalNote != value)
					{
						this.OnPersonalNoteChanging(value);
						this.SendPropertyChanging();
						this._PersonalNote = value;
						this.SendPropertyChanged("PersonalNote");
						this.OnPersonalNoteChanged();
					}
					this.SendPropertySetterInvoked("PersonalNote", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(255)
			/// </summary>
			[ColumnAttribute(Storage="_WebUrl", DbType="VarChar(255)", CanBeNull=true)]
			public string WebUrl
			{
				get
				{
					return this._WebUrl;
				}
				set
				{
					if (this._WebUrl != value)
					{
						this.OnWebUrlChanging(value);
						this.SendPropertyChanging();
						this._WebUrl = value;
						this.SendPropertyChanged("WebUrl");
						this.OnWebUrlChanged();
					}
					this.SendPropertySetterInvoked("WebUrl", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(255)
			/// </summary>
			[ColumnAttribute(Storage="_Address", DbType="NVarChar(255)", CanBeNull=true)]
			public string Address
			{
				get
				{
					return this._Address;
				}
				set
				{
					if (this._Address != value)
					{
						this.OnAddressChanging(value);
						this.SendPropertyChanging();
						this._Address = value;
						this.SendPropertyChanged("Address");
						this.OnAddressChanged();
					}
					this.SendPropertySetterInvoked("Address", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_ZipCode", DbType="NVarChar(50)", CanBeNull=true)]
			public string ZipCode
			{
				get
				{
					return this._ZipCode;
				}
				set
				{
					if (this._ZipCode != value)
					{
						this.OnZipCodeChanging(value);
						this.SendPropertyChanging();
						this._ZipCode = value;
						this.SendPropertyChanged("ZipCode");
						this.OnZipCodeChanged();
					}
					this.SendPropertySetterInvoked("ZipCode", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(250)
			/// </summary>
			[ColumnAttribute(Storage="_City", DbType="NVarChar(250)", CanBeNull=true)]
			public string City
			{
				get
				{
					return this._City;
				}
				set
				{
					if (this._City != value)
					{
						this.OnCityChanging(value);
						this.SendPropertyChanging();
						this._City = value;
						this.SendPropertyChanged("City");
						this.OnCityChanged();
					}
					this.SendPropertySetterInvoked("City", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(250)
			/// </summary>
			[ColumnAttribute(Storage="_Country", DbType="NVarChar(250)", CanBeNull=true)]
			public string Country
			{
				get
				{
					return this._Country;
				}
				set
				{
					if (this._Country != value)
					{
						this.OnCountryChanging(value);
						this.SendPropertyChanging();
						this._Country = value;
						this.SendPropertyChanged("Country");
						this.OnCountryChanged();
					}
					this.SendPropertySetterInvoked("Country", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_IP", DbType="VarChar(50)", CanBeNull=true)]
			public string IP
			{
				get
				{
					return this._IP;
				}
				set
				{
					if (this._IP != value)
					{
						this.OnIPChanging(value);
						this.SendPropertyChanging();
						this._IP = value;
						this.SendPropertyChanged("IP");
						this.OnIPChanged();
					}
					this.SendPropertySetterInvoked("IP", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int
			/// </summary>
			[ColumnAttribute(Storage="_PosFirmaID", DbType="Int", CanBeNull=true)]
			public int? PosFirmaID
			{
				get
				{
					return this._PosFirmaID;
				}
				set
				{
					if (this._PosFirmaID != value)
					{
						this.OnPosFirmaIDChanging(value);
						this.SendPropertyChanging();
						this._PosFirmaID = value;
						this.SendPropertyChanged("PosFirmaID");
						this.OnPosFirmaIDChanged();
					}
					this.SendPropertySetterInvoked("PosFirmaID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(1000)
			/// </summary>
			[ColumnAttribute(Storage="_ReferentNote", DbType="NVarChar(1000)", CanBeNull=true)]
			public string ReferentNote
			{
				get
				{
					return this._ReferentNote;
				}
				set
				{
					if (this._ReferentNote != value)
					{
						this.OnReferentNoteChanging(value);
						this.SendPropertyChanging();
						this._ReferentNote = value;
						this.SendPropertyChanged("ReferentNote");
						this.OnReferentNoteChanged();
					}
					this.SendPropertySetterInvoked("ReferentNote", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit
			/// </summary>
			[ColumnAttribute(Storage="_IsQuizQuestionsEditor", DbType="Bit", CanBeNull=true)]
			public bool? IsQuizQuestionsEditor
			{
				get
				{
					return this._IsQuizQuestionsEditor;
				}
				set
				{
					if (this._IsQuizQuestionsEditor != value)
					{
						this.OnIsQuizQuestionsEditorChanging(value);
						this.SendPropertyChanging();
						this._IsQuizQuestionsEditor = value;
						this.SendPropertyChanged("IsQuizQuestionsEditor");
						this.OnIsQuizQuestionsEditorChanged();
					}
					this.SendPropertySetterInvoked("IsQuizQuestionsEditor", value);
				}
			}
			
			#endregion Columns

			#region Associations
			#endregion Associations

			#region Property changing events
			public event PropertyChangingEventHandler PropertyChanging;
			public event PropertyChangedEventHandler PropertyChanged;
			public event PropertySetterInvokedEventHandler PropertySetterInvoked;
			
			protected virtual void SendPropertyChanging()
			{
				if (this.PropertyChanging != null)
				{
					this.PropertyChanging(this, emptyChangingEventArgs);
				}
			}
			
			protected virtual void SendPropertyChanged(String propertyName)
			{
				if (this.PropertyChanged != null)
				{
					this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
				}
			}
			
			protected virtual void SendPropertySetterInvoked(String propertyName, Object value)
			{
				if (this.PropertySetterInvoked != null)
				{
					this.PropertySetterInvoked.Invoke(this, propertyName, value);
				}
			}
			#endregion Property changing events
		}
		#endregion dbo.tblAppMember2

		#region guest.tblAppMember2
		[TableAttribute(Name="guest.tblAppMember2")]
		public partial class guest_tblAppMember2 : EntityBase<guest_tblAppMember2, dbCalystoUnittestDataContext>, INotifyPropertyChanging, INotifyPropertyChanged, IPropertySetterInvoked
		{
			private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

			#region Storage members
			private int _AppMemberID;
			private int _AppMemberStatusID;
			private string _MSISDN;
			private string _FacebookId;
			private string _GoogleId;
			private string _Email;
			private string _Username;
			private string _Password;
			private DateTime? _BirthDate;
			private DateTime? _CreationDate;
			private DateTime? _LastLoginDate;
			private int _LoginsCount;
			private string _FirstName;
			private string _LastName;
			private string _Gender;
			private string _PersonalNote;
			private string _WebUrl;
			private string _Address;
			private string _ZipCode;
			private string _City;
			private string _Country;
			private string _IP;
			private int? _PosFirmaID;
			private string _ReferentNote;
			private bool? _IsQuizQuestionsEditor;
			#endregion Storage members

			#region Extensibility Method Definitions
			partial void OnLoaded();
			partial void OnValidate(Calysto.Data.Linq.ChangeAction action);
			partial void OnCreated();
			partial void OnAppMemberIDChanging(int value);
			partial void OnAppMemberIDChanged();
			partial void OnAppMemberStatusIDChanging(int value);
			partial void OnAppMemberStatusIDChanged();
			partial void OnMSISDNChanging(string value);
			partial void OnMSISDNChanged();
			partial void OnFacebookIdChanging(string value);
			partial void OnFacebookIdChanged();
			partial void OnGoogleIdChanging(string value);
			partial void OnGoogleIdChanged();
			partial void OnEmailChanging(string value);
			partial void OnEmailChanged();
			partial void OnUsernameChanging(string value);
			partial void OnUsernameChanged();
			partial void OnPasswordChanging(string value);
			partial void OnPasswordChanged();
			partial void OnBirthDateChanging(DateTime? value);
			partial void OnBirthDateChanged();
			partial void OnCreationDateChanging(DateTime? value);
			partial void OnCreationDateChanged();
			partial void OnLastLoginDateChanging(DateTime? value);
			partial void OnLastLoginDateChanged();
			partial void OnLoginsCountChanging(int value);
			partial void OnLoginsCountChanged();
			partial void OnFirstNameChanging(string value);
			partial void OnFirstNameChanged();
			partial void OnLastNameChanging(string value);
			partial void OnLastNameChanged();
			partial void OnGenderChanging(string value);
			partial void OnGenderChanged();
			partial void OnPersonalNoteChanging(string value);
			partial void OnPersonalNoteChanged();
			partial void OnWebUrlChanging(string value);
			partial void OnWebUrlChanged();
			partial void OnAddressChanging(string value);
			partial void OnAddressChanged();
			partial void OnZipCodeChanging(string value);
			partial void OnZipCodeChanged();
			partial void OnCityChanging(string value);
			partial void OnCityChanged();
			partial void OnCountryChanging(string value);
			partial void OnCountryChanged();
			partial void OnIPChanging(string value);
			partial void OnIPChanged();
			partial void OnPosFirmaIDChanging(int? value);
			partial void OnPosFirmaIDChanged();
			partial void OnReferentNoteChanging(string value);
			partial void OnReferentNoteChanged();
			partial void OnIsQuizQuestionsEditorChanging(bool? value);
			partial void OnIsQuizQuestionsEditorChanged();
			#endregion

			public guest_tblAppMember2()
			{
				OnCreated();
			}

			#region Columns
			/// <summary>
			/// Column DbType=Int NOT NULL
			/// </summary>
			[ColumnAttribute(Storage="_AppMemberID", DbType="Int NOT NULL", CanBeNull=false)]
			public int AppMemberID
			{
				get
				{
					return this._AppMemberID;
				}
				set
				{
					if (this._AppMemberID != value)
					{
						this.OnAppMemberIDChanging(value);
						this.SendPropertyChanging();
						this._AppMemberID = value;
						this.SendPropertyChanged("AppMemberID");
						this.OnAppMemberIDChanged();
					}
					this.SendPropertySetterInvoked("AppMemberID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int NOT NULL
			/// </summary>
			[ColumnAttribute(Storage="_AppMemberStatusID", DbType="Int NOT NULL", CanBeNull=false)]
			public int AppMemberStatusID
			{
				get
				{
					return this._AppMemberStatusID;
				}
				set
				{
					if (this._AppMemberStatusID != value)
					{
						this.OnAppMemberStatusIDChanging(value);
						this.SendPropertyChanging();
						this._AppMemberStatusID = value;
						this.SendPropertyChanged("AppMemberStatusID");
						this.OnAppMemberStatusIDChanged();
					}
					this.SendPropertySetterInvoked("AppMemberStatusID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(15)
			/// </summary>
			[ColumnAttribute(Storage="_MSISDN", DbType="VarChar(15)", CanBeNull=true)]
			public string MSISDN
			{
				get
				{
					return this._MSISDN;
				}
				set
				{
					if (this._MSISDN != value)
					{
						this.OnMSISDNChanging(value);
						this.SendPropertyChanging();
						this._MSISDN = value;
						this.SendPropertyChanged("MSISDN");
						this.OnMSISDNChanged();
					}
					this.SendPropertySetterInvoked("MSISDN", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_FacebookId", DbType="VarChar(50)", CanBeNull=true)]
			public string FacebookId
			{
				get
				{
					return this._FacebookId;
				}
				set
				{
					if (this._FacebookId != value)
					{
						this.OnFacebookIdChanging(value);
						this.SendPropertyChanging();
						this._FacebookId = value;
						this.SendPropertyChanged("FacebookId");
						this.OnFacebookIdChanged();
					}
					this.SendPropertySetterInvoked("FacebookId", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_GoogleId", DbType="VarChar(50)", CanBeNull=true)]
			public string GoogleId
			{
				get
				{
					return this._GoogleId;
				}
				set
				{
					if (this._GoogleId != value)
					{
						this.OnGoogleIdChanging(value);
						this.SendPropertyChanging();
						this._GoogleId = value;
						this.SendPropertyChanged("GoogleId");
						this.OnGoogleIdChanged();
					}
					this.SendPropertySetterInvoked("GoogleId", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(150)
			/// </summary>
			[ColumnAttribute(Storage="_Email", DbType="VarChar(150)", CanBeNull=true)]
			public string Email
			{
				get
				{
					return this._Email;
				}
				set
				{
					if (this._Email != value)
					{
						this.OnEmailChanging(value);
						this.SendPropertyChanging();
						this._Email = value;
						this.SendPropertyChanged("Email");
						this.OnEmailChanged();
					}
					this.SendPropertySetterInvoked("Email", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_Username", DbType="NVarChar(50)", CanBeNull=true)]
			public string Username
			{
				get
				{
					return this._Username;
				}
				set
				{
					if (this._Username != value)
					{
						this.OnUsernameChanging(value);
						this.SendPropertyChanging();
						this._Username = value;
						this.SendPropertyChanged("Username");
						this.OnUsernameChanged();
					}
					this.SendPropertySetterInvoked("Username", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_Password", DbType="NVarChar(50)", CanBeNull=true)]
			public string Password
			{
				get
				{
					return this._Password;
				}
				set
				{
					if (this._Password != value)
					{
						this.OnPasswordChanging(value);
						this.SendPropertyChanging();
						this._Password = value;
						this.SendPropertyChanged("Password");
						this.OnPasswordChanged();
					}
					this.SendPropertySetterInvoked("Password", value);
				}
			}
			
			/// <summary>
			/// Column DbType=DateTime
			/// </summary>
			[ColumnAttribute(Storage="_BirthDate", DbType="DateTime", CanBeNull=true)]
			public DateTime? BirthDate
			{
				get
				{
					return this._BirthDate;
				}
				set
				{
					if (this._BirthDate != value)
					{
						this.OnBirthDateChanging(value);
						this.SendPropertyChanging();
						this._BirthDate = value;
						this.SendPropertyChanged("BirthDate");
						this.OnBirthDateChanged();
					}
					this.SendPropertySetterInvoked("BirthDate", value);
				}
			}
			
			/// <summary>
			/// Column DbType=DateTime
			/// </summary>
			[ColumnAttribute(Storage="_CreationDate", DbType="DateTime", CanBeNull=true)]
			public DateTime? CreationDate
			{
				get
				{
					return this._CreationDate;
				}
				set
				{
					if (this._CreationDate != value)
					{
						this.OnCreationDateChanging(value);
						this.SendPropertyChanging();
						this._CreationDate = value;
						this.SendPropertyChanged("CreationDate");
						this.OnCreationDateChanged();
					}
					this.SendPropertySetterInvoked("CreationDate", value);
				}
			}
			
			/// <summary>
			/// Column DbType=DateTime
			/// </summary>
			[ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime", CanBeNull=true)]
			public DateTime? LastLoginDate
			{
				get
				{
					return this._LastLoginDate;
				}
				set
				{
					if (this._LastLoginDate != value)
					{
						this.OnLastLoginDateChanging(value);
						this.SendPropertyChanging();
						this._LastLoginDate = value;
						this.SendPropertyChanged("LastLoginDate");
						this.OnLastLoginDateChanged();
					}
					this.SendPropertySetterInvoked("LastLoginDate", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int NOT NULL
			/// </summary>
			[ColumnAttribute(Storage="_LoginsCount", DbType="Int NOT NULL", CanBeNull=false)]
			public int LoginsCount
			{
				get
				{
					return this._LoginsCount;
				}
				set
				{
					if (this._LoginsCount != value)
					{
						this.OnLoginsCountChanging(value);
						this.SendPropertyChanging();
						this._LoginsCount = value;
						this.SendPropertyChanged("LoginsCount");
						this.OnLoginsCountChanged();
					}
					this.SendPropertySetterInvoked("LoginsCount", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(100)
			/// </summary>
			[ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)", CanBeNull=true)]
			public string FirstName
			{
				get
				{
					return this._FirstName;
				}
				set
				{
					if (this._FirstName != value)
					{
						this.OnFirstNameChanging(value);
						this.SendPropertyChanging();
						this._FirstName = value;
						this.SendPropertyChanged("FirstName");
						this.OnFirstNameChanged();
					}
					this.SendPropertySetterInvoked("FirstName", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(100)
			/// </summary>
			[ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)", CanBeNull=true)]
			public string LastName
			{
				get
				{
					return this._LastName;
				}
				set
				{
					if (this._LastName != value)
					{
						this.OnLastNameChanging(value);
						this.SendPropertyChanging();
						this._LastName = value;
						this.SendPropertyChanged("LastName");
						this.OnLastNameChanged();
					}
					this.SendPropertySetterInvoked("LastName", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(10)
			/// </summary>
			[ColumnAttribute(Storage="_Gender", DbType="VarChar(10)", CanBeNull=true)]
			public string Gender
			{
				get
				{
					return this._Gender;
				}
				set
				{
					if (this._Gender != value)
					{
						this.OnGenderChanging(value);
						this.SendPropertyChanging();
						this._Gender = value;
						this.SendPropertyChanged("Gender");
						this.OnGenderChanged();
					}
					this.SendPropertySetterInvoked("Gender", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(1000)
			/// </summary>
			[ColumnAttribute(Storage="_PersonalNote", DbType="NVarChar(1000)", CanBeNull=true)]
			public string PersonalNote
			{
				get
				{
					return this._PersonalNote;
				}
				set
				{
					if (this._PersonalNote != value)
					{
						this.OnPersonalNoteChanging(value);
						this.SendPropertyChanging();
						this._PersonalNote = value;
						this.SendPropertyChanged("PersonalNote");
						this.OnPersonalNoteChanged();
					}
					this.SendPropertySetterInvoked("PersonalNote", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(255)
			/// </summary>
			[ColumnAttribute(Storage="_WebUrl", DbType="VarChar(255)", CanBeNull=true)]
			public string WebUrl
			{
				get
				{
					return this._WebUrl;
				}
				set
				{
					if (this._WebUrl != value)
					{
						this.OnWebUrlChanging(value);
						this.SendPropertyChanging();
						this._WebUrl = value;
						this.SendPropertyChanged("WebUrl");
						this.OnWebUrlChanged();
					}
					this.SendPropertySetterInvoked("WebUrl", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(255)
			/// </summary>
			[ColumnAttribute(Storage="_Address", DbType="NVarChar(255)", CanBeNull=true)]
			public string Address
			{
				get
				{
					return this._Address;
				}
				set
				{
					if (this._Address != value)
					{
						this.OnAddressChanging(value);
						this.SendPropertyChanging();
						this._Address = value;
						this.SendPropertyChanged("Address");
						this.OnAddressChanged();
					}
					this.SendPropertySetterInvoked("Address", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_ZipCode", DbType="NVarChar(50)", CanBeNull=true)]
			public string ZipCode
			{
				get
				{
					return this._ZipCode;
				}
				set
				{
					if (this._ZipCode != value)
					{
						this.OnZipCodeChanging(value);
						this.SendPropertyChanging();
						this._ZipCode = value;
						this.SendPropertyChanged("ZipCode");
						this.OnZipCodeChanged();
					}
					this.SendPropertySetterInvoked("ZipCode", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(250)
			/// </summary>
			[ColumnAttribute(Storage="_City", DbType="NVarChar(250)", CanBeNull=true)]
			public string City
			{
				get
				{
					return this._City;
				}
				set
				{
					if (this._City != value)
					{
						this.OnCityChanging(value);
						this.SendPropertyChanging();
						this._City = value;
						this.SendPropertyChanged("City");
						this.OnCityChanged();
					}
					this.SendPropertySetterInvoked("City", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(250)
			/// </summary>
			[ColumnAttribute(Storage="_Country", DbType="NVarChar(250)", CanBeNull=true)]
			public string Country
			{
				get
				{
					return this._Country;
				}
				set
				{
					if (this._Country != value)
					{
						this.OnCountryChanging(value);
						this.SendPropertyChanging();
						this._Country = value;
						this.SendPropertyChanged("Country");
						this.OnCountryChanged();
					}
					this.SendPropertySetterInvoked("Country", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_IP", DbType="VarChar(50)", CanBeNull=true)]
			public string IP
			{
				get
				{
					return this._IP;
				}
				set
				{
					if (this._IP != value)
					{
						this.OnIPChanging(value);
						this.SendPropertyChanging();
						this._IP = value;
						this.SendPropertyChanged("IP");
						this.OnIPChanged();
					}
					this.SendPropertySetterInvoked("IP", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int
			/// </summary>
			[ColumnAttribute(Storage="_PosFirmaID", DbType="Int", CanBeNull=true)]
			public int? PosFirmaID
			{
				get
				{
					return this._PosFirmaID;
				}
				set
				{
					if (this._PosFirmaID != value)
					{
						this.OnPosFirmaIDChanging(value);
						this.SendPropertyChanging();
						this._PosFirmaID = value;
						this.SendPropertyChanged("PosFirmaID");
						this.OnPosFirmaIDChanged();
					}
					this.SendPropertySetterInvoked("PosFirmaID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(1000)
			/// </summary>
			[ColumnAttribute(Storage="_ReferentNote", DbType="NVarChar(1000)", CanBeNull=true)]
			public string ReferentNote
			{
				get
				{
					return this._ReferentNote;
				}
				set
				{
					if (this._ReferentNote != value)
					{
						this.OnReferentNoteChanging(value);
						this.SendPropertyChanging();
						this._ReferentNote = value;
						this.SendPropertyChanged("ReferentNote");
						this.OnReferentNoteChanged();
					}
					this.SendPropertySetterInvoked("ReferentNote", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit
			/// </summary>
			[ColumnAttribute(Storage="_IsQuizQuestionsEditor", DbType="Bit", CanBeNull=true)]
			public bool? IsQuizQuestionsEditor
			{
				get
				{
					return this._IsQuizQuestionsEditor;
				}
				set
				{
					if (this._IsQuizQuestionsEditor != value)
					{
						this.OnIsQuizQuestionsEditorChanging(value);
						this.SendPropertyChanging();
						this._IsQuizQuestionsEditor = value;
						this.SendPropertyChanged("IsQuizQuestionsEditor");
						this.OnIsQuizQuestionsEditorChanged();
					}
					this.SendPropertySetterInvoked("IsQuizQuestionsEditor", value);
				}
			}
			
			#endregion Columns

			#region Associations
			#endregion Associations

			#region Property changing events
			public event PropertyChangingEventHandler PropertyChanging;
			public event PropertyChangedEventHandler PropertyChanged;
			public event PropertySetterInvokedEventHandler PropertySetterInvoked;
			
			protected virtual void SendPropertyChanging()
			{
				if (this.PropertyChanging != null)
				{
					this.PropertyChanging(this, emptyChangingEventArgs);
				}
			}
			
			protected virtual void SendPropertyChanged(String propertyName)
			{
				if (this.PropertyChanged != null)
				{
					this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
				}
			}
			
			protected virtual void SendPropertySetterInvoked(String propertyName, Object value)
			{
				if (this.PropertySetterInvoked != null)
				{
					this.PropertySetterInvoked.Invoke(this, propertyName, value);
				}
			}
			#endregion Property changing events
		}
		#endregion guest.tblAppMember2

		#region dbo.tblAppMemberAssignedPermission
		[TableAttribute(Name="dbo.tblAppMemberAssignedPermission")]
		public partial class tblAppMemberAssignedPermission : EntityBase<tblAppMemberAssignedPermission, dbCalystoUnittestDataContext>, INotifyPropertyChanging, INotifyPropertyChanged, IPropertySetterInvoked
		{
			private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

			#region Storage members
			private int _AppMemberID;
			private int _AppPermissionID;
			private DateTime _AssignedDate;
			private int? _AssignedByAppMemberID;
			#endregion Storage members

			#region Extensibility Method Definitions
			partial void OnLoaded();
			partial void OnValidate(Calysto.Data.Linq.ChangeAction action);
			partial void OnCreated();
			partial void OnAppMemberIDChanging(int value);
			partial void OnAppMemberIDChanged();
			partial void OnAppPermissionIDChanging(int value);
			partial void OnAppPermissionIDChanged();
			partial void OnAssignedDateChanging(DateTime value);
			partial void OnAssignedDateChanged();
			partial void OnAssignedByAppMemberIDChanging(int? value);
			partial void OnAssignedByAppMemberIDChanged();
			#endregion

			public tblAppMemberAssignedPermission()
			{
				OnCreated();
			}

			#region Columns
			/// <summary>
			/// Column DbType=Int NOT NULL
			/// </summary>
			[ColumnAttribute(Storage="_AppMemberID", DbType="Int NOT NULL", CanBeNull=false)]
			public int AppMemberID
			{
				get
				{
					return this._AppMemberID;
				}
				set
				{
					if (this._AppMemberID != value)
					{
						this.OnAppMemberIDChanging(value);
						this.SendPropertyChanging();
						this._AppMemberID = value;
						this.SendPropertyChanged("AppMemberID");
						this.OnAppMemberIDChanged();
					}
					this.SendPropertySetterInvoked("AppMemberID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int NOT NULL
			/// </summary>
			[ColumnAttribute(Storage="_AppPermissionID", DbType="Int NOT NULL", CanBeNull=false)]
			public int AppPermissionID
			{
				get
				{
					return this._AppPermissionID;
				}
				set
				{
					if (this._AppPermissionID != value)
					{
						this.OnAppPermissionIDChanging(value);
						this.SendPropertyChanging();
						this._AppPermissionID = value;
						this.SendPropertyChanged("AppPermissionID");
						this.OnAppPermissionIDChanged();
					}
					this.SendPropertySetterInvoked("AppPermissionID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=DateTime NOT NULL
			/// </summary>
			[ColumnAttribute(Storage="_AssignedDate", DbType="DateTime NOT NULL", CanBeNull=false)]
			public DateTime AssignedDate
			{
				get
				{
					return this._AssignedDate;
				}
				set
				{
					if (this._AssignedDate != value)
					{
						this.OnAssignedDateChanging(value);
						this.SendPropertyChanging();
						this._AssignedDate = value;
						this.SendPropertyChanged("AssignedDate");
						this.OnAssignedDateChanged();
					}
					this.SendPropertySetterInvoked("AssignedDate", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int
			/// </summary>
			[ColumnAttribute(Storage="_AssignedByAppMemberID", DbType="Int", CanBeNull=true)]
			public int? AssignedByAppMemberID
			{
				get
				{
					return this._AssignedByAppMemberID;
				}
				set
				{
					if (this._AssignedByAppMemberID != value)
					{
						this.OnAssignedByAppMemberIDChanging(value);
						this.SendPropertyChanging();
						this._AssignedByAppMemberID = value;
						this.SendPropertyChanged("AssignedByAppMemberID");
						this.OnAssignedByAppMemberIDChanged();
					}
					this.SendPropertySetterInvoked("AssignedByAppMemberID", value);
				}
			}
			
			#endregion Columns

			#region Associations
			#endregion Associations

			#region Property changing events
			public event PropertyChangingEventHandler PropertyChanging;
			public event PropertyChangedEventHandler PropertyChanged;
			public event PropertySetterInvokedEventHandler PropertySetterInvoked;
			
			protected virtual void SendPropertyChanging()
			{
				if (this.PropertyChanging != null)
				{
					this.PropertyChanging(this, emptyChangingEventArgs);
				}
			}
			
			protected virtual void SendPropertyChanged(String propertyName)
			{
				if (this.PropertyChanged != null)
				{
					this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
				}
			}
			
			protected virtual void SendPropertySetterInvoked(String propertyName, Object value)
			{
				if (this.PropertySetterInvoked != null)
				{
					this.PropertySetterInvoked.Invoke(this, propertyName, value);
				}
			}
			#endregion Property changing events
		}
		#endregion dbo.tblAppMemberAssignedPermission

		#region dbo.tblAppMemberPermission
		[TableAttribute(Name="dbo.tblAppMemberPermission")]
		public partial class tblAppMemberPermission : EntityBase<tblAppMemberPermission, dbCalystoUnittestDataContext>, INotifyPropertyChanging, INotifyPropertyChanged, IPropertySetterInvoked
		{
			private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

			#region Storage members
			private int _AppPermissionID;
			private int _AppMemberID;
			private DateTime _DateInserted;
			private int? _InsertedByAppMemberID;
			private EntityRef<tblAppMember> _tblAppMember;
			private EntityRef<tblAppPermission> _tblAppPermission;
			#endregion Storage members

			#region Extensibility Method Definitions
			partial void OnLoaded();
			partial void OnValidate(Calysto.Data.Linq.ChangeAction action);
			partial void OnCreated();
			partial void OnAppPermissionIDChanging(int value);
			partial void OnAppPermissionIDChanged();
			partial void OnAppMemberIDChanging(int value);
			partial void OnAppMemberIDChanged();
			partial void OnDateInsertedChanging(DateTime value);
			partial void OnDateInsertedChanged();
			partial void OnInsertedByAppMemberIDChanging(int? value);
			partial void OnInsertedByAppMemberIDChanged();
			#endregion

			public tblAppMemberPermission()
			{
				_tblAppMember = default(EntityRef<tblAppMember>);
				_tblAppPermission = default(EntityRef<tblAppPermission>);
				OnCreated();
			}

			#region Columns
			/// <summary>
			/// Column DbType=Int NOT NULL
			/// </summary>
			[ColumnAttribute(Storage="_AppPermissionID", DbType="Int NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
			public int AppPermissionID
			{
				get
				{
					return this._AppPermissionID;
				}
				set
				{
					if (this._AppPermissionID != value)
					{
						this.OnAppPermissionIDChanging(value);
						this.SendPropertyChanging();
						this._AppPermissionID = value;
						this.SendPropertyChanged("AppPermissionID");
						this.OnAppPermissionIDChanged();
					}
					this.SendPropertySetterInvoked("AppPermissionID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int NOT NULL
			/// </summary>
			[ColumnAttribute(Storage="_AppMemberID", DbType="Int NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
			public int AppMemberID
			{
				get
				{
					return this._AppMemberID;
				}
				set
				{
					if (this._AppMemberID != value)
					{
						this.OnAppMemberIDChanging(value);
						this.SendPropertyChanging();
						this._AppMemberID = value;
						this.SendPropertyChanged("AppMemberID");
						this.OnAppMemberIDChanged();
					}
					this.SendPropertySetterInvoked("AppMemberID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=DateTime NOT NULL
			/// </summary>
			[ColumnAttribute(Storage="_DateInserted", DbType="DateTime NOT NULL", CanBeNull=false)]
			public DateTime DateInserted
			{
				get
				{
					return this._DateInserted;
				}
				set
				{
					if (this._DateInserted != value)
					{
						this.OnDateInsertedChanging(value);
						this.SendPropertyChanging();
						this._DateInserted = value;
						this.SendPropertyChanged("DateInserted");
						this.OnDateInsertedChanged();
					}
					this.SendPropertySetterInvoked("DateInserted", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int
			/// </summary>
			[ColumnAttribute(Storage="_InsertedByAppMemberID", DbType="Int", CanBeNull=true)]
			public int? InsertedByAppMemberID
			{
				get
				{
					return this._InsertedByAppMemberID;
				}
				set
				{
					if (this._InsertedByAppMemberID != value)
					{
						this.OnInsertedByAppMemberIDChanging(value);
						this.SendPropertyChanging();
						this._InsertedByAppMemberID = value;
						this.SendPropertyChanged("InsertedByAppMemberID");
						this.OnInsertedByAppMemberIDChanged();
					}
					this.SendPropertySetterInvoked("InsertedByAppMemberID", value);
				}
			}
			
			#endregion Columns

			#region Associations
			/// <summary>
			/// Association [FK][Many]tblAppMemberPermission.AppMemberID --- [PK][One]tblAppMember.AppMemberID
			/// </summary>
			[AssociationAttribute(Name="FK_AppMemberPermission_AppMember", Storage="_tblAppMember", ThisKey="AppMemberID", OtherKey="AppMemberID", IsUnique=false, IsForeignKey=true)]
			public tblAppMember tblAppMember
			{
				get
				{
					return this._tblAppMember.Entity;
				}
				set
				{
					tblAppMember previousValue = this._tblAppMember.Entity;
					if ((previousValue != value) || (this._tblAppMember.HasLoadedOrAssignedValue == false))
					{
						this.SendPropertyChanging();
						if (previousValue != null)
						{
							this._tblAppMember.Entity = null;
							previousValue.tblAppMemberPermissionList.Remove(this);
						}
						this._tblAppMember.Entity = value;
						if (value != null)
						{
							value.tblAppMemberPermissionList.Add(this);
							this._AppMemberID = value.AppMemberID;
						}
						else
						{
							this._AppMemberID = default(int);
						}
						this.SendPropertyChanged("tblAppMember");
					}
					this.SendPropertySetterInvoked("tblAppMember", value);
				}
			}
			
			/// <summary>
			/// Association [FK][Many]tblAppMemberPermission.AppPermissionID --- [PK][One]tblAppPermission.AppPermissionID
			/// </summary>
			[AssociationAttribute(Name="FK_AppMemberPermission_AppPermission", Storage="_tblAppPermission", ThisKey="AppPermissionID", OtherKey="AppPermissionID", IsUnique=false, IsForeignKey=true)]
			public tblAppPermission tblAppPermission
			{
				get
				{
					return this._tblAppPermission.Entity;
				}
				set
				{
					tblAppPermission previousValue = this._tblAppPermission.Entity;
					if ((previousValue != value) || (this._tblAppPermission.HasLoadedOrAssignedValue == false))
					{
						this.SendPropertyChanging();
						if (previousValue != null)
						{
							this._tblAppPermission.Entity = null;
							previousValue.tblAppMemberPermissionList.Remove(this);
						}
						this._tblAppPermission.Entity = value;
						if (value != null)
						{
							value.tblAppMemberPermissionList.Add(this);
							this._AppPermissionID = value.AppPermissionID;
						}
						else
						{
							this._AppPermissionID = default(int);
						}
						this.SendPropertyChanged("tblAppPermission");
					}
					this.SendPropertySetterInvoked("tblAppPermission", value);
				}
			}
			
			#endregion Associations

			#region Property changing events
			public event PropertyChangingEventHandler PropertyChanging;
			public event PropertyChangedEventHandler PropertyChanged;
			public event PropertySetterInvokedEventHandler PropertySetterInvoked;
			
			protected virtual void SendPropertyChanging()
			{
				if (this.PropertyChanging != null)
				{
					this.PropertyChanging(this, emptyChangingEventArgs);
				}
			}
			
			protected virtual void SendPropertyChanged(String propertyName)
			{
				if (this.PropertyChanged != null)
				{
					this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
				}
			}
			
			protected virtual void SendPropertySetterInvoked(String propertyName, Object value)
			{
				if (this.PropertySetterInvoked != null)
				{
					this.PropertySetterInvoked.Invoke(this, propertyName, value);
				}
			}
			#endregion Property changing events
		}
		#endregion dbo.tblAppMemberPermission

		#region dbo.tblAppMemberPicture
		[TableAttribute(Name="dbo.tblAppMemberPicture")]
		public partial class tblAppMemberPicture : EntityBase<tblAppMemberPicture, dbCalystoUnittestDataContext>, INotifyPropertyChanging, INotifyPropertyChanged, IPropertySetterInvoked
		{
			private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

			#region Storage members
			private int _AppMemberPictureID;
			private int? _AppMemberID;
			private DateTime? _InsertionDate;
			private string _FileName;
			private byte[] _ImageData;
			private string _ImageMimeType;
			private byte[] _ThumbData;
			private string _ThumbMimeType;
			private EntityRef<tblAppMember> _tblAppMember;
			#endregion Storage members

			#region Extensibility Method Definitions
			partial void OnLoaded();
			partial void OnValidate(Calysto.Data.Linq.ChangeAction action);
			partial void OnCreated();
			partial void OnAppMemberPictureIDChanging(int value);
			partial void OnAppMemberPictureIDChanged();
			partial void OnAppMemberIDChanging(int? value);
			partial void OnAppMemberIDChanged();
			partial void OnInsertionDateChanging(DateTime? value);
			partial void OnInsertionDateChanged();
			partial void OnFileNameChanging(string value);
			partial void OnFileNameChanged();
			partial void OnImageDataChanging(byte[] value);
			partial void OnImageDataChanged();
			partial void OnImageMimeTypeChanging(string value);
			partial void OnImageMimeTypeChanged();
			partial void OnThumbDataChanging(byte[] value);
			partial void OnThumbDataChanged();
			partial void OnThumbMimeTypeChanging(string value);
			partial void OnThumbMimeTypeChanged();
			#endregion

			public tblAppMemberPicture()
			{
				_tblAppMember = default(EntityRef<tblAppMember>);
				OnCreated();
			}

			#region Columns
			/// <summary>
			/// Column DbType=Int NOT NULL IDENTITY
			/// </summary>
			[ColumnAttribute(Storage="_AppMemberPictureID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", CanBeNull=false, IsPrimaryKey=true, IsDbGenerated=true)]
			public int AppMemberPictureID
			{
				get
				{
					return this._AppMemberPictureID;
				}
				set
				{
					if (this._AppMemberPictureID != value)
					{
						this.OnAppMemberPictureIDChanging(value);
						this.SendPropertyChanging();
						this._AppMemberPictureID = value;
						this.SendPropertyChanged("AppMemberPictureID");
						this.OnAppMemberPictureIDChanged();
					}
					this.SendPropertySetterInvoked("AppMemberPictureID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int
			/// </summary>
			[ColumnAttribute(Storage="_AppMemberID", DbType="Int", CanBeNull=true)]
			public int? AppMemberID
			{
				get
				{
					return this._AppMemberID;
				}
				set
				{
					if (this._AppMemberID != value)
					{
						this.OnAppMemberIDChanging(value);
						this.SendPropertyChanging();
						this._AppMemberID = value;
						this.SendPropertyChanged("AppMemberID");
						this.OnAppMemberIDChanged();
					}
					this.SendPropertySetterInvoked("AppMemberID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=DateTime
			/// </summary>
			[ColumnAttribute(Storage="_InsertionDate", DbType="DateTime", CanBeNull=true)]
			public DateTime? InsertionDate
			{
				get
				{
					return this._InsertionDate;
				}
				set
				{
					if (this._InsertionDate != value)
					{
						this.OnInsertionDateChanging(value);
						this.SendPropertyChanging();
						this._InsertionDate = value;
						this.SendPropertyChanged("InsertionDate");
						this.OnInsertionDateChanged();
					}
					this.SendPropertySetterInvoked("InsertionDate", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(500)
			/// </summary>
			[ColumnAttribute(Storage="_FileName", DbType="NVarChar(500)", CanBeNull=true)]
			public string FileName
			{
				get
				{
					return this._FileName;
				}
				set
				{
					if (this._FileName != value)
					{
						this.OnFileNameChanging(value);
						this.SendPropertyChanging();
						this._FileName = value;
						this.SendPropertyChanged("FileName");
						this.OnFileNameChanged();
					}
					this.SendPropertySetterInvoked("FileName", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarBinary(MAX)
			/// </summary>
			[ColumnAttribute(Storage="_ImageData", DbType="VarBinary(MAX)", CanBeNull=true)]
			public byte[] ImageData
			{
				get
				{
					return this._ImageData;
				}
				set
				{
					if (this._ImageData != value)
					{
						this.OnImageDataChanging(value);
						this.SendPropertyChanging();
						this._ImageData = value;
						this.SendPropertyChanged("ImageData");
						this.OnImageDataChanged();
					}
					this.SendPropertySetterInvoked("ImageData", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(20)
			/// </summary>
			[ColumnAttribute(Storage="_ImageMimeType", DbType="VarChar(20)", CanBeNull=true)]
			public string ImageMimeType
			{
				get
				{
					return this._ImageMimeType;
				}
				set
				{
					if (this._ImageMimeType != value)
					{
						this.OnImageMimeTypeChanging(value);
						this.SendPropertyChanging();
						this._ImageMimeType = value;
						this.SendPropertyChanged("ImageMimeType");
						this.OnImageMimeTypeChanged();
					}
					this.SendPropertySetterInvoked("ImageMimeType", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarBinary(MAX)
			/// </summary>
			[ColumnAttribute(Storage="_ThumbData", DbType="VarBinary(MAX)", CanBeNull=true)]
			public byte[] ThumbData
			{
				get
				{
					return this._ThumbData;
				}
				set
				{
					if (this._ThumbData != value)
					{
						this.OnThumbDataChanging(value);
						this.SendPropertyChanging();
						this._ThumbData = value;
						this.SendPropertyChanged("ThumbData");
						this.OnThumbDataChanged();
					}
					this.SendPropertySetterInvoked("ThumbData", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(20)
			/// </summary>
			[ColumnAttribute(Storage="_ThumbMimeType", DbType="VarChar(20)", CanBeNull=true)]
			public string ThumbMimeType
			{
				get
				{
					return this._ThumbMimeType;
				}
				set
				{
					if (this._ThumbMimeType != value)
					{
						this.OnThumbMimeTypeChanging(value);
						this.SendPropertyChanging();
						this._ThumbMimeType = value;
						this.SendPropertyChanged("ThumbMimeType");
						this.OnThumbMimeTypeChanged();
					}
					this.SendPropertySetterInvoked("ThumbMimeType", value);
				}
			}
			
			#endregion Columns

			#region Associations
			/// <summary>
			/// Association [FK][Many]tblAppMemberPicture.AppMemberID --- [PK][One]tblAppMember.AppMemberID
			/// </summary>
			[AssociationAttribute(Name="FK_AppMemberPicture_AppMember", Storage="_tblAppMember", ThisKey="AppMemberID", OtherKey="AppMemberID", IsUnique=false, IsForeignKey=true)]
			public tblAppMember tblAppMember
			{
				get
				{
					return this._tblAppMember.Entity;
				}
				set
				{
					tblAppMember previousValue = this._tblAppMember.Entity;
					if ((previousValue != value) || (this._tblAppMember.HasLoadedOrAssignedValue == false))
					{
						this.SendPropertyChanging();
						if (previousValue != null)
						{
							this._tblAppMember.Entity = null;
							previousValue.tblAppMemberPictureList.Remove(this);
						}
						this._tblAppMember.Entity = value;
						if (value != null)
						{
							value.tblAppMemberPictureList.Add(this);
							this._AppMemberID = value.AppMemberID;
						}
						else
						{
							this._AppMemberID = default(int?);
						}
						this.SendPropertyChanged("tblAppMember");
					}
					this.SendPropertySetterInvoked("tblAppMember", value);
				}
			}
			
			#endregion Associations

			#region Property changing events
			public event PropertyChangingEventHandler PropertyChanging;
			public event PropertyChangedEventHandler PropertyChanged;
			public event PropertySetterInvokedEventHandler PropertySetterInvoked;
			
			protected virtual void SendPropertyChanging()
			{
				if (this.PropertyChanging != null)
				{
					this.PropertyChanging(this, emptyChangingEventArgs);
				}
			}
			
			protected virtual void SendPropertyChanged(String propertyName)
			{
				if (this.PropertyChanged != null)
				{
					this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
				}
			}
			
			protected virtual void SendPropertySetterInvoked(String propertyName, Object value)
			{
				if (this.PropertySetterInvoked != null)
				{
					this.PropertySetterInvoked.Invoke(this, propertyName, value);
				}
			}
			#endregion Property changing events
		}
		#endregion dbo.tblAppMemberPicture

		#region dbo.tblAppMemberPicture2
		[TableAttribute(Name="dbo.tblAppMemberPicture2")]
		public partial class tblAppMemberPicture2 : EntityBase<tblAppMemberPicture2, dbCalystoUnittestDataContext>, INotifyPropertyChanging, INotifyPropertyChanged, IPropertySetterInvoked
		{
			private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

			#region Storage members
			private int _AppMemberPictureID;
			private int? _AppMemberID;
			private DateTime? _InsertionDate;
			private byte[] _ImageData;
			private byte[] _ThumbData;
			private string _FileName;
			private string _ImageMimeType;
			private string _ThumbMimeType;
			private EntityRef<tblAppMember> _tblAppMember;
			#endregion Storage members

			#region Extensibility Method Definitions
			partial void OnLoaded();
			partial void OnValidate(Calysto.Data.Linq.ChangeAction action);
			partial void OnCreated();
			partial void OnAppMemberPictureIDChanging(int value);
			partial void OnAppMemberPictureIDChanged();
			partial void OnAppMemberIDChanging(int? value);
			partial void OnAppMemberIDChanged();
			partial void OnInsertionDateChanging(DateTime? value);
			partial void OnInsertionDateChanged();
			partial void OnImageDataChanging(byte[] value);
			partial void OnImageDataChanged();
			partial void OnThumbDataChanging(byte[] value);
			partial void OnThumbDataChanged();
			partial void OnFileNameChanging(string value);
			partial void OnFileNameChanged();
			partial void OnImageMimeTypeChanging(string value);
			partial void OnImageMimeTypeChanged();
			partial void OnThumbMimeTypeChanging(string value);
			partial void OnThumbMimeTypeChanged();
			#endregion

			public tblAppMemberPicture2()
			{
				_tblAppMember = default(EntityRef<tblAppMember>);
				OnCreated();
			}

			#region Columns
			/// <summary>
			/// Column DbType=Int NOT NULL IDENTITY
			/// </summary>
			[ColumnAttribute(Storage="_AppMemberPictureID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", CanBeNull=false, IsPrimaryKey=true, IsDbGenerated=true)]
			public int AppMemberPictureID
			{
				get
				{
					return this._AppMemberPictureID;
				}
				set
				{
					if (this._AppMemberPictureID != value)
					{
						this.OnAppMemberPictureIDChanging(value);
						this.SendPropertyChanging();
						this._AppMemberPictureID = value;
						this.SendPropertyChanged("AppMemberPictureID");
						this.OnAppMemberPictureIDChanged();
					}
					this.SendPropertySetterInvoked("AppMemberPictureID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int
			/// </summary>
			[ColumnAttribute(Storage="_AppMemberID", DbType="Int", CanBeNull=true)]
			public int? AppMemberID
			{
				get
				{
					return this._AppMemberID;
				}
				set
				{
					if (this._AppMemberID != value)
					{
						this.OnAppMemberIDChanging(value);
						this.SendPropertyChanging();
						this._AppMemberID = value;
						this.SendPropertyChanged("AppMemberID");
						this.OnAppMemberIDChanged();
					}
					this.SendPropertySetterInvoked("AppMemberID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=DateTime
			/// </summary>
			[ColumnAttribute(Storage="_InsertionDate", DbType="DateTime", CanBeNull=true)]
			public DateTime? InsertionDate
			{
				get
				{
					return this._InsertionDate;
				}
				set
				{
					if (this._InsertionDate != value)
					{
						this.OnInsertionDateChanging(value);
						this.SendPropertyChanging();
						this._InsertionDate = value;
						this.SendPropertyChanged("InsertionDate");
						this.OnInsertionDateChanged();
					}
					this.SendPropertySetterInvoked("InsertionDate", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Image
			/// </summary>
			[ColumnAttribute(Storage="_ImageData", DbType="Image", CanBeNull=true)]
			public byte[] ImageData
			{
				get
				{
					return this._ImageData;
				}
				set
				{
					if (this._ImageData != value)
					{
						this.OnImageDataChanging(value);
						this.SendPropertyChanging();
						this._ImageData = value;
						this.SendPropertyChanged("ImageData");
						this.OnImageDataChanged();
					}
					this.SendPropertySetterInvoked("ImageData", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Image
			/// </summary>
			[ColumnAttribute(Storage="_ThumbData", DbType="Image", CanBeNull=true)]
			public byte[] ThumbData
			{
				get
				{
					return this._ThumbData;
				}
				set
				{
					if (this._ThumbData != value)
					{
						this.OnThumbDataChanging(value);
						this.SendPropertyChanging();
						this._ThumbData = value;
						this.SendPropertyChanged("ThumbData");
						this.OnThumbDataChanged();
					}
					this.SendPropertySetterInvoked("ThumbData", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(500)
			/// </summary>
			[ColumnAttribute(Storage="_FileName", DbType="NVarChar(500)", CanBeNull=true)]
			public string FileName
			{
				get
				{
					return this._FileName;
				}
				set
				{
					if (this._FileName != value)
					{
						this.OnFileNameChanging(value);
						this.SendPropertyChanging();
						this._FileName = value;
						this.SendPropertyChanged("FileName");
						this.OnFileNameChanged();
					}
					this.SendPropertySetterInvoked("FileName", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(20)
			/// </summary>
			[ColumnAttribute(Storage="_ImageMimeType", DbType="VarChar(20)", CanBeNull=true)]
			public string ImageMimeType
			{
				get
				{
					return this._ImageMimeType;
				}
				set
				{
					if (this._ImageMimeType != value)
					{
						this.OnImageMimeTypeChanging(value);
						this.SendPropertyChanging();
						this._ImageMimeType = value;
						this.SendPropertyChanged("ImageMimeType");
						this.OnImageMimeTypeChanged();
					}
					this.SendPropertySetterInvoked("ImageMimeType", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(20)
			/// </summary>
			[ColumnAttribute(Storage="_ThumbMimeType", DbType="VarChar(20)", CanBeNull=true)]
			public string ThumbMimeType
			{
				get
				{
					return this._ThumbMimeType;
				}
				set
				{
					if (this._ThumbMimeType != value)
					{
						this.OnThumbMimeTypeChanging(value);
						this.SendPropertyChanging();
						this._ThumbMimeType = value;
						this.SendPropertyChanged("ThumbMimeType");
						this.OnThumbMimeTypeChanged();
					}
					this.SendPropertySetterInvoked("ThumbMimeType", value);
				}
			}
			
			#endregion Columns

			#region Associations
			/// <summary>
			/// Association [FK][Many]tblAppMemberPicture2.AppMemberID --- [PK][One]tblAppMember.AppMemberID
			/// </summary>
			[AssociationAttribute(Name="FK_tblAppMemberPicture2_tblAppMember", Storage="_tblAppMember", ThisKey="AppMemberID", OtherKey="AppMemberID", IsUnique=false, IsForeignKey=true)]
			public tblAppMember tblAppMember
			{
				get
				{
					return this._tblAppMember.Entity;
				}
				set
				{
					tblAppMember previousValue = this._tblAppMember.Entity;
					if ((previousValue != value) || (this._tblAppMember.HasLoadedOrAssignedValue == false))
					{
						this.SendPropertyChanging();
						if (previousValue != null)
						{
							this._tblAppMember.Entity = null;
							previousValue.tblAppMemberPicture2List.Remove(this);
						}
						this._tblAppMember.Entity = value;
						if (value != null)
						{
							value.tblAppMemberPicture2List.Add(this);
							this._AppMemberID = value.AppMemberID;
						}
						else
						{
							this._AppMemberID = default(int?);
						}
						this.SendPropertyChanged("tblAppMember");
					}
					this.SendPropertySetterInvoked("tblAppMember", value);
				}
			}
			
			#endregion Associations

			#region Property changing events
			public event PropertyChangingEventHandler PropertyChanging;
			public event PropertyChangedEventHandler PropertyChanged;
			public event PropertySetterInvokedEventHandler PropertySetterInvoked;
			
			protected virtual void SendPropertyChanging()
			{
				if (this.PropertyChanging != null)
				{
					this.PropertyChanging(this, emptyChangingEventArgs);
				}
			}
			
			protected virtual void SendPropertyChanged(String propertyName)
			{
				if (this.PropertyChanged != null)
				{
					this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
				}
			}
			
			protected virtual void SendPropertySetterInvoked(String propertyName, Object value)
			{
				if (this.PropertySetterInvoked != null)
				{
					this.PropertySetterInvoked.Invoke(this, propertyName, value);
				}
			}
			#endregion Property changing events
		}
		#endregion dbo.tblAppMemberPicture2

		#region dbo.tblAppMemberStatus
		[TableAttribute(Name="dbo.tblAppMemberStatus")]
		public partial class tblAppMemberStatus : EntityBase<tblAppMemberStatus, dbCalystoUnittestDataContext>, INotifyPropertyChanging, INotifyPropertyChanged, IPropertySetterInvoked
		{
			private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

			#region Storage members
			private int _AppMemberStatusID;
			private bool _IsActive;
			private string _Name;
			private string _Description;
			private EntitySet<tblAppMember> _tblAppMemberList;
			#endregion Storage members

			#region Extensibility Method Definitions
			partial void OnLoaded();
			partial void OnValidate(Calysto.Data.Linq.ChangeAction action);
			partial void OnCreated();
			partial void OnAppMemberStatusIDChanging(int value);
			partial void OnAppMemberStatusIDChanged();
			partial void OnIsActiveChanging(bool value);
			partial void OnIsActiveChanged();
			partial void OnNameChanging(string value);
			partial void OnNameChanged();
			partial void OnDescriptionChanging(string value);
			partial void OnDescriptionChanged();
			#endregion

			public tblAppMemberStatus()
			{
				_tblAppMemberList = new EntitySet<tblAppMember>(
					new Action<tblAppMember>(item=>{this.SendPropertyChanging(); item.tblAppMemberStatus=this;}), 
					new Action<tblAppMember>(item=>{this.SendPropertyChanging(); item.tblAppMemberStatus=null;}));
				OnCreated();
			}

			#region Columns
			/// <summary>
			/// Column DbType=Int NOT NULL
			/// </summary>
			[ColumnAttribute(Storage="_AppMemberStatusID", DbType="Int NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
			public int AppMemberStatusID
			{
				get
				{
					return this._AppMemberStatusID;
				}
				set
				{
					if (this._AppMemberStatusID != value)
					{
						this.OnAppMemberStatusIDChanging(value);
						this.SendPropertyChanging();
						this._AppMemberStatusID = value;
						this.SendPropertyChanged("AppMemberStatusID");
						this.OnAppMemberStatusIDChanged();
					}
					this.SendPropertySetterInvoked("AppMemberStatusID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit NOT NULL
			/// </summary>
			[ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL", CanBeNull=false)]
			public bool IsActive
			{
				get
				{
					return this._IsActive;
				}
				set
				{
					if (this._IsActive != value)
					{
						this.OnIsActiveChanging(value);
						this.SendPropertyChanging();
						this._IsActive = value;
						this.SendPropertyChanged("IsActive");
						this.OnIsActiveChanged();
					}
					this.SendPropertySetterInvoked("IsActive", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(100)
			/// </summary>
			[ColumnAttribute(Storage="_Name", DbType="NVarChar(100)", CanBeNull=true)]
			public string Name
			{
				get
				{
					return this._Name;
				}
				set
				{
					if (this._Name != value)
					{
						this.OnNameChanging(value);
						this.SendPropertyChanging();
						this._Name = value;
						this.SendPropertyChanged("Name");
						this.OnNameChanged();
					}
					this.SendPropertySetterInvoked("Name", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(500)
			/// </summary>
			[ColumnAttribute(Storage="_Description", DbType="NVarChar(500)", CanBeNull=true)]
			public string Description
			{
				get
				{
					return this._Description;
				}
				set
				{
					if (this._Description != value)
					{
						this.OnDescriptionChanging(value);
						this.SendPropertyChanging();
						this._Description = value;
						this.SendPropertyChanged("Description");
						this.OnDescriptionChanged();
					}
					this.SendPropertySetterInvoked("Description", value);
				}
			}
			
			#endregion Columns

			#region Associations
			/// <summary>
			/// Association [PK][One]tblAppMemberStatus.AppMemberStatusID --- [FK][Many]tblAppMember.AppMemberStatusID
			/// </summary>
			[AssociationAttribute(Name="FK_AppMember_AppMemberStatus", Storage="_tblAppMemberList", ThisKey="AppMemberStatusID", OtherKey="AppMemberStatusID", IsUnique=false, IsForeignKey=false, DeleteRule="NoAction")]
			public EntitySet<tblAppMember> tblAppMemberList
			{
				get { return this._tblAppMemberList; }
				set { this._tblAppMemberList.Assign(value); }
			}
			
			#endregion Associations

			#region Property changing events
			public event PropertyChangingEventHandler PropertyChanging;
			public event PropertyChangedEventHandler PropertyChanged;
			public event PropertySetterInvokedEventHandler PropertySetterInvoked;
			
			protected virtual void SendPropertyChanging()
			{
				if (this.PropertyChanging != null)
				{
					this.PropertyChanging(this, emptyChangingEventArgs);
				}
			}
			
			protected virtual void SendPropertyChanged(String propertyName)
			{
				if (this.PropertyChanged != null)
				{
					this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
				}
			}
			
			protected virtual void SendPropertySetterInvoked(String propertyName, Object value)
			{
				if (this.PropertySetterInvoked != null)
				{
					this.PropertySetterInvoked.Invoke(this, propertyName, value);
				}
			}
			#endregion Property changing events
		}
		#endregion dbo.tblAppMemberStatus

		#region guest.tblAppMemberStatus
		[TableAttribute(Name="guest.tblAppMemberStatus")]
		public partial class guest_tblAppMemberStatus : EntityBase<guest_tblAppMemberStatus, dbCalystoUnittestDataContext>, INotifyPropertyChanging, INotifyPropertyChanged, IPropertySetterInvoked
		{
			private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

			#region Storage members
			private int _AppMemberStatusID;
			private bool _IsActive;
			private string _Name;
			private string _Description;
			#endregion Storage members

			#region Extensibility Method Definitions
			partial void OnLoaded();
			partial void OnValidate(Calysto.Data.Linq.ChangeAction action);
			partial void OnCreated();
			partial void OnAppMemberStatusIDChanging(int value);
			partial void OnAppMemberStatusIDChanged();
			partial void OnIsActiveChanging(bool value);
			partial void OnIsActiveChanged();
			partial void OnNameChanging(string value);
			partial void OnNameChanged();
			partial void OnDescriptionChanging(string value);
			partial void OnDescriptionChanged();
			#endregion

			public guest_tblAppMemberStatus()
			{
				OnCreated();
			}

			#region Columns
			/// <summary>
			/// Column DbType=Int NOT NULL
			/// </summary>
			[ColumnAttribute(Storage="_AppMemberStatusID", DbType="Int NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
			public int AppMemberStatusID
			{
				get
				{
					return this._AppMemberStatusID;
				}
				set
				{
					if (this._AppMemberStatusID != value)
					{
						this.OnAppMemberStatusIDChanging(value);
						this.SendPropertyChanging();
						this._AppMemberStatusID = value;
						this.SendPropertyChanged("AppMemberStatusID");
						this.OnAppMemberStatusIDChanged();
					}
					this.SendPropertySetterInvoked("AppMemberStatusID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit NOT NULL
			/// </summary>
			[ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL", CanBeNull=false)]
			public bool IsActive
			{
				get
				{
					return this._IsActive;
				}
				set
				{
					if (this._IsActive != value)
					{
						this.OnIsActiveChanging(value);
						this.SendPropertyChanging();
						this._IsActive = value;
						this.SendPropertyChanged("IsActive");
						this.OnIsActiveChanged();
					}
					this.SendPropertySetterInvoked("IsActive", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(100)
			/// </summary>
			[ColumnAttribute(Storage="_Name", DbType="NVarChar(100)", CanBeNull=true)]
			public string Name
			{
				get
				{
					return this._Name;
				}
				set
				{
					if (this._Name != value)
					{
						this.OnNameChanging(value);
						this.SendPropertyChanging();
						this._Name = value;
						this.SendPropertyChanged("Name");
						this.OnNameChanged();
					}
					this.SendPropertySetterInvoked("Name", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(500)
			/// </summary>
			[ColumnAttribute(Storage="_Description", DbType="NVarChar(500)", CanBeNull=true)]
			public string Description
			{
				get
				{
					return this._Description;
				}
				set
				{
					if (this._Description != value)
					{
						this.OnDescriptionChanging(value);
						this.SendPropertyChanging();
						this._Description = value;
						this.SendPropertyChanged("Description");
						this.OnDescriptionChanged();
					}
					this.SendPropertySetterInvoked("Description", value);
				}
			}
			
			#endregion Columns

			#region Associations
			#endregion Associations

			#region Property changing events
			public event PropertyChangingEventHandler PropertyChanging;
			public event PropertyChangedEventHandler PropertyChanged;
			public event PropertySetterInvokedEventHandler PropertySetterInvoked;
			
			protected virtual void SendPropertyChanging()
			{
				if (this.PropertyChanging != null)
				{
					this.PropertyChanging(this, emptyChangingEventArgs);
				}
			}
			
			protected virtual void SendPropertyChanged(String propertyName)
			{
				if (this.PropertyChanged != null)
				{
					this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
				}
			}
			
			protected virtual void SendPropertySetterInvoked(String propertyName, Object value)
			{
				if (this.PropertySetterInvoked != null)
				{
					this.PropertySetterInvoked.Invoke(this, propertyName, value);
				}
			}
			#endregion Property changing events
		}
		#endregion guest.tblAppMemberStatus

		#region dbo.tblAppMobileLog
		[TableAttribute(Name="dbo.tblAppMobileLog")]
		public partial class tblAppMobileLog : EntityBase<tblAppMobileLog, dbCalystoUnittestDataContext>, INotifyPropertyChanging, INotifyPropertyChanged, IPropertySetterInvoked
		{
			private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

			#region Storage members
			private DateTime _ServerDate;
			private DateTime? _MobileDate;
			private string _IMEI;
			private string _MSISDN;
			private int? _AppMobileLogKindID;
			private int? _AppMemberID;
			private string _CurrentUrl;
			private int? _RemainingChargePercent;
			private string _PowerSource;
			private string _BatteryStatus;
			private string _SubscriberId;
			private string _NetworkType;
			private string _PhoneType;
			private string _SimState;
			private string _NetworkOperator;
			private DateTime? _LocationDate;
			private string _LocationError;
			private double? _Latitude;
			private double? _Longitude;
			private double? _AccuracyMeters;
			private string _Address;
			#endregion Storage members

			#region Extensibility Method Definitions
			partial void OnLoaded();
			partial void OnValidate(Calysto.Data.Linq.ChangeAction action);
			partial void OnCreated();
			partial void OnServerDateChanging(DateTime value);
			partial void OnServerDateChanged();
			partial void OnMobileDateChanging(DateTime? value);
			partial void OnMobileDateChanged();
			partial void OnIMEIChanging(string value);
			partial void OnIMEIChanged();
			partial void OnMSISDNChanging(string value);
			partial void OnMSISDNChanged();
			partial void OnAppMobileLogKindIDChanging(int? value);
			partial void OnAppMobileLogKindIDChanged();
			partial void OnAppMemberIDChanging(int? value);
			partial void OnAppMemberIDChanged();
			partial void OnCurrentUrlChanging(string value);
			partial void OnCurrentUrlChanged();
			partial void OnRemainingChargePercentChanging(int? value);
			partial void OnRemainingChargePercentChanged();
			partial void OnPowerSourceChanging(string value);
			partial void OnPowerSourceChanged();
			partial void OnBatteryStatusChanging(string value);
			partial void OnBatteryStatusChanged();
			partial void OnSubscriberIdChanging(string value);
			partial void OnSubscriberIdChanged();
			partial void OnNetworkTypeChanging(string value);
			partial void OnNetworkTypeChanged();
			partial void OnPhoneTypeChanging(string value);
			partial void OnPhoneTypeChanged();
			partial void OnSimStateChanging(string value);
			partial void OnSimStateChanged();
			partial void OnNetworkOperatorChanging(string value);
			partial void OnNetworkOperatorChanged();
			partial void OnLocationDateChanging(DateTime? value);
			partial void OnLocationDateChanged();
			partial void OnLocationErrorChanging(string value);
			partial void OnLocationErrorChanged();
			partial void OnLatitudeChanging(double? value);
			partial void OnLatitudeChanged();
			partial void OnLongitudeChanging(double? value);
			partial void OnLongitudeChanged();
			partial void OnAccuracyMetersChanging(double? value);
			partial void OnAccuracyMetersChanged();
			partial void OnAddressChanging(string value);
			partial void OnAddressChanged();
			#endregion

			public tblAppMobileLog()
			{
				OnCreated();
			}

			#region Columns
			/// <summary>
			/// Column DbType=DateTime NOT NULL
			/// </summary>
			[ColumnAttribute(Storage="_ServerDate", DbType="DateTime NOT NULL", CanBeNull=false)]
			public DateTime ServerDate
			{
				get
				{
					return this._ServerDate;
				}
				set
				{
					if (this._ServerDate != value)
					{
						this.OnServerDateChanging(value);
						this.SendPropertyChanging();
						this._ServerDate = value;
						this.SendPropertyChanged("ServerDate");
						this.OnServerDateChanged();
					}
					this.SendPropertySetterInvoked("ServerDate", value);
				}
			}
			
			/// <summary>
			/// Column DbType=DateTime
			/// </summary>
			[ColumnAttribute(Storage="_MobileDate", DbType="DateTime", CanBeNull=true)]
			public DateTime? MobileDate
			{
				get
				{
					return this._MobileDate;
				}
				set
				{
					if (this._MobileDate != value)
					{
						this.OnMobileDateChanging(value);
						this.SendPropertyChanging();
						this._MobileDate = value;
						this.SendPropertyChanged("MobileDate");
						this.OnMobileDateChanged();
					}
					this.SendPropertySetterInvoked("MobileDate", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_IMEI", DbType="VarChar(50)", CanBeNull=true)]
			public string IMEI
			{
				get
				{
					return this._IMEI;
				}
				set
				{
					if (this._IMEI != value)
					{
						this.OnIMEIChanging(value);
						this.SendPropertyChanging();
						this._IMEI = value;
						this.SendPropertyChanged("IMEI");
						this.OnIMEIChanged();
					}
					this.SendPropertySetterInvoked("IMEI", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(20)
			/// </summary>
			[ColumnAttribute(Storage="_MSISDN", DbType="VarChar(20)", CanBeNull=true)]
			public string MSISDN
			{
				get
				{
					return this._MSISDN;
				}
				set
				{
					if (this._MSISDN != value)
					{
						this.OnMSISDNChanging(value);
						this.SendPropertyChanging();
						this._MSISDN = value;
						this.SendPropertyChanged("MSISDN");
						this.OnMSISDNChanged();
					}
					this.SendPropertySetterInvoked("MSISDN", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int
			/// </summary>
			[ColumnAttribute(Storage="_AppMobileLogKindID", DbType="Int", CanBeNull=true)]
			public int? AppMobileLogKindID
			{
				get
				{
					return this._AppMobileLogKindID;
				}
				set
				{
					if (this._AppMobileLogKindID != value)
					{
						this.OnAppMobileLogKindIDChanging(value);
						this.SendPropertyChanging();
						this._AppMobileLogKindID = value;
						this.SendPropertyChanged("AppMobileLogKindID");
						this.OnAppMobileLogKindIDChanged();
					}
					this.SendPropertySetterInvoked("AppMobileLogKindID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int
			/// </summary>
			[ColumnAttribute(Storage="_AppMemberID", DbType="Int", CanBeNull=true)]
			public int? AppMemberID
			{
				get
				{
					return this._AppMemberID;
				}
				set
				{
					if (this._AppMemberID != value)
					{
						this.OnAppMemberIDChanging(value);
						this.SendPropertyChanging();
						this._AppMemberID = value;
						this.SendPropertyChanged("AppMemberID");
						this.OnAppMemberIDChanged();
					}
					this.SendPropertySetterInvoked("AppMemberID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(255)
			/// </summary>
			[ColumnAttribute(Storage="_CurrentUrl", DbType="VarChar(255)", CanBeNull=true)]
			public string CurrentUrl
			{
				get
				{
					return this._CurrentUrl;
				}
				set
				{
					if (this._CurrentUrl != value)
					{
						this.OnCurrentUrlChanging(value);
						this.SendPropertyChanging();
						this._CurrentUrl = value;
						this.SendPropertyChanged("CurrentUrl");
						this.OnCurrentUrlChanged();
					}
					this.SendPropertySetterInvoked("CurrentUrl", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int
			/// </summary>
			[ColumnAttribute(Storage="_RemainingChargePercent", DbType="Int", CanBeNull=true)]
			public int? RemainingChargePercent
			{
				get
				{
					return this._RemainingChargePercent;
				}
				set
				{
					if (this._RemainingChargePercent != value)
					{
						this.OnRemainingChargePercentChanging(value);
						this.SendPropertyChanging();
						this._RemainingChargePercent = value;
						this.SendPropertyChanged("RemainingChargePercent");
						this.OnRemainingChargePercentChanged();
					}
					this.SendPropertySetterInvoked("RemainingChargePercent", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_PowerSource", DbType="VarChar(50)", CanBeNull=true)]
			public string PowerSource
			{
				get
				{
					return this._PowerSource;
				}
				set
				{
					if (this._PowerSource != value)
					{
						this.OnPowerSourceChanging(value);
						this.SendPropertyChanging();
						this._PowerSource = value;
						this.SendPropertyChanged("PowerSource");
						this.OnPowerSourceChanged();
					}
					this.SendPropertySetterInvoked("PowerSource", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_BatteryStatus", DbType="VarChar(50)", CanBeNull=true)]
			public string BatteryStatus
			{
				get
				{
					return this._BatteryStatus;
				}
				set
				{
					if (this._BatteryStatus != value)
					{
						this.OnBatteryStatusChanging(value);
						this.SendPropertyChanging();
						this._BatteryStatus = value;
						this.SendPropertyChanged("BatteryStatus");
						this.OnBatteryStatusChanged();
					}
					this.SendPropertySetterInvoked("BatteryStatus", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_SubscriberId", DbType="VarChar(50)", CanBeNull=true)]
			public string SubscriberId
			{
				get
				{
					return this._SubscriberId;
				}
				set
				{
					if (this._SubscriberId != value)
					{
						this.OnSubscriberIdChanging(value);
						this.SendPropertyChanging();
						this._SubscriberId = value;
						this.SendPropertyChanged("SubscriberId");
						this.OnSubscriberIdChanged();
					}
					this.SendPropertySetterInvoked("SubscriberId", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_NetworkType", DbType="VarChar(50)", CanBeNull=true)]
			public string NetworkType
			{
				get
				{
					return this._NetworkType;
				}
				set
				{
					if (this._NetworkType != value)
					{
						this.OnNetworkTypeChanging(value);
						this.SendPropertyChanging();
						this._NetworkType = value;
						this.SendPropertyChanged("NetworkType");
						this.OnNetworkTypeChanged();
					}
					this.SendPropertySetterInvoked("NetworkType", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_PhoneType", DbType="VarChar(50)", CanBeNull=true)]
			public string PhoneType
			{
				get
				{
					return this._PhoneType;
				}
				set
				{
					if (this._PhoneType != value)
					{
						this.OnPhoneTypeChanging(value);
						this.SendPropertyChanging();
						this._PhoneType = value;
						this.SendPropertyChanged("PhoneType");
						this.OnPhoneTypeChanged();
					}
					this.SendPropertySetterInvoked("PhoneType", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_SimState", DbType="VarChar(50)", CanBeNull=true)]
			public string SimState
			{
				get
				{
					return this._SimState;
				}
				set
				{
					if (this._SimState != value)
					{
						this.OnSimStateChanging(value);
						this.SendPropertyChanging();
						this._SimState = value;
						this.SendPropertyChanged("SimState");
						this.OnSimStateChanged();
					}
					this.SendPropertySetterInvoked("SimState", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_NetworkOperator", DbType="VarChar(50)", CanBeNull=true)]
			public string NetworkOperator
			{
				get
				{
					return this._NetworkOperator;
				}
				set
				{
					if (this._NetworkOperator != value)
					{
						this.OnNetworkOperatorChanging(value);
						this.SendPropertyChanging();
						this._NetworkOperator = value;
						this.SendPropertyChanged("NetworkOperator");
						this.OnNetworkOperatorChanged();
					}
					this.SendPropertySetterInvoked("NetworkOperator", value);
				}
			}
			
			/// <summary>
			/// Column DbType=DateTime
			/// </summary>
			[ColumnAttribute(Storage="_LocationDate", DbType="DateTime", CanBeNull=true)]
			public DateTime? LocationDate
			{
				get
				{
					return this._LocationDate;
				}
				set
				{
					if (this._LocationDate != value)
					{
						this.OnLocationDateChanging(value);
						this.SendPropertyChanging();
						this._LocationDate = value;
						this.SendPropertyChanged("LocationDate");
						this.OnLocationDateChanged();
					}
					this.SendPropertySetterInvoked("LocationDate", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(200)
			/// </summary>
			[ColumnAttribute(Storage="_LocationError", DbType="VarChar(200)", CanBeNull=true)]
			public string LocationError
			{
				get
				{
					return this._LocationError;
				}
				set
				{
					if (this._LocationError != value)
					{
						this.OnLocationErrorChanging(value);
						this.SendPropertyChanging();
						this._LocationError = value;
						this.SendPropertyChanged("LocationError");
						this.OnLocationErrorChanged();
					}
					this.SendPropertySetterInvoked("LocationError", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Float
			/// </summary>
			[ColumnAttribute(Storage="_Latitude", DbType="Float", CanBeNull=true)]
			public double? Latitude
			{
				get
				{
					return this._Latitude;
				}
				set
				{
					if (this._Latitude != value)
					{
						this.OnLatitudeChanging(value);
						this.SendPropertyChanging();
						this._Latitude = value;
						this.SendPropertyChanged("Latitude");
						this.OnLatitudeChanged();
					}
					this.SendPropertySetterInvoked("Latitude", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Float
			/// </summary>
			[ColumnAttribute(Storage="_Longitude", DbType="Float", CanBeNull=true)]
			public double? Longitude
			{
				get
				{
					return this._Longitude;
				}
				set
				{
					if (this._Longitude != value)
					{
						this.OnLongitudeChanging(value);
						this.SendPropertyChanging();
						this._Longitude = value;
						this.SendPropertyChanged("Longitude");
						this.OnLongitudeChanged();
					}
					this.SendPropertySetterInvoked("Longitude", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Float
			/// </summary>
			[ColumnAttribute(Storage="_AccuracyMeters", DbType="Float", CanBeNull=true)]
			public double? AccuracyMeters
			{
				get
				{
					return this._AccuracyMeters;
				}
				set
				{
					if (this._AccuracyMeters != value)
					{
						this.OnAccuracyMetersChanging(value);
						this.SendPropertyChanging();
						this._AccuracyMeters = value;
						this.SendPropertyChanged("AccuracyMeters");
						this.OnAccuracyMetersChanged();
					}
					this.SendPropertySetterInvoked("AccuracyMeters", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(200)
			/// </summary>
			[ColumnAttribute(Storage="_Address", DbType="NVarChar(200)", CanBeNull=true)]
			public string Address
			{
				get
				{
					return this._Address;
				}
				set
				{
					if (this._Address != value)
					{
						this.OnAddressChanging(value);
						this.SendPropertyChanging();
						this._Address = value;
						this.SendPropertyChanged("Address");
						this.OnAddressChanged();
					}
					this.SendPropertySetterInvoked("Address", value);
				}
			}
			
			#endregion Columns

			#region Associations
			#endregion Associations

			#region Property changing events
			public event PropertyChangingEventHandler PropertyChanging;
			public event PropertyChangedEventHandler PropertyChanged;
			public event PropertySetterInvokedEventHandler PropertySetterInvoked;
			
			protected virtual void SendPropertyChanging()
			{
				if (this.PropertyChanging != null)
				{
					this.PropertyChanging(this, emptyChangingEventArgs);
				}
			}
			
			protected virtual void SendPropertyChanged(String propertyName)
			{
				if (this.PropertyChanged != null)
				{
					this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
				}
			}
			
			protected virtual void SendPropertySetterInvoked(String propertyName, Object value)
			{
				if (this.PropertySetterInvoked != null)
				{
					this.PropertySetterInvoked.Invoke(this, propertyName, value);
				}
			}
			#endregion Property changing events
		}
		#endregion dbo.tblAppMobileLog

		#region dbo.tblAppMobileLogKind
		[TableAttribute(Name="dbo.tblAppMobileLogKind")]
		public partial class tblAppMobileLogKind : EntityBase<tblAppMobileLogKind, dbCalystoUnittestDataContext>, INotifyPropertyChanging, INotifyPropertyChanged, IPropertySetterInvoked
		{
			private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

			#region Storage members
			private int _AppMobileLogKindID;
			private string _Name;
			#endregion Storage members

			#region Extensibility Method Definitions
			partial void OnLoaded();
			partial void OnValidate(Calysto.Data.Linq.ChangeAction action);
			partial void OnCreated();
			partial void OnAppMobileLogKindIDChanging(int value);
			partial void OnAppMobileLogKindIDChanged();
			partial void OnNameChanging(string value);
			partial void OnNameChanged();
			#endregion

			public tblAppMobileLogKind()
			{
				OnCreated();
			}

			#region Columns
			/// <summary>
			/// Column DbType=Int NOT NULL
			/// </summary>
			[ColumnAttribute(Storage="_AppMobileLogKindID", DbType="Int NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
			public int AppMobileLogKindID
			{
				get
				{
					return this._AppMobileLogKindID;
				}
				set
				{
					if (this._AppMobileLogKindID != value)
					{
						this.OnAppMobileLogKindIDChanging(value);
						this.SendPropertyChanging();
						this._AppMobileLogKindID = value;
						this.SendPropertyChanged("AppMobileLogKindID");
						this.OnAppMobileLogKindIDChanged();
					}
					this.SendPropertySetterInvoked("AppMobileLogKindID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(50) NOT NULL
			/// </summary>
			[ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
			public string Name
			{
				get
				{
					return this._Name;
				}
				set
				{
					if (this._Name != value)
					{
						this.OnNameChanging(value);
						this.SendPropertyChanging();
						this._Name = value;
						this.SendPropertyChanged("Name");
						this.OnNameChanged();
					}
					this.SendPropertySetterInvoked("Name", value);
				}
			}
			
			#endregion Columns

			#region Associations
			#endregion Associations

			#region Property changing events
			public event PropertyChangingEventHandler PropertyChanging;
			public event PropertyChangedEventHandler PropertyChanged;
			public event PropertySetterInvokedEventHandler PropertySetterInvoked;
			
			protected virtual void SendPropertyChanging()
			{
				if (this.PropertyChanging != null)
				{
					this.PropertyChanging(this, emptyChangingEventArgs);
				}
			}
			
			protected virtual void SendPropertyChanged(String propertyName)
			{
				if (this.PropertyChanged != null)
				{
					this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
				}
			}
			
			protected virtual void SendPropertySetterInvoked(String propertyName, Object value)
			{
				if (this.PropertySetterInvoked != null)
				{
					this.PropertySetterInvoked.Invoke(this, propertyName, value);
				}
			}
			#endregion Property changing events
		}
		#endregion dbo.tblAppMobileLogKind

		#region dbo.tblAppNewsletter
		[TableAttribute(Name="dbo.tblAppNewsletter")]
		public partial class tblAppNewsletter : EntityBase<tblAppNewsletter, dbCalystoUnittestDataContext>, INotifyPropertyChanging, INotifyPropertyChanged, IPropertySetterInvoked
		{
			private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

			#region Storage members
			private string _Email;
			private DateTime _InsertionDate;
			private DateTime? _SubscribeDate;
			private DateTime? _UnsubscribeDate;
			private bool _IsSubscribed;
			#endregion Storage members

			#region Extensibility Method Definitions
			partial void OnLoaded();
			partial void OnValidate(Calysto.Data.Linq.ChangeAction action);
			partial void OnCreated();
			partial void OnEmailChanging(string value);
			partial void OnEmailChanged();
			partial void OnInsertionDateChanging(DateTime value);
			partial void OnInsertionDateChanged();
			partial void OnSubscribeDateChanging(DateTime? value);
			partial void OnSubscribeDateChanged();
			partial void OnUnsubscribeDateChanging(DateTime? value);
			partial void OnUnsubscribeDateChanged();
			partial void OnIsSubscribedChanging(bool value);
			partial void OnIsSubscribedChanged();
			#endregion

			public tblAppNewsletter()
			{
				OnCreated();
			}

			#region Columns
			/// <summary>
			/// Column DbType=VarChar(150) NOT NULL
			/// </summary>
			[ColumnAttribute(Storage="_Email", DbType="VarChar(150) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
			public string Email
			{
				get
				{
					return this._Email;
				}
				set
				{
					if (this._Email != value)
					{
						this.OnEmailChanging(value);
						this.SendPropertyChanging();
						this._Email = value;
						this.SendPropertyChanged("Email");
						this.OnEmailChanged();
					}
					this.SendPropertySetterInvoked("Email", value);
				}
			}
			
			/// <summary>
			/// Column DbType=DateTime NOT NULL
			/// </summary>
			[ColumnAttribute(Storage="_InsertionDate", DbType="DateTime NOT NULL", CanBeNull=false)]
			public DateTime InsertionDate
			{
				get
				{
					return this._InsertionDate;
				}
				set
				{
					if (this._InsertionDate != value)
					{
						this.OnInsertionDateChanging(value);
						this.SendPropertyChanging();
						this._InsertionDate = value;
						this.SendPropertyChanged("InsertionDate");
						this.OnInsertionDateChanged();
					}
					this.SendPropertySetterInvoked("InsertionDate", value);
				}
			}
			
			/// <summary>
			/// Column DbType=DateTime
			/// </summary>
			[ColumnAttribute(Storage="_SubscribeDate", DbType="DateTime", CanBeNull=true)]
			public DateTime? SubscribeDate
			{
				get
				{
					return this._SubscribeDate;
				}
				set
				{
					if (this._SubscribeDate != value)
					{
						this.OnSubscribeDateChanging(value);
						this.SendPropertyChanging();
						this._SubscribeDate = value;
						this.SendPropertyChanged("SubscribeDate");
						this.OnSubscribeDateChanged();
					}
					this.SendPropertySetterInvoked("SubscribeDate", value);
				}
			}
			
			/// <summary>
			/// Column DbType=DateTime
			/// </summary>
			[ColumnAttribute(Storage="_UnsubscribeDate", DbType="DateTime", CanBeNull=true)]
			public DateTime? UnsubscribeDate
			{
				get
				{
					return this._UnsubscribeDate;
				}
				set
				{
					if (this._UnsubscribeDate != value)
					{
						this.OnUnsubscribeDateChanging(value);
						this.SendPropertyChanging();
						this._UnsubscribeDate = value;
						this.SendPropertyChanged("UnsubscribeDate");
						this.OnUnsubscribeDateChanged();
					}
					this.SendPropertySetterInvoked("UnsubscribeDate", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit NOT NULL
			/// </summary>
			[ColumnAttribute(Storage="_IsSubscribed", DbType="Bit NOT NULL", CanBeNull=false)]
			public bool IsSubscribed
			{
				get
				{
					return this._IsSubscribed;
				}
				set
				{
					if (this._IsSubscribed != value)
					{
						this.OnIsSubscribedChanging(value);
						this.SendPropertyChanging();
						this._IsSubscribed = value;
						this.SendPropertyChanged("IsSubscribed");
						this.OnIsSubscribedChanged();
					}
					this.SendPropertySetterInvoked("IsSubscribed", value);
				}
			}
			
			#endregion Columns

			#region Associations
			#endregion Associations

			#region Property changing events
			public event PropertyChangingEventHandler PropertyChanging;
			public event PropertyChangedEventHandler PropertyChanged;
			public event PropertySetterInvokedEventHandler PropertySetterInvoked;
			
			protected virtual void SendPropertyChanging()
			{
				if (this.PropertyChanging != null)
				{
					this.PropertyChanging(this, emptyChangingEventArgs);
				}
			}
			
			protected virtual void SendPropertyChanged(String propertyName)
			{
				if (this.PropertyChanged != null)
				{
					this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
				}
			}
			
			protected virtual void SendPropertySetterInvoked(String propertyName, Object value)
			{
				if (this.PropertySetterInvoked != null)
				{
					this.PropertySetterInvoked.Invoke(this, propertyName, value);
				}
			}
			#endregion Property changing events
		}
		#endregion dbo.tblAppNewsletter

		#region dbo.tblAppPermission
		[TableAttribute(Name="dbo.tblAppPermission")]
		public partial class tblAppPermission : EntityBase<tblAppPermission, dbCalystoUnittestDataContext>, INotifyPropertyChanging, INotifyPropertyChanged, IPropertySetterInvoked
		{
			private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

			#region Storage members
			private int _AppPermissionID;
			private bool _IsActive;
			private string _Name;
			private string _Description;
			private string _GroupName;
			private int? _Ordinal;
			private EntitySet<tblAppMemberPermission> _tblAppMemberPermissionList;
			#endregion Storage members

			#region Extensibility Method Definitions
			partial void OnLoaded();
			partial void OnValidate(Calysto.Data.Linq.ChangeAction action);
			partial void OnCreated();
			partial void OnAppPermissionIDChanging(int value);
			partial void OnAppPermissionIDChanged();
			partial void OnIsActiveChanging(bool value);
			partial void OnIsActiveChanged();
			partial void OnNameChanging(string value);
			partial void OnNameChanged();
			partial void OnDescriptionChanging(string value);
			partial void OnDescriptionChanged();
			partial void OnGroupNameChanging(string value);
			partial void OnGroupNameChanged();
			partial void OnOrdinalChanging(int? value);
			partial void OnOrdinalChanged();
			#endregion

			public tblAppPermission()
			{
				_tblAppMemberPermissionList = new EntitySet<tblAppMemberPermission>(
					new Action<tblAppMemberPermission>(item=>{this.SendPropertyChanging(); item.tblAppPermission=this;}), 
					new Action<tblAppMemberPermission>(item=>{this.SendPropertyChanging(); item.tblAppPermission=null;}));
				OnCreated();
			}

			#region Columns
			/// <summary>
			/// Column DbType=Int NOT NULL IDENTITY
			/// </summary>
			[ColumnAttribute(Storage="_AppPermissionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", CanBeNull=false, IsPrimaryKey=true, IsDbGenerated=true)]
			public int AppPermissionID
			{
				get
				{
					return this._AppPermissionID;
				}
				set
				{
					if (this._AppPermissionID != value)
					{
						this.OnAppPermissionIDChanging(value);
						this.SendPropertyChanging();
						this._AppPermissionID = value;
						this.SendPropertyChanged("AppPermissionID");
						this.OnAppPermissionIDChanged();
					}
					this.SendPropertySetterInvoked("AppPermissionID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit NOT NULL
			/// </summary>
			[ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL", CanBeNull=false)]
			public bool IsActive
			{
				get
				{
					return this._IsActive;
				}
				set
				{
					if (this._IsActive != value)
					{
						this.OnIsActiveChanging(value);
						this.SendPropertyChanging();
						this._IsActive = value;
						this.SendPropertyChanged("IsActive");
						this.OnIsActiveChanged();
					}
					this.SendPropertySetterInvoked("IsActive", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(100) NOT NULL
			/// </summary>
			[ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
			public string Name
			{
				get
				{
					return this._Name;
				}
				set
				{
					if (this._Name != value)
					{
						this.OnNameChanging(value);
						this.SendPropertyChanging();
						this._Name = value;
						this.SendPropertyChanged("Name");
						this.OnNameChanged();
					}
					this.SendPropertySetterInvoked("Name", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(500)
			/// </summary>
			[ColumnAttribute(Storage="_Description", DbType="NVarChar(500)", CanBeNull=true)]
			public string Description
			{
				get
				{
					return this._Description;
				}
				set
				{
					if (this._Description != value)
					{
						this.OnDescriptionChanging(value);
						this.SendPropertyChanging();
						this._Description = value;
						this.SendPropertyChanged("Description");
						this.OnDescriptionChanged();
					}
					this.SendPropertySetterInvoked("Description", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_GroupName", DbType="NVarChar(50)", CanBeNull=true)]
			public string GroupName
			{
				get
				{
					return this._GroupName;
				}
				set
				{
					if (this._GroupName != value)
					{
						this.OnGroupNameChanging(value);
						this.SendPropertyChanging();
						this._GroupName = value;
						this.SendPropertyChanged("GroupName");
						this.OnGroupNameChanged();
					}
					this.SendPropertySetterInvoked("GroupName", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int
			/// </summary>
			[ColumnAttribute(Storage="_Ordinal", DbType="Int", CanBeNull=true)]
			public int? Ordinal
			{
				get
				{
					return this._Ordinal;
				}
				set
				{
					if (this._Ordinal != value)
					{
						this.OnOrdinalChanging(value);
						this.SendPropertyChanging();
						this._Ordinal = value;
						this.SendPropertyChanged("Ordinal");
						this.OnOrdinalChanged();
					}
					this.SendPropertySetterInvoked("Ordinal", value);
				}
			}
			
			#endregion Columns

			#region Associations
			/// <summary>
			/// Association [PK][One]tblAppPermission.AppPermissionID --- [FK][Many]tblAppMemberPermission.AppPermissionID
			/// </summary>
			[AssociationAttribute(Name="FK_AppMemberPermission_AppPermission", Storage="_tblAppMemberPermissionList", ThisKey="AppPermissionID", OtherKey="AppPermissionID", IsUnique=false, IsForeignKey=false, DeleteRule="NoAction")]
			public EntitySet<tblAppMemberPermission> tblAppMemberPermissionList
			{
				get { return this._tblAppMemberPermissionList; }
				set { this._tblAppMemberPermissionList.Assign(value); }
			}
			
			#endregion Associations

			#region Property changing events
			public event PropertyChangingEventHandler PropertyChanging;
			public event PropertyChangedEventHandler PropertyChanged;
			public event PropertySetterInvokedEventHandler PropertySetterInvoked;
			
			protected virtual void SendPropertyChanging()
			{
				if (this.PropertyChanging != null)
				{
					this.PropertyChanging(this, emptyChangingEventArgs);
				}
			}
			
			protected virtual void SendPropertyChanged(String propertyName)
			{
				if (this.PropertyChanged != null)
				{
					this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
				}
			}
			
			protected virtual void SendPropertySetterInvoked(String propertyName, Object value)
			{
				if (this.PropertySetterInvoked != null)
				{
					this.PropertySetterInvoked.Invoke(this, propertyName, value);
				}
			}
			#endregion Property changing events
		}
		#endregion dbo.tblAppPermission

		#region dbo.tblMemberAddress
		[TableAttribute(Name="dbo.tblMemberAddress")]
		public partial class tblMemberAddress : EntityBase<tblMemberAddress, dbCalystoUnittestDataContext>, INotifyPropertyChanging, INotifyPropertyChanged, IPropertySetterInvoked
		{
			private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

			#region Storage members
			private int _MemberAddressID;
			private string _Street;
			private string _City;
			private EntitySet<tblAppMember> _HomeMemberAddressList;
			private EntitySet<tblAppMember> _PrimaryMemberAddressList;
			private EntitySet<tblAppMember> _WorkMemberAddressList;
			#endregion Storage members

			#region Extensibility Method Definitions
			partial void OnLoaded();
			partial void OnValidate(Calysto.Data.Linq.ChangeAction action);
			partial void OnCreated();
			partial void OnMemberAddressIDChanging(int value);
			partial void OnMemberAddressIDChanged();
			partial void OnStreetChanging(string value);
			partial void OnStreetChanged();
			partial void OnCityChanging(string value);
			partial void OnCityChanged();
			#endregion

			public tblMemberAddress()
			{
				_HomeMemberAddressList = new EntitySet<tblAppMember>(
					new Action<tblAppMember>(item=>{this.SendPropertyChanging(); item.HomeMemberAddress=this;}), 
					new Action<tblAppMember>(item=>{this.SendPropertyChanging(); item.HomeMemberAddress=null;}));
				_PrimaryMemberAddressList = new EntitySet<tblAppMember>(
					new Action<tblAppMember>(item=>{this.SendPropertyChanging(); item.PrimaryMemberAddress=this;}), 
					new Action<tblAppMember>(item=>{this.SendPropertyChanging(); item.PrimaryMemberAddress=null;}));
				_WorkMemberAddressList = new EntitySet<tblAppMember>(
					new Action<tblAppMember>(item=>{this.SendPropertyChanging(); item.WorkMemberAddress=this;}), 
					new Action<tblAppMember>(item=>{this.SendPropertyChanging(); item.WorkMemberAddress=null;}));
				OnCreated();
			}

			#region Columns
			/// <summary>
			/// Column DbType=Int NOT NULL IDENTITY
			/// </summary>
			[ColumnAttribute(Storage="_MemberAddressID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", CanBeNull=false, IsPrimaryKey=true, IsDbGenerated=true)]
			public int MemberAddressID
			{
				get
				{
					return this._MemberAddressID;
				}
				set
				{
					if (this._MemberAddressID != value)
					{
						this.OnMemberAddressIDChanging(value);
						this.SendPropertyChanging();
						this._MemberAddressID = value;
						this.SendPropertyChanged("MemberAddressID");
						this.OnMemberAddressIDChanged();
					}
					this.SendPropertySetterInvoked("MemberAddressID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NChar(10)
			/// </summary>
			[ColumnAttribute(Storage="_Street", DbType="NChar(10)", CanBeNull=true)]
			public string Street
			{
				get
				{
					return this._Street;
				}
				set
				{
					if (this._Street != value)
					{
						this.OnStreetChanging(value);
						this.SendPropertyChanging();
						this._Street = value;
						this.SendPropertyChanged("Street");
						this.OnStreetChanged();
					}
					this.SendPropertySetterInvoked("Street", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NChar(10)
			/// </summary>
			[ColumnAttribute(Storage="_City", DbType="NChar(10)", CanBeNull=true)]
			public string City
			{
				get
				{
					return this._City;
				}
				set
				{
					if (this._City != value)
					{
						this.OnCityChanging(value);
						this.SendPropertyChanging();
						this._City = value;
						this.SendPropertyChanged("City");
						this.OnCityChanged();
					}
					this.SendPropertySetterInvoked("City", value);
				}
			}
			
			#endregion Columns

			#region Associations
			/// <summary>
			/// Association [PK][One]tblMemberAddress.MemberAddressID --- [FK][Many]tblAppMember.HomeMemberAddressID
			/// </summary>
			[AssociationAttribute(Name="FKEF_HomeMemberAddress", Storage="_HomeMemberAddressList", ThisKey="MemberAddressID", OtherKey="HomeMemberAddressID", IsUnique=false, IsForeignKey=false, DeleteRule="NoAction")]
			public EntitySet<tblAppMember> HomeMemberAddressList
			{
				get { return this._HomeMemberAddressList; }
				set { this._HomeMemberAddressList.Assign(value); }
			}
			
			/// <summary>
			/// Association [PK][One]tblMemberAddress.MemberAddressID --- [FK][Many]tblAppMember.PrimaryMemberAddressID
			/// </summary>
			[AssociationAttribute(Name="FKEF_PrimaryMemberAddress", Storage="_PrimaryMemberAddressList", ThisKey="MemberAddressID", OtherKey="PrimaryMemberAddressID", IsUnique=false, IsForeignKey=false, DeleteRule="SetNull")]
			public EntitySet<tblAppMember> PrimaryMemberAddressList
			{
				get { return this._PrimaryMemberAddressList; }
				set { this._PrimaryMemberAddressList.Assign(value); }
			}
			
			/// <summary>
			/// Association [PK][One]tblMemberAddress.MemberAddressID --- [FK][Many]tblAppMember.WorkMemberAddressID
			/// </summary>
			[AssociationAttribute(Name="FKEF_WorkMemberAddress", Storage="_WorkMemberAddressList", ThisKey="MemberAddressID", OtherKey="WorkMemberAddressID", IsUnique=false, IsForeignKey=false, DeleteRule="NoAction")]
			public EntitySet<tblAppMember> WorkMemberAddressList
			{
				get { return this._WorkMemberAddressList; }
				set { this._WorkMemberAddressList.Assign(value); }
			}
			
			#endregion Associations

			#region Property changing events
			public event PropertyChangingEventHandler PropertyChanging;
			public event PropertyChangedEventHandler PropertyChanged;
			public event PropertySetterInvokedEventHandler PropertySetterInvoked;
			
			protected virtual void SendPropertyChanging()
			{
				if (this.PropertyChanging != null)
				{
					this.PropertyChanging(this, emptyChangingEventArgs);
				}
			}
			
			protected virtual void SendPropertyChanged(String propertyName)
			{
				if (this.PropertyChanged != null)
				{
					this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
				}
			}
			
			protected virtual void SendPropertySetterInvoked(String propertyName, Object value)
			{
				if (this.PropertySetterInvoked != null)
				{
					this.PropertySetterInvoked.Invoke(this, propertyName, value);
				}
			}
			#endregion Property changing events
		}
		#endregion dbo.tblMemberAddress

		#region dbo.tblVehicle
		[TableAttribute(Name="dbo.tblVehicle")]
		public partial class tblVehicle : EntityBase<tblVehicle, dbCalystoUnittestDataContext>, INotifyPropertyChanging, INotifyPropertyChanged, IPropertySetterInvoked
		{
			private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

			#region Storage members
			private int _VehicleID;
			private int _VehicleRipID;
			private EntityRef<tblVehicleRip> _tblVehicleRip;
			#endregion Storage members

			#region Extensibility Method Definitions
			partial void OnLoaded();
			partial void OnValidate(Calysto.Data.Linq.ChangeAction action);
			partial void OnCreated();
			partial void OnVehicleIDChanging(int value);
			partial void OnVehicleIDChanged();
			partial void OnVehicleRipIDChanging(int value);
			partial void OnVehicleRipIDChanged();
			#endregion

			public tblVehicle()
			{
				_tblVehicleRip = default(EntityRef<tblVehicleRip>);
				OnCreated();
			}

			#region Columns
			/// <summary>
			/// Column DbType=Int NOT NULL IDENTITY
			/// </summary>
			[ColumnAttribute(Storage="_VehicleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", CanBeNull=false, IsPrimaryKey=true, IsDbGenerated=true)]
			public int VehicleID
			{
				get
				{
					return this._VehicleID;
				}
				set
				{
					if (this._VehicleID != value)
					{
						this.OnVehicleIDChanging(value);
						this.SendPropertyChanging();
						this._VehicleID = value;
						this.SendPropertyChanged("VehicleID");
						this.OnVehicleIDChanged();
					}
					this.SendPropertySetterInvoked("VehicleID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int NOT NULL
			/// </summary>
			[ColumnAttribute(Storage="_VehicleRipID", DbType="Int NOT NULL", CanBeNull=false)]
			public int VehicleRipID
			{
				get
				{
					return this._VehicleRipID;
				}
				set
				{
					if (this._VehicleRipID != value)
					{
						this.OnVehicleRipIDChanging(value);
						this.SendPropertyChanging();
						this._VehicleRipID = value;
						this.SendPropertyChanged("VehicleRipID");
						this.OnVehicleRipIDChanged();
					}
					this.SendPropertySetterInvoked("VehicleRipID", value);
				}
			}
			
			#endregion Columns

			#region Associations
			/// <summary>
			/// Association [FK][Many]tblVehicle.VehicleRipID --- [PK][One]tblVehicleRip.VehicleRipID
			/// </summary>
			[AssociationAttribute(Name="FK_tblVehicle_tblVehicleRip", Storage="_tblVehicleRip", ThisKey="VehicleRipID", OtherKey="VehicleRipID", IsUnique=false, IsForeignKey=true)]
			public tblVehicleRip tblVehicleRip
			{
				get
				{
					return this._tblVehicleRip.Entity;
				}
				set
				{
					tblVehicleRip previousValue = this._tblVehicleRip.Entity;
					if ((previousValue != value) || (this._tblVehicleRip.HasLoadedOrAssignedValue == false))
					{
						this.SendPropertyChanging();
						if (previousValue != null)
						{
							this._tblVehicleRip.Entity = null;
							previousValue.tblVehicleList.Remove(this);
						}
						this._tblVehicleRip.Entity = value;
						if (value != null)
						{
							value.tblVehicleList.Add(this);
							this._VehicleRipID = value.VehicleRipID;
						}
						else
						{
							this._VehicleRipID = default(int);
						}
						this.SendPropertyChanged("tblVehicleRip");
					}
					this.SendPropertySetterInvoked("tblVehicleRip", value);
				}
			}
			
			#endregion Associations

			#region Property changing events
			public event PropertyChangingEventHandler PropertyChanging;
			public event PropertyChangedEventHandler PropertyChanged;
			public event PropertySetterInvokedEventHandler PropertySetterInvoked;
			
			protected virtual void SendPropertyChanging()
			{
				if (this.PropertyChanging != null)
				{
					this.PropertyChanging(this, emptyChangingEventArgs);
				}
			}
			
			protected virtual void SendPropertyChanged(String propertyName)
			{
				if (this.PropertyChanged != null)
				{
					this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
				}
			}
			
			protected virtual void SendPropertySetterInvoked(String propertyName, Object value)
			{
				if (this.PropertySetterInvoked != null)
				{
					this.PropertySetterInvoked.Invoke(this, propertyName, value);
				}
			}
			#endregion Property changing events
		}
		#endregion dbo.tblVehicle

		#region dbo.tblVehicleOverview
		[TableAttribute(Name="dbo.tblVehicleOverview")]
		public partial class tblVehicleOverview : EntityBase<tblVehicleOverview, dbCalystoUnittestDataContext>, INotifyPropertyChanging, INotifyPropertyChanged, IPropertySetterInvoked
		{
			private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

			#region Storage members
			private int _VehicleRipID;
			private DateTime? _LastUpdateDate;
			private string _countryCode;
			private string _sourceCountry;
			private double? _locationLat;
			private double? _locationLong;
			private bool? _multiRound;
			private bool? _hasPainPriceAgreement;
			private string _bodyType;
			private string _colour;
			private int? _doors;
			private DateTime? _firstRegistrationDate;
			private string _fuelType;
			private int? _hp;
			private bool? _hasVideo;
			private int? _km;
			private int? _kw;
			private string _gearType;
			private string _stockNumber;
			private int? _manufacturer;
			private string _manufacturerName;
			private string _mainType;
			private string _subType;
			private string _modelDescription;
			private bool? _isUnroadworthy;
			private string _emissionStandard;
			private bool? _ac;
			private bool? _allWheelDrive;
			private bool? _automatic;
			private bool? _backupCamera;
			private bool? _heatedSeats;
			private bool? _leather;
			private bool? _navigationSystem;
			private bool? _parkHeating;
			private bool? _pdc;
			private bool? _rearEntertainment;
			private bool? _sunroof;
			private bool? _xenon;
			private bool? _cashbackEligible;
			private double? _exportAdvantageAmount;
			private bool? _exportAdvantageEligible;
			private bool? _guaranteedSalesEligible;
			private string _premiumHandlingEligible;
			private string _packageDealEligibleSince;
			private bool? _taxDeduction;
			private bool? _lastRun;
			private string _lrcCountry;
			private string _exportAdvantageType;
			private string _exportAdvantageWarningType;
			private string _inspectionCompanyId;
			private string _inspectionReportPath;
			private int? _inspectionStatus;
			private int? _auctionDisplayChannelId;
			private DateTime? _auctionStartDatetime;
			private DateTime? _auctionEndDatetime;
			private DateTime? _evaluationEnd;
			private bool? _isInstantPurchaseOfferEnabled;
			private bool? _noBiddingEligible;
			private DateTime? _biddingStartDateTime;
			private double? _buyNowPrice;
			private string _discount;
			private string _expectedPriceDisplay;
			private string _expectedPriceTarget;
			private int? _minimumBid;
			private double? _mpPrice;
			private double? _percentOff;
			private double? _priceWithoutDiscount;
			private int? _searchPrice;
			private int? _lastTopBidValue;
			private int? _lastRunSaving;
			private bool? _isBuyNowEligible;
			private bool? _reservePriceHidden;
			private string _customChannelUrl;
			private string _source;
			private int? _auctionSecLeft;
			private bool? _localReverseCharge;
			private bool? _watchlisted;
			private bool? _isInPackageDeal;
			private bool? _isPackageDealEligible;
			private int? _noBiddingWindowSecLeft;
			private string _limitedTimeDiscount;
			private EntityRef<tblVehicleRip> _tblVehicleRip;
			private EntitySet<tblVehicleOverviewImage> _tblVehicleOverviewImageList;
			#endregion Storage members

			#region Extensibility Method Definitions
			partial void OnLoaded();
			partial void OnValidate(Calysto.Data.Linq.ChangeAction action);
			partial void OnCreated();
			partial void OnVehicleRipIDChanging(int value);
			partial void OnVehicleRipIDChanged();
			partial void OnLastUpdateDateChanging(DateTime? value);
			partial void OnLastUpdateDateChanged();
			partial void OncountryCodeChanging(string value);
			partial void OncountryCodeChanged();
			partial void OnsourceCountryChanging(string value);
			partial void OnsourceCountryChanged();
			partial void OnlocationLatChanging(double? value);
			partial void OnlocationLatChanged();
			partial void OnlocationLongChanging(double? value);
			partial void OnlocationLongChanged();
			partial void OnmultiRoundChanging(bool? value);
			partial void OnmultiRoundChanged();
			partial void OnhasPainPriceAgreementChanging(bool? value);
			partial void OnhasPainPriceAgreementChanged();
			partial void OnbodyTypeChanging(string value);
			partial void OnbodyTypeChanged();
			partial void OncolourChanging(string value);
			partial void OncolourChanged();
			partial void OndoorsChanging(int? value);
			partial void OndoorsChanged();
			partial void OnfirstRegistrationDateChanging(DateTime? value);
			partial void OnfirstRegistrationDateChanged();
			partial void OnfuelTypeChanging(string value);
			partial void OnfuelTypeChanged();
			partial void OnhpChanging(int? value);
			partial void OnhpChanged();
			partial void OnhasVideoChanging(bool? value);
			partial void OnhasVideoChanged();
			partial void OnkmChanging(int? value);
			partial void OnkmChanged();
			partial void OnkwChanging(int? value);
			partial void OnkwChanged();
			partial void OngearTypeChanging(string value);
			partial void OngearTypeChanged();
			partial void OnstockNumberChanging(string value);
			partial void OnstockNumberChanged();
			partial void OnmanufacturerChanging(int? value);
			partial void OnmanufacturerChanged();
			partial void OnmanufacturerNameChanging(string value);
			partial void OnmanufacturerNameChanged();
			partial void OnmainTypeChanging(string value);
			partial void OnmainTypeChanged();
			partial void OnsubTypeChanging(string value);
			partial void OnsubTypeChanged();
			partial void OnmodelDescriptionChanging(string value);
			partial void OnmodelDescriptionChanged();
			partial void OnisUnroadworthyChanging(bool? value);
			partial void OnisUnroadworthyChanged();
			partial void OnemissionStandardChanging(string value);
			partial void OnemissionStandardChanged();
			partial void OnacChanging(bool? value);
			partial void OnacChanged();
			partial void OnallWheelDriveChanging(bool? value);
			partial void OnallWheelDriveChanged();
			partial void OnautomaticChanging(bool? value);
			partial void OnautomaticChanged();
			partial void OnbackupCameraChanging(bool? value);
			partial void OnbackupCameraChanged();
			partial void OnheatedSeatsChanging(bool? value);
			partial void OnheatedSeatsChanged();
			partial void OnleatherChanging(bool? value);
			partial void OnleatherChanged();
			partial void OnnavigationSystemChanging(bool? value);
			partial void OnnavigationSystemChanged();
			partial void OnparkHeatingChanging(bool? value);
			partial void OnparkHeatingChanged();
			partial void OnpdcChanging(bool? value);
			partial void OnpdcChanged();
			partial void OnrearEntertainmentChanging(bool? value);
			partial void OnrearEntertainmentChanged();
			partial void OnsunroofChanging(bool? value);
			partial void OnsunroofChanged();
			partial void OnxenonChanging(bool? value);
			partial void OnxenonChanged();
			partial void OncashbackEligibleChanging(bool? value);
			partial void OncashbackEligibleChanged();
			partial void OnexportAdvantageAmountChanging(double? value);
			partial void OnexportAdvantageAmountChanged();
			partial void OnexportAdvantageEligibleChanging(bool? value);
			partial void OnexportAdvantageEligibleChanged();
			partial void OnguaranteedSalesEligibleChanging(bool? value);
			partial void OnguaranteedSalesEligibleChanged();
			partial void OnpremiumHandlingEligibleChanging(string value);
			partial void OnpremiumHandlingEligibleChanged();
			partial void OnpackageDealEligibleSinceChanging(string value);
			partial void OnpackageDealEligibleSinceChanged();
			partial void OntaxDeductionChanging(bool? value);
			partial void OntaxDeductionChanged();
			partial void OnlastRunChanging(bool? value);
			partial void OnlastRunChanged();
			partial void OnlrcCountryChanging(string value);
			partial void OnlrcCountryChanged();
			partial void OnexportAdvantageTypeChanging(string value);
			partial void OnexportAdvantageTypeChanged();
			partial void OnexportAdvantageWarningTypeChanging(string value);
			partial void OnexportAdvantageWarningTypeChanged();
			partial void OninspectionCompanyIdChanging(string value);
			partial void OninspectionCompanyIdChanged();
			partial void OninspectionReportPathChanging(string value);
			partial void OninspectionReportPathChanged();
			partial void OninspectionStatusChanging(int? value);
			partial void OninspectionStatusChanged();
			partial void OnauctionDisplayChannelIdChanging(int? value);
			partial void OnauctionDisplayChannelIdChanged();
			partial void OnauctionStartDatetimeChanging(DateTime? value);
			partial void OnauctionStartDatetimeChanged();
			partial void OnauctionEndDatetimeChanging(DateTime? value);
			partial void OnauctionEndDatetimeChanged();
			partial void OnevaluationEndChanging(DateTime? value);
			partial void OnevaluationEndChanged();
			partial void OnisInstantPurchaseOfferEnabledChanging(bool? value);
			partial void OnisInstantPurchaseOfferEnabledChanged();
			partial void OnnoBiddingEligibleChanging(bool? value);
			partial void OnnoBiddingEligibleChanged();
			partial void OnbiddingStartDateTimeChanging(DateTime? value);
			partial void OnbiddingStartDateTimeChanged();
			partial void OnbuyNowPriceChanging(double? value);
			partial void OnbuyNowPriceChanged();
			partial void OndiscountChanging(string value);
			partial void OndiscountChanged();
			partial void OnexpectedPriceDisplayChanging(string value);
			partial void OnexpectedPriceDisplayChanged();
			partial void OnexpectedPriceTargetChanging(string value);
			partial void OnexpectedPriceTargetChanged();
			partial void OnminimumBidChanging(int? value);
			partial void OnminimumBidChanged();
			partial void OnmpPriceChanging(double? value);
			partial void OnmpPriceChanged();
			partial void OnpercentOffChanging(double? value);
			partial void OnpercentOffChanged();
			partial void OnpriceWithoutDiscountChanging(double? value);
			partial void OnpriceWithoutDiscountChanged();
			partial void OnsearchPriceChanging(int? value);
			partial void OnsearchPriceChanged();
			partial void OnlastTopBidValueChanging(int? value);
			partial void OnlastTopBidValueChanged();
			partial void OnlastRunSavingChanging(int? value);
			partial void OnlastRunSavingChanged();
			partial void OnisBuyNowEligibleChanging(bool? value);
			partial void OnisBuyNowEligibleChanged();
			partial void OnreservePriceHiddenChanging(bool? value);
			partial void OnreservePriceHiddenChanged();
			partial void OncustomChannelUrlChanging(string value);
			partial void OncustomChannelUrlChanged();
			partial void OnsourceChanging(string value);
			partial void OnsourceChanged();
			partial void OnauctionSecLeftChanging(int? value);
			partial void OnauctionSecLeftChanged();
			partial void OnlocalReverseChargeChanging(bool? value);
			partial void OnlocalReverseChargeChanged();
			partial void OnwatchlistedChanging(bool? value);
			partial void OnwatchlistedChanged();
			partial void OnisInPackageDealChanging(bool? value);
			partial void OnisInPackageDealChanged();
			partial void OnisPackageDealEligibleChanging(bool? value);
			partial void OnisPackageDealEligibleChanged();
			partial void OnnoBiddingWindowSecLeftChanging(int? value);
			partial void OnnoBiddingWindowSecLeftChanged();
			partial void OnlimitedTimeDiscountChanging(string value);
			partial void OnlimitedTimeDiscountChanged();
			#endregion

			public tblVehicleOverview()
			{
				_tblVehicleRip = default(EntityRef<tblVehicleRip>);
				_tblVehicleOverviewImageList = new EntitySet<tblVehicleOverviewImage>(
					new Action<tblVehicleOverviewImage>(item=>{this.SendPropertyChanging(); item.tblVehicleOverview=this;}), 
					new Action<tblVehicleOverviewImage>(item=>{this.SendPropertyChanging(); item.tblVehicleOverview=null;}));
				OnCreated();
			}

			#region Columns
			/// <summary>
			/// Column DbType=Int NOT NULL
			/// </summary>
			[ColumnAttribute(Storage="_VehicleRipID", DbType="Int NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
			public int VehicleRipID
			{
				get
				{
					return this._VehicleRipID;
				}
				set
				{
					if (this._VehicleRipID != value)
					{
						this.OnVehicleRipIDChanging(value);
						this.SendPropertyChanging();
						this._VehicleRipID = value;
						this.SendPropertyChanged("VehicleRipID");
						this.OnVehicleRipIDChanged();
					}
					this.SendPropertySetterInvoked("VehicleRipID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=DateTime
			/// </summary>
			[ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime", CanBeNull=true)]
			public DateTime? LastUpdateDate
			{
				get
				{
					return this._LastUpdateDate;
				}
				set
				{
					if (this._LastUpdateDate != value)
					{
						this.OnLastUpdateDateChanging(value);
						this.SendPropertyChanging();
						this._LastUpdateDate = value;
						this.SendPropertyChanged("LastUpdateDate");
						this.OnLastUpdateDateChanged();
					}
					this.SendPropertySetterInvoked("LastUpdateDate", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(10)
			/// </summary>
			[ColumnAttribute(Storage="_countryCode", DbType="VarChar(10)", CanBeNull=true)]
			public string countryCode
			{
				get
				{
					return this._countryCode;
				}
				set
				{
					if (this._countryCode != value)
					{
						this.OncountryCodeChanging(value);
						this.SendPropertyChanging();
						this._countryCode = value;
						this.SendPropertyChanged("countryCode");
						this.OncountryCodeChanged();
					}
					this.SendPropertySetterInvoked("countryCode", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(10)
			/// </summary>
			[ColumnAttribute(Storage="_sourceCountry", DbType="VarChar(10)", CanBeNull=true)]
			public string sourceCountry
			{
				get
				{
					return this._sourceCountry;
				}
				set
				{
					if (this._sourceCountry != value)
					{
						this.OnsourceCountryChanging(value);
						this.SendPropertyChanging();
						this._sourceCountry = value;
						this.SendPropertyChanged("sourceCountry");
						this.OnsourceCountryChanged();
					}
					this.SendPropertySetterInvoked("sourceCountry", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Float
			/// </summary>
			[ColumnAttribute(Storage="_locationLat", DbType="Float", CanBeNull=true)]
			public double? locationLat
			{
				get
				{
					return this._locationLat;
				}
				set
				{
					if (this._locationLat != value)
					{
						this.OnlocationLatChanging(value);
						this.SendPropertyChanging();
						this._locationLat = value;
						this.SendPropertyChanged("locationLat");
						this.OnlocationLatChanged();
					}
					this.SendPropertySetterInvoked("locationLat", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Float
			/// </summary>
			[ColumnAttribute(Storage="_locationLong", DbType="Float", CanBeNull=true)]
			public double? locationLong
			{
				get
				{
					return this._locationLong;
				}
				set
				{
					if (this._locationLong != value)
					{
						this.OnlocationLongChanging(value);
						this.SendPropertyChanging();
						this._locationLong = value;
						this.SendPropertyChanged("locationLong");
						this.OnlocationLongChanged();
					}
					this.SendPropertySetterInvoked("locationLong", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit
			/// </summary>
			[ColumnAttribute(Storage="_multiRound", DbType="Bit", CanBeNull=true)]
			public bool? multiRound
			{
				get
				{
					return this._multiRound;
				}
				set
				{
					if (this._multiRound != value)
					{
						this.OnmultiRoundChanging(value);
						this.SendPropertyChanging();
						this._multiRound = value;
						this.SendPropertyChanged("multiRound");
						this.OnmultiRoundChanged();
					}
					this.SendPropertySetterInvoked("multiRound", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit
			/// </summary>
			[ColumnAttribute(Storage="_hasPainPriceAgreement", DbType="Bit", CanBeNull=true)]
			public bool? hasPainPriceAgreement
			{
				get
				{
					return this._hasPainPriceAgreement;
				}
				set
				{
					if (this._hasPainPriceAgreement != value)
					{
						this.OnhasPainPriceAgreementChanging(value);
						this.SendPropertyChanging();
						this._hasPainPriceAgreement = value;
						this.SendPropertyChanged("hasPainPriceAgreement");
						this.OnhasPainPriceAgreementChanged();
					}
					this.SendPropertySetterInvoked("hasPainPriceAgreement", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(20)
			/// </summary>
			[ColumnAttribute(Storage="_bodyType", DbType="VarChar(20)", CanBeNull=true)]
			public string bodyType
			{
				get
				{
					return this._bodyType;
				}
				set
				{
					if (this._bodyType != value)
					{
						this.OnbodyTypeChanging(value);
						this.SendPropertyChanging();
						this._bodyType = value;
						this.SendPropertyChanged("bodyType");
						this.OnbodyTypeChanged();
					}
					this.SendPropertySetterInvoked("bodyType", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(20)
			/// </summary>
			[ColumnAttribute(Storage="_colour", DbType="VarChar(20)", CanBeNull=true)]
			public string colour
			{
				get
				{
					return this._colour;
				}
				set
				{
					if (this._colour != value)
					{
						this.OncolourChanging(value);
						this.SendPropertyChanging();
						this._colour = value;
						this.SendPropertyChanged("colour");
						this.OncolourChanged();
					}
					this.SendPropertySetterInvoked("colour", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int
			/// </summary>
			[ColumnAttribute(Storage="_doors", DbType="Int", CanBeNull=true)]
			public int? doors
			{
				get
				{
					return this._doors;
				}
				set
				{
					if (this._doors != value)
					{
						this.OndoorsChanging(value);
						this.SendPropertyChanging();
						this._doors = value;
						this.SendPropertyChanged("doors");
						this.OndoorsChanged();
					}
					this.SendPropertySetterInvoked("doors", value);
				}
			}
			
			/// <summary>
			/// Column DbType=DateTime
			/// </summary>
			[ColumnAttribute(Storage="_firstRegistrationDate", DbType="DateTime", CanBeNull=true)]
			public DateTime? firstRegistrationDate
			{
				get
				{
					return this._firstRegistrationDate;
				}
				set
				{
					if (this._firstRegistrationDate != value)
					{
						this.OnfirstRegistrationDateChanging(value);
						this.SendPropertyChanging();
						this._firstRegistrationDate = value;
						this.SendPropertyChanged("firstRegistrationDate");
						this.OnfirstRegistrationDateChanged();
					}
					this.SendPropertySetterInvoked("firstRegistrationDate", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(20)
			/// </summary>
			[ColumnAttribute(Storage="_fuelType", DbType="VarChar(20)", CanBeNull=true)]
			public string fuelType
			{
				get
				{
					return this._fuelType;
				}
				set
				{
					if (this._fuelType != value)
					{
						this.OnfuelTypeChanging(value);
						this.SendPropertyChanging();
						this._fuelType = value;
						this.SendPropertyChanged("fuelType");
						this.OnfuelTypeChanged();
					}
					this.SendPropertySetterInvoked("fuelType", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int
			/// </summary>
			[ColumnAttribute(Storage="_hp", DbType="Int", CanBeNull=true)]
			public int? hp
			{
				get
				{
					return this._hp;
				}
				set
				{
					if (this._hp != value)
					{
						this.OnhpChanging(value);
						this.SendPropertyChanging();
						this._hp = value;
						this.SendPropertyChanged("hp");
						this.OnhpChanged();
					}
					this.SendPropertySetterInvoked("hp", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit
			/// </summary>
			[ColumnAttribute(Storage="_hasVideo", DbType="Bit", CanBeNull=true)]
			public bool? hasVideo
			{
				get
				{
					return this._hasVideo;
				}
				set
				{
					if (this._hasVideo != value)
					{
						this.OnhasVideoChanging(value);
						this.SendPropertyChanging();
						this._hasVideo = value;
						this.SendPropertyChanged("hasVideo");
						this.OnhasVideoChanged();
					}
					this.SendPropertySetterInvoked("hasVideo", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int
			/// </summary>
			[ColumnAttribute(Storage="_km", DbType="Int", CanBeNull=true)]
			public int? km
			{
				get
				{
					return this._km;
				}
				set
				{
					if (this._km != value)
					{
						this.OnkmChanging(value);
						this.SendPropertyChanging();
						this._km = value;
						this.SendPropertyChanged("km");
						this.OnkmChanged();
					}
					this.SendPropertySetterInvoked("km", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int
			/// </summary>
			[ColumnAttribute(Storage="_kw", DbType="Int", CanBeNull=true)]
			public int? kw
			{
				get
				{
					return this._kw;
				}
				set
				{
					if (this._kw != value)
					{
						this.OnkwChanging(value);
						this.SendPropertyChanging();
						this._kw = value;
						this.SendPropertyChanged("kw");
						this.OnkwChanged();
					}
					this.SendPropertySetterInvoked("kw", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(20)
			/// </summary>
			[ColumnAttribute(Storage="_gearType", DbType="VarChar(20)", CanBeNull=true)]
			public string gearType
			{
				get
				{
					return this._gearType;
				}
				set
				{
					if (this._gearType != value)
					{
						this.OngearTypeChanging(value);
						this.SendPropertyChanging();
						this._gearType = value;
						this.SendPropertyChanged("gearType");
						this.OngearTypeChanged();
					}
					this.SendPropertySetterInvoked("gearType", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(20)
			/// </summary>
			[ColumnAttribute(Storage="_stockNumber", DbType="VarChar(20)", CanBeNull=true)]
			public string stockNumber
			{
				get
				{
					return this._stockNumber;
				}
				set
				{
					if (this._stockNumber != value)
					{
						this.OnstockNumberChanging(value);
						this.SendPropertyChanging();
						this._stockNumber = value;
						this.SendPropertyChanged("stockNumber");
						this.OnstockNumberChanged();
					}
					this.SendPropertySetterInvoked("stockNumber", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int
			/// </summary>
			[ColumnAttribute(Storage="_manufacturer", DbType="Int", CanBeNull=true)]
			public int? manufacturer
			{
				get
				{
					return this._manufacturer;
				}
				set
				{
					if (this._manufacturer != value)
					{
						this.OnmanufacturerChanging(value);
						this.SendPropertyChanging();
						this._manufacturer = value;
						this.SendPropertyChanged("manufacturer");
						this.OnmanufacturerChanged();
					}
					this.SendPropertySetterInvoked("manufacturer", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_manufacturerName", DbType="VarChar(50)", CanBeNull=true)]
			public string manufacturerName
			{
				get
				{
					return this._manufacturerName;
				}
				set
				{
					if (this._manufacturerName != value)
					{
						this.OnmanufacturerNameChanging(value);
						this.SendPropertyChanging();
						this._manufacturerName = value;
						this.SendPropertyChanged("manufacturerName");
						this.OnmanufacturerNameChanged();
					}
					this.SendPropertySetterInvoked("manufacturerName", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_mainType", DbType="VarChar(50)", CanBeNull=true)]
			public string mainType
			{
				get
				{
					return this._mainType;
				}
				set
				{
					if (this._mainType != value)
					{
						this.OnmainTypeChanging(value);
						this.SendPropertyChanging();
						this._mainType = value;
						this.SendPropertyChanged("mainType");
						this.OnmainTypeChanged();
					}
					this.SendPropertySetterInvoked("mainType", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_subType", DbType="VarChar(50)", CanBeNull=true)]
			public string subType
			{
				get
				{
					return this._subType;
				}
				set
				{
					if (this._subType != value)
					{
						this.OnsubTypeChanging(value);
						this.SendPropertyChanging();
						this._subType = value;
						this.SendPropertyChanged("subType");
						this.OnsubTypeChanged();
					}
					this.SendPropertySetterInvoked("subType", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(100)
			/// </summary>
			[ColumnAttribute(Storage="_modelDescription", DbType="VarChar(100)", CanBeNull=true)]
			public string modelDescription
			{
				get
				{
					return this._modelDescription;
				}
				set
				{
					if (this._modelDescription != value)
					{
						this.OnmodelDescriptionChanging(value);
						this.SendPropertyChanging();
						this._modelDescription = value;
						this.SendPropertyChanged("modelDescription");
						this.OnmodelDescriptionChanged();
					}
					this.SendPropertySetterInvoked("modelDescription", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit
			/// </summary>
			[ColumnAttribute(Storage="_isUnroadworthy", DbType="Bit", CanBeNull=true)]
			public bool? isUnroadworthy
			{
				get
				{
					return this._isUnroadworthy;
				}
				set
				{
					if (this._isUnroadworthy != value)
					{
						this.OnisUnroadworthyChanging(value);
						this.SendPropertyChanging();
						this._isUnroadworthy = value;
						this.SendPropertyChanged("isUnroadworthy");
						this.OnisUnroadworthyChanged();
					}
					this.SendPropertySetterInvoked("isUnroadworthy", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(20)
			/// </summary>
			[ColumnAttribute(Storage="_emissionStandard", DbType="VarChar(20)", CanBeNull=true)]
			public string emissionStandard
			{
				get
				{
					return this._emissionStandard;
				}
				set
				{
					if (this._emissionStandard != value)
					{
						this.OnemissionStandardChanging(value);
						this.SendPropertyChanging();
						this._emissionStandard = value;
						this.SendPropertyChanged("emissionStandard");
						this.OnemissionStandardChanged();
					}
					this.SendPropertySetterInvoked("emissionStandard", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit
			/// </summary>
			[ColumnAttribute(Storage="_ac", DbType="Bit", CanBeNull=true)]
			public bool? ac
			{
				get
				{
					return this._ac;
				}
				set
				{
					if (this._ac != value)
					{
						this.OnacChanging(value);
						this.SendPropertyChanging();
						this._ac = value;
						this.SendPropertyChanged("ac");
						this.OnacChanged();
					}
					this.SendPropertySetterInvoked("ac", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit
			/// </summary>
			[ColumnAttribute(Storage="_allWheelDrive", DbType="Bit", CanBeNull=true)]
			public bool? allWheelDrive
			{
				get
				{
					return this._allWheelDrive;
				}
				set
				{
					if (this._allWheelDrive != value)
					{
						this.OnallWheelDriveChanging(value);
						this.SendPropertyChanging();
						this._allWheelDrive = value;
						this.SendPropertyChanged("allWheelDrive");
						this.OnallWheelDriveChanged();
					}
					this.SendPropertySetterInvoked("allWheelDrive", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit
			/// </summary>
			[ColumnAttribute(Storage="_automatic", DbType="Bit", CanBeNull=true)]
			public bool? automatic
			{
				get
				{
					return this._automatic;
				}
				set
				{
					if (this._automatic != value)
					{
						this.OnautomaticChanging(value);
						this.SendPropertyChanging();
						this._automatic = value;
						this.SendPropertyChanged("automatic");
						this.OnautomaticChanged();
					}
					this.SendPropertySetterInvoked("automatic", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit
			/// </summary>
			[ColumnAttribute(Storage="_backupCamera", DbType="Bit", CanBeNull=true)]
			public bool? backupCamera
			{
				get
				{
					return this._backupCamera;
				}
				set
				{
					if (this._backupCamera != value)
					{
						this.OnbackupCameraChanging(value);
						this.SendPropertyChanging();
						this._backupCamera = value;
						this.SendPropertyChanged("backupCamera");
						this.OnbackupCameraChanged();
					}
					this.SendPropertySetterInvoked("backupCamera", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit
			/// </summary>
			[ColumnAttribute(Storage="_heatedSeats", DbType="Bit", CanBeNull=true)]
			public bool? heatedSeats
			{
				get
				{
					return this._heatedSeats;
				}
				set
				{
					if (this._heatedSeats != value)
					{
						this.OnheatedSeatsChanging(value);
						this.SendPropertyChanging();
						this._heatedSeats = value;
						this.SendPropertyChanged("heatedSeats");
						this.OnheatedSeatsChanged();
					}
					this.SendPropertySetterInvoked("heatedSeats", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit
			/// </summary>
			[ColumnAttribute(Storage="_leather", DbType="Bit", CanBeNull=true)]
			public bool? leather
			{
				get
				{
					return this._leather;
				}
				set
				{
					if (this._leather != value)
					{
						this.OnleatherChanging(value);
						this.SendPropertyChanging();
						this._leather = value;
						this.SendPropertyChanged("leather");
						this.OnleatherChanged();
					}
					this.SendPropertySetterInvoked("leather", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit
			/// </summary>
			[ColumnAttribute(Storage="_navigationSystem", DbType="Bit", CanBeNull=true)]
			public bool? navigationSystem
			{
				get
				{
					return this._navigationSystem;
				}
				set
				{
					if (this._navigationSystem != value)
					{
						this.OnnavigationSystemChanging(value);
						this.SendPropertyChanging();
						this._navigationSystem = value;
						this.SendPropertyChanged("navigationSystem");
						this.OnnavigationSystemChanged();
					}
					this.SendPropertySetterInvoked("navigationSystem", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit
			/// </summary>
			[ColumnAttribute(Storage="_parkHeating", DbType="Bit", CanBeNull=true)]
			public bool? parkHeating
			{
				get
				{
					return this._parkHeating;
				}
				set
				{
					if (this._parkHeating != value)
					{
						this.OnparkHeatingChanging(value);
						this.SendPropertyChanging();
						this._parkHeating = value;
						this.SendPropertyChanged("parkHeating");
						this.OnparkHeatingChanged();
					}
					this.SendPropertySetterInvoked("parkHeating", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit
			/// </summary>
			[ColumnAttribute(Storage="_pdc", DbType="Bit", CanBeNull=true)]
			public bool? pdc
			{
				get
				{
					return this._pdc;
				}
				set
				{
					if (this._pdc != value)
					{
						this.OnpdcChanging(value);
						this.SendPropertyChanging();
						this._pdc = value;
						this.SendPropertyChanged("pdc");
						this.OnpdcChanged();
					}
					this.SendPropertySetterInvoked("pdc", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit
			/// </summary>
			[ColumnAttribute(Storage="_rearEntertainment", DbType="Bit", CanBeNull=true)]
			public bool? rearEntertainment
			{
				get
				{
					return this._rearEntertainment;
				}
				set
				{
					if (this._rearEntertainment != value)
					{
						this.OnrearEntertainmentChanging(value);
						this.SendPropertyChanging();
						this._rearEntertainment = value;
						this.SendPropertyChanged("rearEntertainment");
						this.OnrearEntertainmentChanged();
					}
					this.SendPropertySetterInvoked("rearEntertainment", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit
			/// </summary>
			[ColumnAttribute(Storage="_sunroof", DbType="Bit", CanBeNull=true)]
			public bool? sunroof
			{
				get
				{
					return this._sunroof;
				}
				set
				{
					if (this._sunroof != value)
					{
						this.OnsunroofChanging(value);
						this.SendPropertyChanging();
						this._sunroof = value;
						this.SendPropertyChanged("sunroof");
						this.OnsunroofChanged();
					}
					this.SendPropertySetterInvoked("sunroof", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit
			/// </summary>
			[ColumnAttribute(Storage="_xenon", DbType="Bit", CanBeNull=true)]
			public bool? xenon
			{
				get
				{
					return this._xenon;
				}
				set
				{
					if (this._xenon != value)
					{
						this.OnxenonChanging(value);
						this.SendPropertyChanging();
						this._xenon = value;
						this.SendPropertyChanged("xenon");
						this.OnxenonChanged();
					}
					this.SendPropertySetterInvoked("xenon", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit
			/// </summary>
			[ColumnAttribute(Storage="_cashbackEligible", DbType="Bit", CanBeNull=true)]
			public bool? cashbackEligible
			{
				get
				{
					return this._cashbackEligible;
				}
				set
				{
					if (this._cashbackEligible != value)
					{
						this.OncashbackEligibleChanging(value);
						this.SendPropertyChanging();
						this._cashbackEligible = value;
						this.SendPropertyChanged("cashbackEligible");
						this.OncashbackEligibleChanged();
					}
					this.SendPropertySetterInvoked("cashbackEligible", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Float
			/// </summary>
			[ColumnAttribute(Storage="_exportAdvantageAmount", DbType="Float", CanBeNull=true)]
			public double? exportAdvantageAmount
			{
				get
				{
					return this._exportAdvantageAmount;
				}
				set
				{
					if (this._exportAdvantageAmount != value)
					{
						this.OnexportAdvantageAmountChanging(value);
						this.SendPropertyChanging();
						this._exportAdvantageAmount = value;
						this.SendPropertyChanged("exportAdvantageAmount");
						this.OnexportAdvantageAmountChanged();
					}
					this.SendPropertySetterInvoked("exportAdvantageAmount", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit
			/// </summary>
			[ColumnAttribute(Storage="_exportAdvantageEligible", DbType="Bit", CanBeNull=true)]
			public bool? exportAdvantageEligible
			{
				get
				{
					return this._exportAdvantageEligible;
				}
				set
				{
					if (this._exportAdvantageEligible != value)
					{
						this.OnexportAdvantageEligibleChanging(value);
						this.SendPropertyChanging();
						this._exportAdvantageEligible = value;
						this.SendPropertyChanged("exportAdvantageEligible");
						this.OnexportAdvantageEligibleChanged();
					}
					this.SendPropertySetterInvoked("exportAdvantageEligible", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit
			/// </summary>
			[ColumnAttribute(Storage="_guaranteedSalesEligible", DbType="Bit", CanBeNull=true)]
			public bool? guaranteedSalesEligible
			{
				get
				{
					return this._guaranteedSalesEligible;
				}
				set
				{
					if (this._guaranteedSalesEligible != value)
					{
						this.OnguaranteedSalesEligibleChanging(value);
						this.SendPropertyChanging();
						this._guaranteedSalesEligible = value;
						this.SendPropertyChanged("guaranteedSalesEligible");
						this.OnguaranteedSalesEligibleChanged();
					}
					this.SendPropertySetterInvoked("guaranteedSalesEligible", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_premiumHandlingEligible", DbType="VarChar(50)", CanBeNull=true)]
			public string premiumHandlingEligible
			{
				get
				{
					return this._premiumHandlingEligible;
				}
				set
				{
					if (this._premiumHandlingEligible != value)
					{
						this.OnpremiumHandlingEligibleChanging(value);
						this.SendPropertyChanging();
						this._premiumHandlingEligible = value;
						this.SendPropertyChanged("premiumHandlingEligible");
						this.OnpremiumHandlingEligibleChanged();
					}
					this.SendPropertySetterInvoked("premiumHandlingEligible", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_packageDealEligibleSince", DbType="VarChar(50)", CanBeNull=true)]
			public string packageDealEligibleSince
			{
				get
				{
					return this._packageDealEligibleSince;
				}
				set
				{
					if (this._packageDealEligibleSince != value)
					{
						this.OnpackageDealEligibleSinceChanging(value);
						this.SendPropertyChanging();
						this._packageDealEligibleSince = value;
						this.SendPropertyChanged("packageDealEligibleSince");
						this.OnpackageDealEligibleSinceChanged();
					}
					this.SendPropertySetterInvoked("packageDealEligibleSince", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit
			/// </summary>
			[ColumnAttribute(Storage="_taxDeduction", DbType="Bit", CanBeNull=true)]
			public bool? taxDeduction
			{
				get
				{
					return this._taxDeduction;
				}
				set
				{
					if (this._taxDeduction != value)
					{
						this.OntaxDeductionChanging(value);
						this.SendPropertyChanging();
						this._taxDeduction = value;
						this.SendPropertyChanged("taxDeduction");
						this.OntaxDeductionChanged();
					}
					this.SendPropertySetterInvoked("taxDeduction", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit
			/// </summary>
			[ColumnAttribute(Storage="_lastRun", DbType="Bit", CanBeNull=true)]
			public bool? lastRun
			{
				get
				{
					return this._lastRun;
				}
				set
				{
					if (this._lastRun != value)
					{
						this.OnlastRunChanging(value);
						this.SendPropertyChanging();
						this._lastRun = value;
						this.SendPropertyChanged("lastRun");
						this.OnlastRunChanged();
					}
					this.SendPropertySetterInvoked("lastRun", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_lrcCountry", DbType="VarChar(50)", CanBeNull=true)]
			public string lrcCountry
			{
				get
				{
					return this._lrcCountry;
				}
				set
				{
					if (this._lrcCountry != value)
					{
						this.OnlrcCountryChanging(value);
						this.SendPropertyChanging();
						this._lrcCountry = value;
						this.SendPropertyChanged("lrcCountry");
						this.OnlrcCountryChanged();
					}
					this.SendPropertySetterInvoked("lrcCountry", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(20)
			/// </summary>
			[ColumnAttribute(Storage="_exportAdvantageType", DbType="VarChar(20)", CanBeNull=true)]
			public string exportAdvantageType
			{
				get
				{
					return this._exportAdvantageType;
				}
				set
				{
					if (this._exportAdvantageType != value)
					{
						this.OnexportAdvantageTypeChanging(value);
						this.SendPropertyChanging();
						this._exportAdvantageType = value;
						this.SendPropertyChanged("exportAdvantageType");
						this.OnexportAdvantageTypeChanged();
					}
					this.SendPropertySetterInvoked("exportAdvantageType", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(20)
			/// </summary>
			[ColumnAttribute(Storage="_exportAdvantageWarningType", DbType="VarChar(20)", CanBeNull=true)]
			public string exportAdvantageWarningType
			{
				get
				{
					return this._exportAdvantageWarningType;
				}
				set
				{
					if (this._exportAdvantageWarningType != value)
					{
						this.OnexportAdvantageWarningTypeChanging(value);
						this.SendPropertyChanging();
						this._exportAdvantageWarningType = value;
						this.SendPropertyChanged("exportAdvantageWarningType");
						this.OnexportAdvantageWarningTypeChanged();
					}
					this.SendPropertySetterInvoked("exportAdvantageWarningType", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(20)
			/// </summary>
			[ColumnAttribute(Storage="_inspectionCompanyId", DbType="VarChar(20)", CanBeNull=true)]
			public string inspectionCompanyId
			{
				get
				{
					return this._inspectionCompanyId;
				}
				set
				{
					if (this._inspectionCompanyId != value)
					{
						this.OninspectionCompanyIdChanging(value);
						this.SendPropertyChanging();
						this._inspectionCompanyId = value;
						this.SendPropertyChanged("inspectionCompanyId");
						this.OninspectionCompanyIdChanged();
					}
					this.SendPropertySetterInvoked("inspectionCompanyId", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(255)
			/// </summary>
			[ColumnAttribute(Storage="_inspectionReportPath", DbType="VarChar(255)", CanBeNull=true)]
			public string inspectionReportPath
			{
				get
				{
					return this._inspectionReportPath;
				}
				set
				{
					if (this._inspectionReportPath != value)
					{
						this.OninspectionReportPathChanging(value);
						this.SendPropertyChanging();
						this._inspectionReportPath = value;
						this.SendPropertyChanged("inspectionReportPath");
						this.OninspectionReportPathChanged();
					}
					this.SendPropertySetterInvoked("inspectionReportPath", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int
			/// </summary>
			[ColumnAttribute(Storage="_inspectionStatus", DbType="Int", CanBeNull=true)]
			public int? inspectionStatus
			{
				get
				{
					return this._inspectionStatus;
				}
				set
				{
					if (this._inspectionStatus != value)
					{
						this.OninspectionStatusChanging(value);
						this.SendPropertyChanging();
						this._inspectionStatus = value;
						this.SendPropertyChanged("inspectionStatus");
						this.OninspectionStatusChanged();
					}
					this.SendPropertySetterInvoked("inspectionStatus", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int
			/// </summary>
			[ColumnAttribute(Storage="_auctionDisplayChannelId", DbType="Int", CanBeNull=true)]
			public int? auctionDisplayChannelId
			{
				get
				{
					return this._auctionDisplayChannelId;
				}
				set
				{
					if (this._auctionDisplayChannelId != value)
					{
						this.OnauctionDisplayChannelIdChanging(value);
						this.SendPropertyChanging();
						this._auctionDisplayChannelId = value;
						this.SendPropertyChanged("auctionDisplayChannelId");
						this.OnauctionDisplayChannelIdChanged();
					}
					this.SendPropertySetterInvoked("auctionDisplayChannelId", value);
				}
			}
			
			/// <summary>
			/// Column DbType=DateTime
			/// </summary>
			[ColumnAttribute(Storage="_auctionStartDatetime", DbType="DateTime", CanBeNull=true)]
			public DateTime? auctionStartDatetime
			{
				get
				{
					return this._auctionStartDatetime;
				}
				set
				{
					if (this._auctionStartDatetime != value)
					{
						this.OnauctionStartDatetimeChanging(value);
						this.SendPropertyChanging();
						this._auctionStartDatetime = value;
						this.SendPropertyChanged("auctionStartDatetime");
						this.OnauctionStartDatetimeChanged();
					}
					this.SendPropertySetterInvoked("auctionStartDatetime", value);
				}
			}
			
			/// <summary>
			/// Column DbType=DateTime
			/// </summary>
			[ColumnAttribute(Storage="_auctionEndDatetime", DbType="DateTime", CanBeNull=true)]
			public DateTime? auctionEndDatetime
			{
				get
				{
					return this._auctionEndDatetime;
				}
				set
				{
					if (this._auctionEndDatetime != value)
					{
						this.OnauctionEndDatetimeChanging(value);
						this.SendPropertyChanging();
						this._auctionEndDatetime = value;
						this.SendPropertyChanged("auctionEndDatetime");
						this.OnauctionEndDatetimeChanged();
					}
					this.SendPropertySetterInvoked("auctionEndDatetime", value);
				}
			}
			
			/// <summary>
			/// Column DbType=DateTime
			/// </summary>
			[ColumnAttribute(Storage="_evaluationEnd", DbType="DateTime", CanBeNull=true)]
			public DateTime? evaluationEnd
			{
				get
				{
					return this._evaluationEnd;
				}
				set
				{
					if (this._evaluationEnd != value)
					{
						this.OnevaluationEndChanging(value);
						this.SendPropertyChanging();
						this._evaluationEnd = value;
						this.SendPropertyChanged("evaluationEnd");
						this.OnevaluationEndChanged();
					}
					this.SendPropertySetterInvoked("evaluationEnd", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit
			/// </summary>
			[ColumnAttribute(Storage="_isInstantPurchaseOfferEnabled", DbType="Bit", CanBeNull=true)]
			public bool? isInstantPurchaseOfferEnabled
			{
				get
				{
					return this._isInstantPurchaseOfferEnabled;
				}
				set
				{
					if (this._isInstantPurchaseOfferEnabled != value)
					{
						this.OnisInstantPurchaseOfferEnabledChanging(value);
						this.SendPropertyChanging();
						this._isInstantPurchaseOfferEnabled = value;
						this.SendPropertyChanged("isInstantPurchaseOfferEnabled");
						this.OnisInstantPurchaseOfferEnabledChanged();
					}
					this.SendPropertySetterInvoked("isInstantPurchaseOfferEnabled", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit
			/// </summary>
			[ColumnAttribute(Storage="_noBiddingEligible", DbType="Bit", CanBeNull=true)]
			public bool? noBiddingEligible
			{
				get
				{
					return this._noBiddingEligible;
				}
				set
				{
					if (this._noBiddingEligible != value)
					{
						this.OnnoBiddingEligibleChanging(value);
						this.SendPropertyChanging();
						this._noBiddingEligible = value;
						this.SendPropertyChanged("noBiddingEligible");
						this.OnnoBiddingEligibleChanged();
					}
					this.SendPropertySetterInvoked("noBiddingEligible", value);
				}
			}
			
			/// <summary>
			/// Column DbType=DateTime
			/// </summary>
			[ColumnAttribute(Storage="_biddingStartDateTime", DbType="DateTime", CanBeNull=true)]
			public DateTime? biddingStartDateTime
			{
				get
				{
					return this._biddingStartDateTime;
				}
				set
				{
					if (this._biddingStartDateTime != value)
					{
						this.OnbiddingStartDateTimeChanging(value);
						this.SendPropertyChanging();
						this._biddingStartDateTime = value;
						this.SendPropertyChanged("biddingStartDateTime");
						this.OnbiddingStartDateTimeChanged();
					}
					this.SendPropertySetterInvoked("biddingStartDateTime", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Float
			/// </summary>
			[ColumnAttribute(Storage="_buyNowPrice", DbType="Float", CanBeNull=true)]
			public double? buyNowPrice
			{
				get
				{
					return this._buyNowPrice;
				}
				set
				{
					if (this._buyNowPrice != value)
					{
						this.OnbuyNowPriceChanging(value);
						this.SendPropertyChanging();
						this._buyNowPrice = value;
						this.SendPropertyChanged("buyNowPrice");
						this.OnbuyNowPriceChanged();
					}
					this.SendPropertySetterInvoked("buyNowPrice", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(20)
			/// </summary>
			[ColumnAttribute(Storage="_discount", DbType="VarChar(20)", CanBeNull=true)]
			public string discount
			{
				get
				{
					return this._discount;
				}
				set
				{
					if (this._discount != value)
					{
						this.OndiscountChanging(value);
						this.SendPropertyChanging();
						this._discount = value;
						this.SendPropertyChanged("discount");
						this.OndiscountChanged();
					}
					this.SendPropertySetterInvoked("discount", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(20)
			/// </summary>
			[ColumnAttribute(Storage="_expectedPriceDisplay", DbType="VarChar(20)", CanBeNull=true)]
			public string expectedPriceDisplay
			{
				get
				{
					return this._expectedPriceDisplay;
				}
				set
				{
					if (this._expectedPriceDisplay != value)
					{
						this.OnexpectedPriceDisplayChanging(value);
						this.SendPropertyChanging();
						this._expectedPriceDisplay = value;
						this.SendPropertyChanged("expectedPriceDisplay");
						this.OnexpectedPriceDisplayChanged();
					}
					this.SendPropertySetterInvoked("expectedPriceDisplay", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(20)
			/// </summary>
			[ColumnAttribute(Storage="_expectedPriceTarget", DbType="VarChar(20)", CanBeNull=true)]
			public string expectedPriceTarget
			{
				get
				{
					return this._expectedPriceTarget;
				}
				set
				{
					if (this._expectedPriceTarget != value)
					{
						this.OnexpectedPriceTargetChanging(value);
						this.SendPropertyChanging();
						this._expectedPriceTarget = value;
						this.SendPropertyChanged("expectedPriceTarget");
						this.OnexpectedPriceTargetChanged();
					}
					this.SendPropertySetterInvoked("expectedPriceTarget", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int
			/// </summary>
			[ColumnAttribute(Storage="_minimumBid", DbType="Int", CanBeNull=true)]
			public int? minimumBid
			{
				get
				{
					return this._minimumBid;
				}
				set
				{
					if (this._minimumBid != value)
					{
						this.OnminimumBidChanging(value);
						this.SendPropertyChanging();
						this._minimumBid = value;
						this.SendPropertyChanged("minimumBid");
						this.OnminimumBidChanged();
					}
					this.SendPropertySetterInvoked("minimumBid", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Float
			/// </summary>
			[ColumnAttribute(Storage="_mpPrice", DbType="Float", CanBeNull=true)]
			public double? mpPrice
			{
				get
				{
					return this._mpPrice;
				}
				set
				{
					if (this._mpPrice != value)
					{
						this.OnmpPriceChanging(value);
						this.SendPropertyChanging();
						this._mpPrice = value;
						this.SendPropertyChanged("mpPrice");
						this.OnmpPriceChanged();
					}
					this.SendPropertySetterInvoked("mpPrice", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Float
			/// </summary>
			[ColumnAttribute(Storage="_percentOff", DbType="Float", CanBeNull=true)]
			public double? percentOff
			{
				get
				{
					return this._percentOff;
				}
				set
				{
					if (this._percentOff != value)
					{
						this.OnpercentOffChanging(value);
						this.SendPropertyChanging();
						this._percentOff = value;
						this.SendPropertyChanged("percentOff");
						this.OnpercentOffChanged();
					}
					this.SendPropertySetterInvoked("percentOff", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Float
			/// </summary>
			[ColumnAttribute(Storage="_priceWithoutDiscount", DbType="Float", CanBeNull=true)]
			public double? priceWithoutDiscount
			{
				get
				{
					return this._priceWithoutDiscount;
				}
				set
				{
					if (this._priceWithoutDiscount != value)
					{
						this.OnpriceWithoutDiscountChanging(value);
						this.SendPropertyChanging();
						this._priceWithoutDiscount = value;
						this.SendPropertyChanged("priceWithoutDiscount");
						this.OnpriceWithoutDiscountChanged();
					}
					this.SendPropertySetterInvoked("priceWithoutDiscount", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int
			/// </summary>
			[ColumnAttribute(Storage="_searchPrice", DbType="Int", CanBeNull=true)]
			public int? searchPrice
			{
				get
				{
					return this._searchPrice;
				}
				set
				{
					if (this._searchPrice != value)
					{
						this.OnsearchPriceChanging(value);
						this.SendPropertyChanging();
						this._searchPrice = value;
						this.SendPropertyChanged("searchPrice");
						this.OnsearchPriceChanged();
					}
					this.SendPropertySetterInvoked("searchPrice", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int
			/// </summary>
			[ColumnAttribute(Storage="_lastTopBidValue", DbType="Int", CanBeNull=true)]
			public int? lastTopBidValue
			{
				get
				{
					return this._lastTopBidValue;
				}
				set
				{
					if (this._lastTopBidValue != value)
					{
						this.OnlastTopBidValueChanging(value);
						this.SendPropertyChanging();
						this._lastTopBidValue = value;
						this.SendPropertyChanged("lastTopBidValue");
						this.OnlastTopBidValueChanged();
					}
					this.SendPropertySetterInvoked("lastTopBidValue", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int
			/// </summary>
			[ColumnAttribute(Storage="_lastRunSaving", DbType="Int", CanBeNull=true)]
			public int? lastRunSaving
			{
				get
				{
					return this._lastRunSaving;
				}
				set
				{
					if (this._lastRunSaving != value)
					{
						this.OnlastRunSavingChanging(value);
						this.SendPropertyChanging();
						this._lastRunSaving = value;
						this.SendPropertyChanged("lastRunSaving");
						this.OnlastRunSavingChanged();
					}
					this.SendPropertySetterInvoked("lastRunSaving", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit
			/// </summary>
			[ColumnAttribute(Storage="_isBuyNowEligible", DbType="Bit", CanBeNull=true)]
			public bool? isBuyNowEligible
			{
				get
				{
					return this._isBuyNowEligible;
				}
				set
				{
					if (this._isBuyNowEligible != value)
					{
						this.OnisBuyNowEligibleChanging(value);
						this.SendPropertyChanging();
						this._isBuyNowEligible = value;
						this.SendPropertyChanged("isBuyNowEligible");
						this.OnisBuyNowEligibleChanged();
					}
					this.SendPropertySetterInvoked("isBuyNowEligible", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit
			/// </summary>
			[ColumnAttribute(Storage="_reservePriceHidden", DbType="Bit", CanBeNull=true)]
			public bool? reservePriceHidden
			{
				get
				{
					return this._reservePriceHidden;
				}
				set
				{
					if (this._reservePriceHidden != value)
					{
						this.OnreservePriceHiddenChanging(value);
						this.SendPropertyChanging();
						this._reservePriceHidden = value;
						this.SendPropertyChanged("reservePriceHidden");
						this.OnreservePriceHiddenChanged();
					}
					this.SendPropertySetterInvoked("reservePriceHidden", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(250)
			/// </summary>
			[ColumnAttribute(Storage="_customChannelUrl", DbType="VarChar(250)", CanBeNull=true)]
			public string customChannelUrl
			{
				get
				{
					return this._customChannelUrl;
				}
				set
				{
					if (this._customChannelUrl != value)
					{
						this.OncustomChannelUrlChanging(value);
						this.SendPropertyChanging();
						this._customChannelUrl = value;
						this.SendPropertyChanged("customChannelUrl");
						this.OncustomChannelUrlChanged();
					}
					this.SendPropertySetterInvoked("customChannelUrl", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_source", DbType="VarChar(50)", CanBeNull=true)]
			public string source
			{
				get
				{
					return this._source;
				}
				set
				{
					if (this._source != value)
					{
						this.OnsourceChanging(value);
						this.SendPropertyChanging();
						this._source = value;
						this.SendPropertyChanged("source");
						this.OnsourceChanged();
					}
					this.SendPropertySetterInvoked("source", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int
			/// </summary>
			[ColumnAttribute(Storage="_auctionSecLeft", DbType="Int", CanBeNull=true)]
			public int? auctionSecLeft
			{
				get
				{
					return this._auctionSecLeft;
				}
				set
				{
					if (this._auctionSecLeft != value)
					{
						this.OnauctionSecLeftChanging(value);
						this.SendPropertyChanging();
						this._auctionSecLeft = value;
						this.SendPropertyChanged("auctionSecLeft");
						this.OnauctionSecLeftChanged();
					}
					this.SendPropertySetterInvoked("auctionSecLeft", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit
			/// </summary>
			[ColumnAttribute(Storage="_localReverseCharge", DbType="Bit", CanBeNull=true)]
			public bool? localReverseCharge
			{
				get
				{
					return this._localReverseCharge;
				}
				set
				{
					if (this._localReverseCharge != value)
					{
						this.OnlocalReverseChargeChanging(value);
						this.SendPropertyChanging();
						this._localReverseCharge = value;
						this.SendPropertyChanged("localReverseCharge");
						this.OnlocalReverseChargeChanged();
					}
					this.SendPropertySetterInvoked("localReverseCharge", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit
			/// </summary>
			[ColumnAttribute(Storage="_watchlisted", DbType="Bit", CanBeNull=true)]
			public bool? watchlisted
			{
				get
				{
					return this._watchlisted;
				}
				set
				{
					if (this._watchlisted != value)
					{
						this.OnwatchlistedChanging(value);
						this.SendPropertyChanging();
						this._watchlisted = value;
						this.SendPropertyChanged("watchlisted");
						this.OnwatchlistedChanged();
					}
					this.SendPropertySetterInvoked("watchlisted", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit
			/// </summary>
			[ColumnAttribute(Storage="_isInPackageDeal", DbType="Bit", CanBeNull=true)]
			public bool? isInPackageDeal
			{
				get
				{
					return this._isInPackageDeal;
				}
				set
				{
					if (this._isInPackageDeal != value)
					{
						this.OnisInPackageDealChanging(value);
						this.SendPropertyChanging();
						this._isInPackageDeal = value;
						this.SendPropertyChanged("isInPackageDeal");
						this.OnisInPackageDealChanged();
					}
					this.SendPropertySetterInvoked("isInPackageDeal", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Bit
			/// </summary>
			[ColumnAttribute(Storage="_isPackageDealEligible", DbType="Bit", CanBeNull=true)]
			public bool? isPackageDealEligible
			{
				get
				{
					return this._isPackageDealEligible;
				}
				set
				{
					if (this._isPackageDealEligible != value)
					{
						this.OnisPackageDealEligibleChanging(value);
						this.SendPropertyChanging();
						this._isPackageDealEligible = value;
						this.SendPropertyChanged("isPackageDealEligible");
						this.OnisPackageDealEligibleChanged();
					}
					this.SendPropertySetterInvoked("isPackageDealEligible", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int
			/// </summary>
			[ColumnAttribute(Storage="_noBiddingWindowSecLeft", DbType="Int", CanBeNull=true)]
			public int? noBiddingWindowSecLeft
			{
				get
				{
					return this._noBiddingWindowSecLeft;
				}
				set
				{
					if (this._noBiddingWindowSecLeft != value)
					{
						this.OnnoBiddingWindowSecLeftChanging(value);
						this.SendPropertyChanging();
						this._noBiddingWindowSecLeft = value;
						this.SendPropertyChanged("noBiddingWindowSecLeft");
						this.OnnoBiddingWindowSecLeftChanged();
					}
					this.SendPropertySetterInvoked("noBiddingWindowSecLeft", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(20)
			/// </summary>
			[ColumnAttribute(Storage="_limitedTimeDiscount", DbType="VarChar(20)", CanBeNull=true)]
			public string limitedTimeDiscount
			{
				get
				{
					return this._limitedTimeDiscount;
				}
				set
				{
					if (this._limitedTimeDiscount != value)
					{
						this.OnlimitedTimeDiscountChanging(value);
						this.SendPropertyChanging();
						this._limitedTimeDiscount = value;
						this.SendPropertyChanged("limitedTimeDiscount");
						this.OnlimitedTimeDiscountChanged();
					}
					this.SendPropertySetterInvoked("limitedTimeDiscount", value);
				}
			}
			
			#endregion Columns

			#region Associations
			/// <summary>
			/// Association [FK][One]tblVehicleOverview.VehicleRipID --- [PK][One]tblVehicleRip.VehicleRipID
			/// </summary>
			[AssociationAttribute(Name="FK_tblVehicleOverview_tblVehicleRip", Storage="_tblVehicleRip", ThisKey="VehicleRipID", OtherKey="VehicleRipID", IsUnique=true, IsForeignKey=true)]
			public tblVehicleRip tblVehicleRip
			{
				get
				{
					return this._tblVehicleRip.Entity;
				}
				set
				{
					tblVehicleRip previousValue = this._tblVehicleRip.Entity;
					if ((previousValue != value) || (this._tblVehicleRip.HasLoadedOrAssignedValue == false))
					{
						this.SendPropertyChanging();
						if (previousValue != null)
						{
							this._tblVehicleRip.Entity = null;
							previousValue.tblVehicleOverview = null;
						}
						this._tblVehicleRip.Entity = value;
						if (value != null)
						{
							value.tblVehicleOverview = this;
							this._VehicleRipID = value.VehicleRipID;
						}
						else
						{
							this._VehicleRipID = default(int);
						}
						this.SendPropertyChanged("tblVehicleRip");
					}
					this.SendPropertySetterInvoked("tblVehicleRip", value);
				}
			}
			
			/// <summary>
			/// Association [PK][One]tblVehicleOverview.VehicleRipID --- [FK][Many]tblVehicleOverviewImage.VehicleRipID
			/// </summary>
			[AssociationAttribute(Name="FK_tblVehicleOverviewImage_tblVehicleOverview1", Storage="_tblVehicleOverviewImageList", ThisKey="VehicleRipID", OtherKey="VehicleRipID", IsUnique=false, IsForeignKey=false, DeleteRule="NoAction")]
			public EntitySet<tblVehicleOverviewImage> tblVehicleOverviewImageList
			{
				get { return this._tblVehicleOverviewImageList; }
				set { this._tblVehicleOverviewImageList.Assign(value); }
			}
			
			#endregion Associations

			#region Property changing events
			public event PropertyChangingEventHandler PropertyChanging;
			public event PropertyChangedEventHandler PropertyChanged;
			public event PropertySetterInvokedEventHandler PropertySetterInvoked;
			
			protected virtual void SendPropertyChanging()
			{
				if (this.PropertyChanging != null)
				{
					this.PropertyChanging(this, emptyChangingEventArgs);
				}
			}
			
			protected virtual void SendPropertyChanged(String propertyName)
			{
				if (this.PropertyChanged != null)
				{
					this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
				}
			}
			
			protected virtual void SendPropertySetterInvoked(String propertyName, Object value)
			{
				if (this.PropertySetterInvoked != null)
				{
					this.PropertySetterInvoked.Invoke(this, propertyName, value);
				}
			}
			#endregion Property changing events
		}
		#endregion dbo.tblVehicleOverview

		#region dbo.tblVehicleOverviewImage
		[TableAttribute(Name="dbo.tblVehicleOverviewImage")]
		public partial class tblVehicleOverviewImage : EntityBase<tblVehicleOverviewImage, dbCalystoUnittestDataContext>, INotifyPropertyChanging, INotifyPropertyChanged, IPropertySetterInvoked
		{
			private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

			#region Storage members
			private int _VehicleOverviewImageID;
			private int _VehicleRipID;
			private string _fullUrl;
			private DateTime? _ImageDownloadDate;
			private EntityRef<tblVehicleOverview> _tblVehicleOverview;
			#endregion Storage members

			#region Extensibility Method Definitions
			partial void OnLoaded();
			partial void OnValidate(Calysto.Data.Linq.ChangeAction action);
			partial void OnCreated();
			partial void OnVehicleOverviewImageIDChanging(int value);
			partial void OnVehicleOverviewImageIDChanged();
			partial void OnVehicleRipIDChanging(int value);
			partial void OnVehicleRipIDChanged();
			partial void OnfullUrlChanging(string value);
			partial void OnfullUrlChanged();
			partial void OnImageDownloadDateChanging(DateTime? value);
			partial void OnImageDownloadDateChanged();
			#endregion

			public tblVehicleOverviewImage()
			{
				_tblVehicleOverview = default(EntityRef<tblVehicleOverview>);
				OnCreated();
			}

			#region Columns
			/// <summary>
			/// Column DbType=Int NOT NULL IDENTITY
			/// </summary>
			[ColumnAttribute(Storage="_VehicleOverviewImageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", CanBeNull=false, IsPrimaryKey=true, IsDbGenerated=true)]
			public int VehicleOverviewImageID
			{
				get
				{
					return this._VehicleOverviewImageID;
				}
				set
				{
					if (this._VehicleOverviewImageID != value)
					{
						this.OnVehicleOverviewImageIDChanging(value);
						this.SendPropertyChanging();
						this._VehicleOverviewImageID = value;
						this.SendPropertyChanged("VehicleOverviewImageID");
						this.OnVehicleOverviewImageIDChanged();
					}
					this.SendPropertySetterInvoked("VehicleOverviewImageID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int NOT NULL
			/// </summary>
			[ColumnAttribute(Storage="_VehicleRipID", DbType="Int NOT NULL", CanBeNull=false)]
			public int VehicleRipID
			{
				get
				{
					return this._VehicleRipID;
				}
				set
				{
					if (this._VehicleRipID != value)
					{
						this.OnVehicleRipIDChanging(value);
						this.SendPropertyChanging();
						this._VehicleRipID = value;
						this.SendPropertyChanged("VehicleRipID");
						this.OnVehicleRipIDChanged();
					}
					this.SendPropertySetterInvoked("VehicleRipID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(250)
			/// </summary>
			[ColumnAttribute(Storage="_fullUrl", DbType="VarChar(250)", CanBeNull=true)]
			public string fullUrl
			{
				get
				{
					return this._fullUrl;
				}
				set
				{
					if (this._fullUrl != value)
					{
						this.OnfullUrlChanging(value);
						this.SendPropertyChanging();
						this._fullUrl = value;
						this.SendPropertyChanged("fullUrl");
						this.OnfullUrlChanged();
					}
					this.SendPropertySetterInvoked("fullUrl", value);
				}
			}
			
			/// <summary>
			/// Column DbType=DateTime
			/// </summary>
			[ColumnAttribute(Storage="_ImageDownloadDate", DbType="DateTime", CanBeNull=true)]
			public DateTime? ImageDownloadDate
			{
				get
				{
					return this._ImageDownloadDate;
				}
				set
				{
					if (this._ImageDownloadDate != value)
					{
						this.OnImageDownloadDateChanging(value);
						this.SendPropertyChanging();
						this._ImageDownloadDate = value;
						this.SendPropertyChanged("ImageDownloadDate");
						this.OnImageDownloadDateChanged();
					}
					this.SendPropertySetterInvoked("ImageDownloadDate", value);
				}
			}
			
			#endregion Columns

			#region Associations
			/// <summary>
			/// Association [FK][Many]tblVehicleOverviewImage.VehicleRipID --- [PK][One]tblVehicleOverview.VehicleRipID
			/// </summary>
			[AssociationAttribute(Name="FK_tblVehicleOverviewImage_tblVehicleOverview1", Storage="_tblVehicleOverview", ThisKey="VehicleRipID", OtherKey="VehicleRipID", IsUnique=false, IsForeignKey=true)]
			public tblVehicleOverview tblVehicleOverview
			{
				get
				{
					return this._tblVehicleOverview.Entity;
				}
				set
				{
					tblVehicleOverview previousValue = this._tblVehicleOverview.Entity;
					if ((previousValue != value) || (this._tblVehicleOverview.HasLoadedOrAssignedValue == false))
					{
						this.SendPropertyChanging();
						if (previousValue != null)
						{
							this._tblVehicleOverview.Entity = null;
							previousValue.tblVehicleOverviewImageList.Remove(this);
						}
						this._tblVehicleOverview.Entity = value;
						if (value != null)
						{
							value.tblVehicleOverviewImageList.Add(this);
							this._VehicleRipID = value.VehicleRipID;
						}
						else
						{
							this._VehicleRipID = default(int);
						}
						this.SendPropertyChanged("tblVehicleOverview");
					}
					this.SendPropertySetterInvoked("tblVehicleOverview", value);
				}
			}
			
			#endregion Associations

			#region Property changing events
			public event PropertyChangingEventHandler PropertyChanging;
			public event PropertyChangedEventHandler PropertyChanged;
			public event PropertySetterInvokedEventHandler PropertySetterInvoked;
			
			protected virtual void SendPropertyChanging()
			{
				if (this.PropertyChanging != null)
				{
					this.PropertyChanging(this, emptyChangingEventArgs);
				}
			}
			
			protected virtual void SendPropertyChanged(String propertyName)
			{
				if (this.PropertyChanged != null)
				{
					this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
				}
			}
			
			protected virtual void SendPropertySetterInvoked(String propertyName, Object value)
			{
				if (this.PropertySetterInvoked != null)
				{
					this.PropertySetterInvoked.Invoke(this, propertyName, value);
				}
			}
			#endregion Property changing events
		}
		#endregion dbo.tblVehicleOverviewImage

		#region dbo.tblVehicleRip
		[TableAttribute(Name="dbo.tblVehicleRip")]
		public partial class tblVehicleRip : EntityBase<tblVehicleRip, dbCalystoUnittestDataContext>, INotifyPropertyChanging, INotifyPropertyChanged, IPropertySetterInvoked
		{
			private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

			#region Storage members
			private int _VehicleRipID;
			private string _AutoOneStockNumber;
			private int? _VehicleRipStatusID;
			private DateTime? _LastUpdateDate;
			private EntitySet<tblVehicle> _tblVehicleList;
			private EntityRef<tblVehicleOverview> _tblVehicleOverview;
			private EntityRef<tblVehicleRipStatus> _tblVehicleRipStatus;
			#endregion Storage members

			#region Extensibility Method Definitions
			partial void OnLoaded();
			partial void OnValidate(Calysto.Data.Linq.ChangeAction action);
			partial void OnCreated();
			partial void OnVehicleRipIDChanging(int value);
			partial void OnVehicleRipIDChanged();
			partial void OnAutoOneStockNumberChanging(string value);
			partial void OnAutoOneStockNumberChanged();
			partial void OnVehicleRipStatusIDChanging(int? value);
			partial void OnVehicleRipStatusIDChanged();
			partial void OnLastUpdateDateChanging(DateTime? value);
			partial void OnLastUpdateDateChanged();
			#endregion

			public tblVehicleRip()
			{
				_tblVehicleList = new EntitySet<tblVehicle>(
					new Action<tblVehicle>(item=>{this.SendPropertyChanging(); item.tblVehicleRip=this;}), 
					new Action<tblVehicle>(item=>{this.SendPropertyChanging(); item.tblVehicleRip=null;}));
				_tblVehicleOverview = default(EntityRef<tblVehicleOverview>);
				_tblVehicleRipStatus = default(EntityRef<tblVehicleRipStatus>);
				OnCreated();
			}

			#region Columns
			/// <summary>
			/// Column DbType=Int NOT NULL IDENTITY
			/// </summary>
			[ColumnAttribute(Storage="_VehicleRipID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", CanBeNull=false, IsPrimaryKey=true, IsDbGenerated=true)]
			public int VehicleRipID
			{
				get
				{
					return this._VehicleRipID;
				}
				set
				{
					if (this._VehicleRipID != value)
					{
						this.OnVehicleRipIDChanging(value);
						this.SendPropertyChanging();
						this._VehicleRipID = value;
						this.SendPropertyChanged("VehicleRipID");
						this.OnVehicleRipIDChanged();
					}
					this.SendPropertySetterInvoked("VehicleRipID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(50)
			/// </summary>
			[ColumnAttribute(Storage="_AutoOneStockNumber", DbType="VarChar(50)", CanBeNull=true)]
			public string AutoOneStockNumber
			{
				get
				{
					return this._AutoOneStockNumber;
				}
				set
				{
					if (this._AutoOneStockNumber != value)
					{
						this.OnAutoOneStockNumberChanging(value);
						this.SendPropertyChanging();
						this._AutoOneStockNumber = value;
						this.SendPropertyChanged("AutoOneStockNumber");
						this.OnAutoOneStockNumberChanged();
					}
					this.SendPropertySetterInvoked("AutoOneStockNumber", value);
				}
			}
			
			/// <summary>
			/// Column DbType=Int
			/// </summary>
			[ColumnAttribute(Storage="_VehicleRipStatusID", DbType="Int", CanBeNull=true)]
			public int? VehicleRipStatusID
			{
				get
				{
					return this._VehicleRipStatusID;
				}
				set
				{
					if (this._VehicleRipStatusID != value)
					{
						this.OnVehicleRipStatusIDChanging(value);
						this.SendPropertyChanging();
						this._VehicleRipStatusID = value;
						this.SendPropertyChanged("VehicleRipStatusID");
						this.OnVehicleRipStatusIDChanged();
					}
					this.SendPropertySetterInvoked("VehicleRipStatusID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=DateTime
			/// </summary>
			[ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime", CanBeNull=true)]
			public DateTime? LastUpdateDate
			{
				get
				{
					return this._LastUpdateDate;
				}
				set
				{
					if (this._LastUpdateDate != value)
					{
						this.OnLastUpdateDateChanging(value);
						this.SendPropertyChanging();
						this._LastUpdateDate = value;
						this.SendPropertyChanged("LastUpdateDate");
						this.OnLastUpdateDateChanged();
					}
					this.SendPropertySetterInvoked("LastUpdateDate", value);
				}
			}
			
			#endregion Columns

			#region Associations
			/// <summary>
			/// Association [PK][One]tblVehicleRip.VehicleRipID --- [FK][Many]tblVehicle.VehicleRipID
			/// </summary>
			[AssociationAttribute(Name="FK_tblVehicle_tblVehicleRip", Storage="_tblVehicleList", ThisKey="VehicleRipID", OtherKey="VehicleRipID", IsUnique=false, IsForeignKey=false, DeleteRule="NoAction")]
			public EntitySet<tblVehicle> tblVehicleList
			{
				get { return this._tblVehicleList; }
				set { this._tblVehicleList.Assign(value); }
			}
			
			/// <summary>
			/// Association [PK][One]tblVehicleRip.VehicleRipID --- [FK][One]tblVehicleOverview.VehicleRipID
			/// </summary>
			[AssociationAttribute(Name="FK_tblVehicleOverview_tblVehicleRip", Storage="_tblVehicleOverview", ThisKey="VehicleRipID", OtherKey="VehicleRipID", IsUnique=true, IsForeignKey=false, DeleteRule="NoAction")]
			public tblVehicleOverview tblVehicleOverview
			{
				get
				{
					return this._tblVehicleOverview.Entity;
				}
				set
				{
					tblVehicleOverview previousValue = this._tblVehicleOverview.Entity;
					if ((previousValue != value) || (this._tblVehicleOverview.HasLoadedOrAssignedValue == false))
					{
						this.SendPropertyChanging();
						if (previousValue != null)
						{
							this._tblVehicleOverview.Entity = null;
							previousValue.tblVehicleRip = null;
						}
						this._tblVehicleOverview.Entity = value;
						if (value != null)
						{
							value.tblVehicleRip = this;
						}
						this.SendPropertyChanged("tblVehicleOverview");
					}
					this.SendPropertySetterInvoked("tblVehicleOverview", value);
				}
			}
			
			/// <summary>
			/// Association [FK][Many]tblVehicleRip.VehicleRipStatusID --- [PK][One]tblVehicleRipStatus.VehicleRipStatusID
			/// </summary>
			[AssociationAttribute(Name="FK_tblVehicleRip_tblVehicleRipStatus", Storage="_tblVehicleRipStatus", ThisKey="VehicleRipStatusID", OtherKey="VehicleRipStatusID", IsUnique=false, IsForeignKey=true)]
			public tblVehicleRipStatus tblVehicleRipStatus
			{
				get
				{
					return this._tblVehicleRipStatus.Entity;
				}
				set
				{
					tblVehicleRipStatus previousValue = this._tblVehicleRipStatus.Entity;
					if ((previousValue != value) || (this._tblVehicleRipStatus.HasLoadedOrAssignedValue == false))
					{
						this.SendPropertyChanging();
						if (previousValue != null)
						{
							this._tblVehicleRipStatus.Entity = null;
							previousValue.tblVehicleRipList.Remove(this);
						}
						this._tblVehicleRipStatus.Entity = value;
						if (value != null)
						{
							value.tblVehicleRipList.Add(this);
							this._VehicleRipStatusID = value.VehicleRipStatusID;
						}
						else
						{
							this._VehicleRipStatusID = default(int?);
						}
						this.SendPropertyChanged("tblVehicleRipStatus");
					}
					this.SendPropertySetterInvoked("tblVehicleRipStatus", value);
				}
			}
			
			#endregion Associations

			#region Property changing events
			public event PropertyChangingEventHandler PropertyChanging;
			public event PropertyChangedEventHandler PropertyChanged;
			public event PropertySetterInvokedEventHandler PropertySetterInvoked;
			
			protected virtual void SendPropertyChanging()
			{
				if (this.PropertyChanging != null)
				{
					this.PropertyChanging(this, emptyChangingEventArgs);
				}
			}
			
			protected virtual void SendPropertyChanged(String propertyName)
			{
				if (this.PropertyChanged != null)
				{
					this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
				}
			}
			
			protected virtual void SendPropertySetterInvoked(String propertyName, Object value)
			{
				if (this.PropertySetterInvoked != null)
				{
					this.PropertySetterInvoked.Invoke(this, propertyName, value);
				}
			}
			#endregion Property changing events
		}
		#endregion dbo.tblVehicleRip

		#region dbo.tblVehicleRipStatus
		[TableAttribute(Name="dbo.tblVehicleRipStatus")]
		public partial class tblVehicleRipStatus : EntityBase<tblVehicleRipStatus, dbCalystoUnittestDataContext>, INotifyPropertyChanging, INotifyPropertyChanged, IPropertySetterInvoked
		{
			private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

			#region Storage members
			private int _VehicleRipStatusID;
			private string _Name;
			private string _Description;
			private string _Color;
			private EntitySet<tblVehicleRip> _tblVehicleRipList;
			#endregion Storage members

			#region Extensibility Method Definitions
			partial void OnLoaded();
			partial void OnValidate(Calysto.Data.Linq.ChangeAction action);
			partial void OnCreated();
			partial void OnVehicleRipStatusIDChanging(int value);
			partial void OnVehicleRipStatusIDChanged();
			partial void OnNameChanging(string value);
			partial void OnNameChanged();
			partial void OnDescriptionChanging(string value);
			partial void OnDescriptionChanged();
			partial void OnColorChanging(string value);
			partial void OnColorChanged();
			#endregion

			public tblVehicleRipStatus()
			{
				_tblVehicleRipList = new EntitySet<tblVehicleRip>(
					new Action<tblVehicleRip>(item=>{this.SendPropertyChanging(); item.tblVehicleRipStatus=this;}), 
					new Action<tblVehicleRip>(item=>{this.SendPropertyChanging(); item.tblVehicleRipStatus=null;}));
				OnCreated();
			}

			#region Columns
			/// <summary>
			/// Column DbType=Int NOT NULL
			/// </summary>
			[ColumnAttribute(Storage="_VehicleRipStatusID", DbType="Int NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
			public int VehicleRipStatusID
			{
				get
				{
					return this._VehicleRipStatusID;
				}
				set
				{
					if (this._VehicleRipStatusID != value)
					{
						this.OnVehicleRipStatusIDChanging(value);
						this.SendPropertyChanging();
						this._VehicleRipStatusID = value;
						this.SendPropertyChanged("VehicleRipStatusID");
						this.OnVehicleRipStatusIDChanged();
					}
					this.SendPropertySetterInvoked("VehicleRipStatusID", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(50) NOT NULL
			/// </summary>
			[ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
			public string Name
			{
				get
				{
					return this._Name;
				}
				set
				{
					if (this._Name != value)
					{
						this.OnNameChanging(value);
						this.SendPropertyChanging();
						this._Name = value;
						this.SendPropertyChanged("Name");
						this.OnNameChanged();
					}
					this.SendPropertySetterInvoked("Name", value);
				}
			}
			
			/// <summary>
			/// Column DbType=NVarChar(100)
			/// </summary>
			[ColumnAttribute(Storage="_Description", DbType="NVarChar(100)", CanBeNull=true)]
			public string Description
			{
				get
				{
					return this._Description;
				}
				set
				{
					if (this._Description != value)
					{
						this.OnDescriptionChanging(value);
						this.SendPropertyChanging();
						this._Description = value;
						this.SendPropertyChanged("Description");
						this.OnDescriptionChanged();
					}
					this.SendPropertySetterInvoked("Description", value);
				}
			}
			
			/// <summary>
			/// Column DbType=VarChar(20)
			/// </summary>
			[ColumnAttribute(Storage="_Color", DbType="VarChar(20)", CanBeNull=true)]
			public string Color
			{
				get
				{
					return this._Color;
				}
				set
				{
					if (this._Color != value)
					{
						this.OnColorChanging(value);
						this.SendPropertyChanging();
						this._Color = value;
						this.SendPropertyChanged("Color");
						this.OnColorChanged();
					}
					this.SendPropertySetterInvoked("Color", value);
				}
			}
			
			#endregion Columns

			#region Associations
			/// <summary>
			/// Association [PK][One]tblVehicleRipStatus.VehicleRipStatusID --- [FK][Many]tblVehicleRip.VehicleRipStatusID
			/// </summary>
			[AssociationAttribute(Name="FK_tblVehicleRip_tblVehicleRipStatus", Storage="_tblVehicleRipList", ThisKey="VehicleRipStatusID", OtherKey="VehicleRipStatusID", IsUnique=false, IsForeignKey=false, DeleteRule="NoAction")]
			public EntitySet<tblVehicleRip> tblVehicleRipList
			{
				get { return this._tblVehicleRipList; }
				set { this._tblVehicleRipList.Assign(value); }
			}
			
			#endregion Associations

			#region Property changing events
			public event PropertyChangingEventHandler PropertyChanging;
			public event PropertyChangedEventHandler PropertyChanged;
			public event PropertySetterInvokedEventHandler PropertySetterInvoked;
			
			protected virtual void SendPropertyChanging()
			{
				if (this.PropertyChanging != null)
				{
					this.PropertyChanging(this, emptyChangingEventArgs);
				}
			}
			
			protected virtual void SendPropertyChanged(String propertyName)
			{
				if (this.PropertyChanged != null)
				{
					this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
				}
			}
			
			protected virtual void SendPropertySetterInvoked(String propertyName, Object value)
			{
				if (this.PropertySetterInvoked != null)
				{
					this.PropertySetterInvoked.Invoke(this, propertyName, value);
				}
			}
			#endregion Property changing events
		}
		#endregion dbo.tblVehicleRipStatus

		#region dbo.viewRandom
		[TableAttribute(Name="dbo.viewRandom")]
		public partial class viewRandom : EntityBase<viewRandom, dbCalystoUnittestDataContext>, INotifyPropertyChanging, INotifyPropertyChanged, IPropertySetterInvoked
		{
			private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

			#region Storage members
			private double? _Random;
			#endregion Storage members

			#region Extensibility Method Definitions
			partial void OnLoaded();
			partial void OnValidate(Calysto.Data.Linq.ChangeAction action);
			partial void OnCreated();
			partial void OnRandomChanging(double? value);
			partial void OnRandomChanged();
			#endregion

			public viewRandom()
			{
				OnCreated();
			}

			#region Columns
			/// <summary>
			/// Column DbType=Float
			/// </summary>
			[ColumnAttribute(Storage="_Random", DbType="Float", CanBeNull=true)]
			public double? Random
			{
				get
				{
					return this._Random;
				}
				set
				{
					if (this._Random != value)
					{
						this.OnRandomChanging(value);
						this.SendPropertyChanging();
						this._Random = value;
						this.SendPropertyChanged("Random");
						this.OnRandomChanged();
					}
					this.SendPropertySetterInvoked("Random", value);
				}
			}
			
			#endregion Columns

			#region Associations
			#endregion Associations

			#region Property changing events
			public event PropertyChangingEventHandler PropertyChanging;
			public event PropertyChangedEventHandler PropertyChanged;
			public event PropertySetterInvokedEventHandler PropertySetterInvoked;
			
			protected virtual void SendPropertyChanging()
			{
				if (this.PropertyChanging != null)
				{
					this.PropertyChanging(this, emptyChangingEventArgs);
				}
			}
			
			protected virtual void SendPropertyChanged(String propertyName)
			{
				if (this.PropertyChanged != null)
				{
					this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
				}
			}
			
			protected virtual void SendPropertySetterInvoked(String propertyName, Object value)
			{
				if (this.PropertySetterInvoked != null)
				{
					this.PropertySetterInvoked.Invoke(this, propertyName, value);
				}
			}
			#endregion Property changing events
		}
		#endregion dbo.viewRandom


	#endregion Entity Tables

	#region Entity Return types

	#region fnCalculateDatumValuteRokPlacanjaResult
	public partial class fnCalculateDatumValuteRokPlacanjaResult
	{
		#region Storage members
		private DateTime _DatumDokumenta;
		private DateTime _DatumValute;
		private DateTime _DatumDospijeca;
		#endregion Storage members

		public fnCalculateDatumValuteRokPlacanjaResult(){ }

		/// <summary>
		/// Column DbType=DateTime
		/// </summary>
		[ColumnAttribute(Storage="_DatumDokumenta", DbType="DateTime", CanBeNull=false)]
		public DateTime DatumDokumenta
		{
			get
			{
				return this._DatumDokumenta;
			}
			set
			{
				if (this._DatumDokumenta != value)
				{
					this._DatumDokumenta = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=DateTime
		/// </summary>
		[ColumnAttribute(Storage="_DatumValute", DbType="DateTime", CanBeNull=false)]
		public DateTime DatumValute
		{
			get
			{
				return this._DatumValute;
			}
			set
			{
				if (this._DatumValute != value)
				{
					this._DatumValute = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=DateTime
		/// </summary>
		[ColumnAttribute(Storage="_DatumDospijeca", DbType="DateTime", CanBeNull=false)]
		public DateTime DatumDospijeca
		{
			get
			{
				return this._DatumDospijeca;
			}
			set
			{
				if (this._DatumDospijeca != value)
				{
					this._DatumDospijeca = value;
				}
			}
		}
		
	}
	#endregion fnCalculateDatumValuteRokPlacanjaResult

	#region fnConvertCsvArgsToIntTableResult
	public partial class fnConvertCsvArgsToIntTableResult
	{
		#region Storage members
		private int _number;
		#endregion Storage members

		public fnConvertCsvArgsToIntTableResult(){ }

		/// <summary>
		/// Column DbType=Int
		/// </summary>
		[ColumnAttribute(Storage="_number", DbType="Int", CanBeNull=false)]
		public int number
		{
			get
			{
				return this._number;
			}
			set
			{
				if (this._number != value)
				{
					this._number = value;
				}
			}
		}
		
	}
	#endregion fnConvertCsvArgsToIntTableResult

	#region fnGetBankaValutaTecajResult
	public partial class fnGetBankaValutaTecajResult
	{
		#region Storage members
		private DateTime? _Datum;
		private string _Valuta;
		#endregion Storage members

		public fnGetBankaValutaTecajResult(){ }

		/// <summary>
		/// Column DbType=DateTime
		/// </summary>
		[ColumnAttribute(Storage="_Datum", DbType="DateTime", CanBeNull=true)]
		public DateTime? Datum
		{
			get
			{
				return this._Datum;
			}
			set
			{
				if (this._Datum != value)
				{
					this._Datum = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=VarChar(50)
		/// </summary>
		[ColumnAttribute(Storage="_Valuta", DbType="VarChar(50)", CanBeNull=true)]
		public string Valuta
		{
			get
			{
				return this._Valuta;
			}
			set
			{
				if (this._Valuta != value)
				{
					this._Valuta = value;
				}
			}
		}
		
	}
	#endregion fnGetBankaValutaTecajResult

	#region fnGetStariNoviGranicaResult
	public partial class fnGetStariNoviGranicaResult
	{
		#region Storage members
		private DateTime _StartDate;
		private DateTime _EndDate;
		#endregion Storage members

		public fnGetStariNoviGranicaResult(){ }

		/// <summary>
		/// Column DbType=DateTime
		/// </summary>
		[ColumnAttribute(Storage="_StartDate", DbType="DateTime", CanBeNull=false)]
		public DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if (this._StartDate != value)
				{
					this._StartDate = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=DateTime
		/// </summary>
		[ColumnAttribute(Storage="_EndDate", DbType="DateTime", CanBeNull=false)]
		public DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if (this._EndDate != value)
				{
					this._EndDate = value;
				}
			}
		}
		
	}
	#endregion fnGetStariNoviGranicaResult

	#region fnSplitStringByPatternResult
	public partial class fnSplitStringByPatternResult
	{
		#region Storage members
		private int _position;
		private string _part;
		#endregion Storage members

		public fnSplitStringByPatternResult(){ }

		/// <summary>
		/// Column DbType=Int
		/// </summary>
		[ColumnAttribute(Storage="_position", DbType="Int", CanBeNull=false)]
		public int position
		{
			get
			{
				return this._position;
			}
			set
			{
				if (this._position != value)
				{
					this._position = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=VarChar(MAX)
		/// </summary>
		[ColumnAttribute(Storage="_part", DbType="VarChar(MAX)", CanBeNull=true)]
		public string part
		{
			get
			{
				return this._part;
			}
			set
			{
				if (this._part != value)
				{
					this._part = value;
				}
			}
		}
		
	}
	#endregion fnSplitStringByPatternResult

	#region sp_alterdiagramMultipleResults
	public partial class sp_alterdiagramMultipleResults
	{
		#region Storage members
		private int _ReturnValue;
		#endregion Storage members

		public sp_alterdiagramMultipleResults(){ }

		/// <summary>
		/// Column DbType=
		/// </summary>
		[ColumnAttribute(Storage="_ReturnValue", DbType="", CanBeNull=false)]
		public int ReturnValue
		{
			get
			{
				return this._ReturnValue;
			}
			set
			{
				if (this._ReturnValue != value)
				{
					this._ReturnValue = value;
				}
			}
		}
		
	}
	#endregion sp_alterdiagramMultipleResults

	#region sp_creatediagramMultipleResults
	public partial class sp_creatediagramMultipleResults
	{
		#region Storage members
		private int _ReturnValue;
		#endregion Storage members

		public sp_creatediagramMultipleResults(){ }

		/// <summary>
		/// Column DbType=
		/// </summary>
		[ColumnAttribute(Storage="_ReturnValue", DbType="", CanBeNull=false)]
		public int ReturnValue
		{
			get
			{
				return this._ReturnValue;
			}
			set
			{
				if (this._ReturnValue != value)
				{
					this._ReturnValue = value;
				}
			}
		}
		
	}
	#endregion sp_creatediagramMultipleResults

	#region sp_dropdiagramMultipleResults
	public partial class sp_dropdiagramMultipleResults
	{
		#region Storage members
		private int _ReturnValue;
		#endregion Storage members

		public sp_dropdiagramMultipleResults(){ }

		/// <summary>
		/// Column DbType=
		/// </summary>
		[ColumnAttribute(Storage="_ReturnValue", DbType="", CanBeNull=false)]
		public int ReturnValue
		{
			get
			{
				return this._ReturnValue;
			}
			set
			{
				if (this._ReturnValue != value)
				{
					this._ReturnValue = value;
				}
			}
		}
		
	}
	#endregion sp_dropdiagramMultipleResults

	#region sp_helpdiagramdefinitionMultipleResults
	public partial class sp_helpdiagramdefinitionMultipleResults
	{
		#region Storage members
		private List<sp_helpdiagramdefinitionResult> _Result1;
		private int _ReturnValue;
		#endregion Storage members

		public sp_helpdiagramdefinitionMultipleResults(){ }

		/// <summary>
		/// Column DbType=
		/// </summary>
		[ColumnAttribute(Storage="_Result1", DbType="", CanBeNull=false)]
		public List<sp_helpdiagramdefinitionResult> Result1
		{
			get
			{
				return this._Result1;
			}
			set
			{
				if (this._Result1 != value)
				{
					this._Result1 = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=
		/// </summary>
		[ColumnAttribute(Storage="_ReturnValue", DbType="", CanBeNull=false)]
		public int ReturnValue
		{
			get
			{
				return this._ReturnValue;
			}
			set
			{
				if (this._ReturnValue != value)
				{
					this._ReturnValue = value;
				}
			}
		}
		
	}
	#endregion sp_helpdiagramdefinitionMultipleResults

	#region sp_helpdiagramsMultipleResults
	public partial class sp_helpdiagramsMultipleResults
	{
		#region Storage members
		private List<sp_helpdiagramsResult> _Result1;
		private int _ReturnValue;
		#endregion Storage members

		public sp_helpdiagramsMultipleResults(){ }

		/// <summary>
		/// Column DbType=
		/// </summary>
		[ColumnAttribute(Storage="_Result1", DbType="", CanBeNull=false)]
		public List<sp_helpdiagramsResult> Result1
		{
			get
			{
				return this._Result1;
			}
			set
			{
				if (this._Result1 != value)
				{
					this._Result1 = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=
		/// </summary>
		[ColumnAttribute(Storage="_ReturnValue", DbType="", CanBeNull=false)]
		public int ReturnValue
		{
			get
			{
				return this._ReturnValue;
			}
			set
			{
				if (this._ReturnValue != value)
				{
					this._ReturnValue = value;
				}
			}
		}
		
	}
	#endregion sp_helpdiagramsMultipleResults

	#region sp_renamediagramMultipleResults
	public partial class sp_renamediagramMultipleResults
	{
		#region Storage members
		private int _ReturnValue;
		#endregion Storage members

		public sp_renamediagramMultipleResults(){ }

		/// <summary>
		/// Column DbType=
		/// </summary>
		[ColumnAttribute(Storage="_ReturnValue", DbType="", CanBeNull=false)]
		public int ReturnValue
		{
			get
			{
				return this._ReturnValue;
			}
			set
			{
				if (this._ReturnValue != value)
				{
					this._ReturnValue = value;
				}
			}
		}
		
	}
	#endregion sp_renamediagramMultipleResults

	#region spGetAppMembersMultipleResults
	public partial class spGetAppMembersMultipleResults
	{
		#region Storage members
		private List<spGetAppMembersResult1> _Result1;
		private List<spGetAppMembersResult2> _Result2;
		private int _ReturnValue;
		#endregion Storage members

		public spGetAppMembersMultipleResults(){ }

		/// <summary>
		/// Column DbType=
		/// </summary>
		[ColumnAttribute(Storage="_Result1", DbType="", CanBeNull=false)]
		public List<spGetAppMembersResult1> Result1
		{
			get
			{
				return this._Result1;
			}
			set
			{
				if (this._Result1 != value)
				{
					this._Result1 = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=
		/// </summary>
		[ColumnAttribute(Storage="_Result2", DbType="", CanBeNull=false)]
		public List<spGetAppMembersResult2> Result2
		{
			get
			{
				return this._Result2;
			}
			set
			{
				if (this._Result2 != value)
				{
					this._Result2 = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=
		/// </summary>
		[ColumnAttribute(Storage="_ReturnValue", DbType="", CanBeNull=false)]
		public int ReturnValue
		{
			get
			{
				return this._ReturnValue;
			}
			set
			{
				if (this._ReturnValue != value)
				{
					this._ReturnValue = value;
				}
			}
		}
		
	}
	#endregion spGetAppMembersMultipleResults

	#region spMultiResultsMultipleResults
	public partial class spMultiResultsMultipleResults
	{
		#region Storage members
		private List<spMultiResultsResult1> _Result1;
		private List<spMultiResultsResult2> _Result2;
		private List<spMultiResultsResult3> _Result3;
		private List<spMultiResultsResult4> _Result4;
		private int _ReturnValue;
		#endregion Storage members

		public spMultiResultsMultipleResults(){ }

		/// <summary>
		/// Column DbType=
		/// </summary>
		[ColumnAttribute(Storage="_Result1", DbType="", CanBeNull=false)]
		public List<spMultiResultsResult1> Result1
		{
			get
			{
				return this._Result1;
			}
			set
			{
				if (this._Result1 != value)
				{
					this._Result1 = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=
		/// </summary>
		[ColumnAttribute(Storage="_Result2", DbType="", CanBeNull=false)]
		public List<spMultiResultsResult2> Result2
		{
			get
			{
				return this._Result2;
			}
			set
			{
				if (this._Result2 != value)
				{
					this._Result2 = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=
		/// </summary>
		[ColumnAttribute(Storage="_Result3", DbType="", CanBeNull=false)]
		public List<spMultiResultsResult3> Result3
		{
			get
			{
				return this._Result3;
			}
			set
			{
				if (this._Result3 != value)
				{
					this._Result3 = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=
		/// </summary>
		[ColumnAttribute(Storage="_Result4", DbType="", CanBeNull=false)]
		public List<spMultiResultsResult4> Result4
		{
			get
			{
				return this._Result4;
			}
			set
			{
				if (this._Result4 != value)
				{
					this._Result4 = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=
		/// </summary>
		[ColumnAttribute(Storage="_ReturnValue", DbType="", CanBeNull=false)]
		public int ReturnValue
		{
			get
			{
				return this._ReturnValue;
			}
			set
			{
				if (this._ReturnValue != value)
				{
					this._ReturnValue = value;
				}
			}
		}
		
	}
	#endregion spMultiResultsMultipleResults

	#region spMultiResults2MultipleResults
	public partial class spMultiResults2MultipleResults
	{
		#region Storage members
		private List<spMultiResults2Result1> _Result1;
		private List<spMultiResults2Result2> _Result2;
		private List<spMultiResults2Result1> _Result3;
		private List<spMultiResults2Result2> _Result4;
		private int _ReturnValue;
		#endregion Storage members

		public spMultiResults2MultipleResults(){ }

		/// <summary>
		/// Column DbType=
		/// </summary>
		[ColumnAttribute(Storage="_Result1", DbType="", CanBeNull=false)]
		public List<spMultiResults2Result1> Result1
		{
			get
			{
				return this._Result1;
			}
			set
			{
				if (this._Result1 != value)
				{
					this._Result1 = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=
		/// </summary>
		[ColumnAttribute(Storage="_Result2", DbType="", CanBeNull=false)]
		public List<spMultiResults2Result2> Result2
		{
			get
			{
				return this._Result2;
			}
			set
			{
				if (this._Result2 != value)
				{
					this._Result2 = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=
		/// </summary>
		[ColumnAttribute(Storage="_Result3", DbType="", CanBeNull=false)]
		public List<spMultiResults2Result1> Result3
		{
			get
			{
				return this._Result3;
			}
			set
			{
				if (this._Result3 != value)
				{
					this._Result3 = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=
		/// </summary>
		[ColumnAttribute(Storage="_Result4", DbType="", CanBeNull=false)]
		public List<spMultiResults2Result2> Result4
		{
			get
			{
				return this._Result4;
			}
			set
			{
				if (this._Result4 != value)
				{
					this._Result4 = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=
		/// </summary>
		[ColumnAttribute(Storage="_ReturnValue", DbType="", CanBeNull=false)]
		public int ReturnValue
		{
			get
			{
				return this._ReturnValue;
			}
			set
			{
				if (this._ReturnValue != value)
				{
					this._ReturnValue = value;
				}
			}
		}
		
	}
	#endregion spMultiResults2MultipleResults

	#region spNoTablesResultsMultipleResults
	public partial class spNoTablesResultsMultipleResults
	{
		#region Storage members
		private int _ReturnValue;
		#endregion Storage members

		public spNoTablesResultsMultipleResults(){ }

		/// <summary>
		/// Column DbType=
		/// </summary>
		[ColumnAttribute(Storage="_ReturnValue", DbType="", CanBeNull=false)]
		public int ReturnValue
		{
			get
			{
				return this._ReturnValue;
			}
			set
			{
				if (this._ReturnValue != value)
				{
					this._ReturnValue = value;
				}
			}
		}
		
	}
	#endregion spNoTablesResultsMultipleResults

	#region spNoTablesResults2MultipleResults
	public partial class spNoTablesResults2MultipleResults
	{
		#region Storage members
		private int _ReturnValue;
		#endregion Storage members

		public spNoTablesResults2MultipleResults(){ }

		/// <summary>
		/// Column DbType=
		/// </summary>
		[ColumnAttribute(Storage="_ReturnValue", DbType="", CanBeNull=false)]
		public int ReturnValue
		{
			get
			{
				return this._ReturnValue;
			}
			set
			{
				if (this._ReturnValue != value)
				{
					this._ReturnValue = value;
				}
			}
		}
		
	}
	#endregion spNoTablesResults2MultipleResults

	#region spRandomNumberMultipleResults
	public partial class spRandomNumberMultipleResults
	{
		#region Storage members
		private List<spRandomNumberResult> _Result1;
		private int _ReturnValue;
		#endregion Storage members

		public spRandomNumberMultipleResults(){ }

		/// <summary>
		/// Column DbType=
		/// </summary>
		[ColumnAttribute(Storage="_Result1", DbType="", CanBeNull=false)]
		public List<spRandomNumberResult> Result1
		{
			get
			{
				return this._Result1;
			}
			set
			{
				if (this._Result1 != value)
				{
					this._Result1 = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=
		/// </summary>
		[ColumnAttribute(Storage="_ReturnValue", DbType="", CanBeNull=false)]
		public int ReturnValue
		{
			get
			{
				return this._ReturnValue;
			}
			set
			{
				if (this._ReturnValue != value)
				{
					this._ReturnValue = value;
				}
			}
		}
		
	}
	#endregion spRandomNumberMultipleResults

	#region spSpiderExtractVehicleModelMultipleResults
	public partial class spSpiderExtractVehicleModelMultipleResults
	{
		#region Storage members
		private int _ReturnValue;
		#endregion Storage members

		public spSpiderExtractVehicleModelMultipleResults(){ }

		/// <summary>
		/// Column DbType=
		/// </summary>
		[ColumnAttribute(Storage="_ReturnValue", DbType="", CanBeNull=false)]
		public int ReturnValue
		{
			get
			{
				return this._ReturnValue;
			}
			set
			{
				if (this._ReturnValue != value)
				{
					this._ReturnValue = value;
				}
			}
		}
		
	}
	#endregion spSpiderExtractVehicleModelMultipleResults

	#region spSysRebuildAllIndexesMultipleResults
	public partial class spSysRebuildAllIndexesMultipleResults
	{
		#region Storage members
		private List<spSysRebuildAllIndexesResult> _Result1;
		private int _ReturnValue;
		#endregion Storage members

		public spSysRebuildAllIndexesMultipleResults(){ }

		/// <summary>
		/// Column DbType=
		/// </summary>
		[ColumnAttribute(Storage="_Result1", DbType="", CanBeNull=false)]
		public List<spSysRebuildAllIndexesResult> Result1
		{
			get
			{
				return this._Result1;
			}
			set
			{
				if (this._Result1 != value)
				{
					this._Result1 = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=
		/// </summary>
		[ColumnAttribute(Storage="_ReturnValue", DbType="", CanBeNull=false)]
		public int ReturnValue
		{
			get
			{
				return this._ReturnValue;
			}
			set
			{
				if (this._ReturnValue != value)
				{
					this._ReturnValue = value;
				}
			}
		}
		
	}
	#endregion spSysRebuildAllIndexesMultipleResults

	#region guest_fnGetStariNoviGranicaResult
	public partial class guest_fnGetStariNoviGranicaResult
	{
		#region Storage members
		private DateTime _StartDate;
		private DateTime _EndDate;
		#endregion Storage members

		public guest_fnGetStariNoviGranicaResult(){ }

		/// <summary>
		/// Column DbType=DateTime
		/// </summary>
		[ColumnAttribute(Storage="_StartDate", DbType="DateTime", CanBeNull=false)]
		public DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if (this._StartDate != value)
				{
					this._StartDate = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=DateTime
		/// </summary>
		[ColumnAttribute(Storage="_EndDate", DbType="DateTime", CanBeNull=false)]
		public DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if (this._EndDate != value)
				{
					this._EndDate = value;
				}
			}
		}
		
	}
	#endregion guest_fnGetStariNoviGranicaResult

	#region guest_spGetAppMembersMultipleResults
	public partial class guest_spGetAppMembersMultipleResults
	{
		#region Storage members
		private List<guest_spGetAppMembersResult1> _Result1;
		private List<guest_spGetAppMembersResult2> _Result2;
		private int _ReturnValue;
		#endregion Storage members

		public guest_spGetAppMembersMultipleResults(){ }

		/// <summary>
		/// Column DbType=
		/// </summary>
		[ColumnAttribute(Storage="_Result1", DbType="", CanBeNull=false)]
		public List<guest_spGetAppMembersResult1> Result1
		{
			get
			{
				return this._Result1;
			}
			set
			{
				if (this._Result1 != value)
				{
					this._Result1 = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=
		/// </summary>
		[ColumnAttribute(Storage="_Result2", DbType="", CanBeNull=false)]
		public List<guest_spGetAppMembersResult2> Result2
		{
			get
			{
				return this._Result2;
			}
			set
			{
				if (this._Result2 != value)
				{
					this._Result2 = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=
		/// </summary>
		[ColumnAttribute(Storage="_ReturnValue", DbType="", CanBeNull=false)]
		public int ReturnValue
		{
			get
			{
				return this._ReturnValue;
			}
			set
			{
				if (this._ReturnValue != value)
				{
					this._ReturnValue = value;
				}
			}
		}
		
	}
	#endregion guest_spGetAppMembersMultipleResults

	#region sp_helpdiagramdefinitionResult
	public partial class sp_helpdiagramdefinitionResult
	{
		#region Storage members
		private int? _version;
		private byte[] _definition;
		#endregion Storage members

		public sp_helpdiagramdefinitionResult(){ }

		/// <summary>
		/// Column DbType=Int
		/// </summary>
		[ColumnAttribute(Storage="_version", DbType="Int", CanBeNull=true)]
		public int? version
		{
			get
			{
				return this._version;
			}
			set
			{
				if (this._version != value)
				{
					this._version = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=VarBinary(MAX)
		/// </summary>
		[ColumnAttribute(Storage="_definition", DbType="VarBinary(MAX)", CanBeNull=true)]
		public byte[] definition
		{
			get
			{
				return this._definition;
			}
			set
			{
				if (this._definition != value)
				{
					this._definition = value;
				}
			}
		}
		
	}
	#endregion sp_helpdiagramdefinitionResult

	#region sp_helpdiagramsResult
	public partial class sp_helpdiagramsResult
	{
		#region Storage members
		private string _Database;
		private string _Name;
		private int _ID;
		private string _Owner;
		private int _OwnerID;
		#endregion Storage members

		public sp_helpdiagramsResult(){ }

		/// <summary>
		/// Column DbType=NVarChar(128)
		/// </summary>
		[ColumnAttribute(Storage="_Database", DbType="NVarChar(128)", CanBeNull=true)]
		public string Database
		{
			get
			{
				return this._Database;
			}
			set
			{
				if (this._Database != value)
				{
					this._Database = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=NVarChar(128)
		/// </summary>
		[ColumnAttribute(Storage="_Name", DbType="NVarChar(128)", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if (this._Name != value)
				{
					this._Name = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=Int
		/// </summary>
		[ColumnAttribute(Storage="_ID", DbType="Int", CanBeNull=false)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if (this._ID != value)
				{
					this._ID = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=NVarChar(128)
		/// </summary>
		[ColumnAttribute(Storage="_Owner", DbType="NVarChar(128)", CanBeNull=true)]
		public string Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if (this._Owner != value)
				{
					this._Owner = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=Int
		/// </summary>
		[ColumnAttribute(Storage="_OwnerID", DbType="Int", CanBeNull=false)]
		public int OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if (this._OwnerID != value)
				{
					this._OwnerID = value;
				}
			}
		}
		
	}
	#endregion sp_helpdiagramsResult

	#region spGetAppMembersResult1
	public partial class spGetAppMembersResult1
	{
		#region Storage members
		private int? _num;
		private int _AppMemberID;
		private int _AppMemberStatusID;
		private string _MSISDN;
		private string _FacebookId;
		private string _GoogleId;
		private string _Email;
		private string _Username;
		private string _Password;
		private DateTime? _BirthDate;
		private DateTime? _CreationDate;
		private DateTime? _LastLoginDate;
		private int _LoginsCount;
		private string _FirstName;
		private string _LastName;
		private string _Gender;
		private string _PersonalNote;
		private string _WebUrl;
		private string _Address;
		private string _ZipCode;
		private string _City;
		private string _Country;
		private string _IP;
		private int? _PosFirmaID;
		private bool? _IsQuizQuestionsEditor;
		private decimal? _StanjeRacuna;
		private int? _HomeMemberAddressID;
		private int? _WorkMemberAddressID;
		private int? _PrimaryMemberAddressID;
		#endregion Storage members

		public spGetAppMembersResult1(){ }

		/// <summary>
		/// Column DbType=Int
		/// </summary>
		[ColumnAttribute(Storage="_num", DbType="Int", CanBeNull=true)]
		public int? num
		{
			get
			{
				return this._num;
			}
			set
			{
				if (this._num != value)
				{
					this._num = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=Int
		/// </summary>
		[ColumnAttribute(Storage="_AppMemberID", DbType="Int", CanBeNull=false)]
		public int AppMemberID
		{
			get
			{
				return this._AppMemberID;
			}
			set
			{
				if (this._AppMemberID != value)
				{
					this._AppMemberID = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=Int
		/// </summary>
		[ColumnAttribute(Storage="_AppMemberStatusID", DbType="Int", CanBeNull=false)]
		public int AppMemberStatusID
		{
			get
			{
				return this._AppMemberStatusID;
			}
			set
			{
				if (this._AppMemberStatusID != value)
				{
					this._AppMemberStatusID = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=VarChar(15)
		/// </summary>
		[ColumnAttribute(Storage="_MSISDN", DbType="VarChar(15)", CanBeNull=true)]
		public string MSISDN
		{
			get
			{
				return this._MSISDN;
			}
			set
			{
				if (this._MSISDN != value)
				{
					this._MSISDN = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=VarChar(50)
		/// </summary>
		[ColumnAttribute(Storage="_FacebookId", DbType="VarChar(50)", CanBeNull=true)]
		public string FacebookId
		{
			get
			{
				return this._FacebookId;
			}
			set
			{
				if (this._FacebookId != value)
				{
					this._FacebookId = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=VarChar(50)
		/// </summary>
		[ColumnAttribute(Storage="_GoogleId", DbType="VarChar(50)", CanBeNull=true)]
		public string GoogleId
		{
			get
			{
				return this._GoogleId;
			}
			set
			{
				if (this._GoogleId != value)
				{
					this._GoogleId = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=VarChar(150)
		/// </summary>
		[ColumnAttribute(Storage="_Email", DbType="VarChar(150)", CanBeNull=true)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if (this._Email != value)
				{
					this._Email = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=NVarChar(50)
		/// </summary>
		[ColumnAttribute(Storage="_Username", DbType="NVarChar(50)", CanBeNull=true)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if (this._Username != value)
				{
					this._Username = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=NVarChar(50)
		/// </summary>
		[ColumnAttribute(Storage="_Password", DbType="NVarChar(50)", CanBeNull=true)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if (this._Password != value)
				{
					this._Password = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=DateTime
		/// </summary>
		[ColumnAttribute(Storage="_BirthDate", DbType="DateTime", CanBeNull=true)]
		public DateTime? BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if (this._BirthDate != value)
				{
					this._BirthDate = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=DateTime
		/// </summary>
		[ColumnAttribute(Storage="_CreationDate", DbType="DateTime", CanBeNull=true)]
		public DateTime? CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if (this._CreationDate != value)
				{
					this._CreationDate = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=DateTime
		/// </summary>
		[ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime", CanBeNull=true)]
		public DateTime? LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if (this._LastLoginDate != value)
				{
					this._LastLoginDate = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=Int
		/// </summary>
		[ColumnAttribute(Storage="_LoginsCount", DbType="Int", CanBeNull=false)]
		public int LoginsCount
		{
			get
			{
				return this._LoginsCount;
			}
			set
			{
				if (this._LoginsCount != value)
				{
					this._LoginsCount = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=NVarChar(100)
		/// </summary>
		[ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)", CanBeNull=true)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if (this._FirstName != value)
				{
					this._FirstName = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=NVarChar(100)
		/// </summary>
		[ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)", CanBeNull=true)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if (this._LastName != value)
				{
					this._LastName = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=VarChar(10)
		/// </summary>
		[ColumnAttribute(Storage="_Gender", DbType="VarChar(10)", CanBeNull=true)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if (this._Gender != value)
				{
					this._Gender = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=NVarChar(1000)
		/// </summary>
		[ColumnAttribute(Storage="_PersonalNote", DbType="NVarChar(1000)", CanBeNull=true)]
		public string PersonalNote
		{
			get
			{
				return this._PersonalNote;
			}
			set
			{
				if (this._PersonalNote != value)
				{
					this._PersonalNote = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=VarChar(255)
		/// </summary>
		[ColumnAttribute(Storage="_WebUrl", DbType="VarChar(255)", CanBeNull=true)]
		public string WebUrl
		{
			get
			{
				return this._WebUrl;
			}
			set
			{
				if (this._WebUrl != value)
				{
					this._WebUrl = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=NVarChar(255)
		/// </summary>
		[ColumnAttribute(Storage="_Address", DbType="NVarChar(255)", CanBeNull=true)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if (this._Address != value)
				{
					this._Address = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=NVarChar(50)
		/// </summary>
		[ColumnAttribute(Storage="_ZipCode", DbType="NVarChar(50)", CanBeNull=true)]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if (this._ZipCode != value)
				{
					this._ZipCode = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=NVarChar(250)
		/// </summary>
		[ColumnAttribute(Storage="_City", DbType="NVarChar(250)", CanBeNull=true)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if (this._City != value)
				{
					this._City = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=NVarChar(250)
		/// </summary>
		[ColumnAttribute(Storage="_Country", DbType="NVarChar(250)", CanBeNull=true)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if (this._Country != value)
				{
					this._Country = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=VarChar(50)
		/// </summary>
		[ColumnAttribute(Storage="_IP", DbType="VarChar(50)", CanBeNull=true)]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if (this._IP != value)
				{
					this._IP = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=Int
		/// </summary>
		[ColumnAttribute(Storage="_PosFirmaID", DbType="Int", CanBeNull=true)]
		public int? PosFirmaID
		{
			get
			{
				return this._PosFirmaID;
			}
			set
			{
				if (this._PosFirmaID != value)
				{
					this._PosFirmaID = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=Bit
		/// </summary>
		[ColumnAttribute(Storage="_IsQuizQuestionsEditor", DbType="Bit", CanBeNull=true)]
		public bool? IsQuizQuestionsEditor
		{
			get
			{
				return this._IsQuizQuestionsEditor;
			}
			set
			{
				if (this._IsQuizQuestionsEditor != value)
				{
					this._IsQuizQuestionsEditor = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=Money
		/// </summary>
		[ColumnAttribute(Storage="_StanjeRacuna", DbType="Money", CanBeNull=true)]
		public decimal? StanjeRacuna
		{
			get
			{
				return this._StanjeRacuna;
			}
			set
			{
				if (this._StanjeRacuna != value)
				{
					this._StanjeRacuna = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=Int
		/// </summary>
		[ColumnAttribute(Storage="_HomeMemberAddressID", DbType="Int", CanBeNull=true)]
		public int? HomeMemberAddressID
		{
			get
			{
				return this._HomeMemberAddressID;
			}
			set
			{
				if (this._HomeMemberAddressID != value)
				{
					this._HomeMemberAddressID = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=Int
		/// </summary>
		[ColumnAttribute(Storage="_WorkMemberAddressID", DbType="Int", CanBeNull=true)]
		public int? WorkMemberAddressID
		{
			get
			{
				return this._WorkMemberAddressID;
			}
			set
			{
				if (this._WorkMemberAddressID != value)
				{
					this._WorkMemberAddressID = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=Int
		/// </summary>
		[ColumnAttribute(Storage="_PrimaryMemberAddressID", DbType="Int", CanBeNull=true)]
		public int? PrimaryMemberAddressID
		{
			get
			{
				return this._PrimaryMemberAddressID;
			}
			set
			{
				if (this._PrimaryMemberAddressID != value)
				{
					this._PrimaryMemberAddressID = value;
				}
			}
		}
		
	}
	#endregion spGetAppMembersResult1

	#region spGetAppMembersResult2
	public partial class spGetAppMembersResult2
	{
		#region Storage members
		private int? _TotalCount;
		#endregion Storage members

		public spGetAppMembersResult2(){ }

		/// <summary>
		/// Column DbType=Int
		/// </summary>
		[ColumnAttribute(Storage="_TotalCount", DbType="Int", CanBeNull=true)]
		public int? TotalCount
		{
			get
			{
				return this._TotalCount;
			}
			set
			{
				if (this._TotalCount != value)
				{
					this._TotalCount = value;
				}
			}
		}
		
	}
	#endregion spGetAppMembersResult2

	#region spMultiResultsResult1
	public partial class spMultiResultsResult1
	{
		#region Storage members
		private DateTime _CurrentDate1;
		#endregion Storage members

		public spMultiResultsResult1(){ }

		/// <summary>
		/// Column DbType=DateTime
		/// </summary>
		[ColumnAttribute(Storage="_CurrentDate1", DbType="DateTime", CanBeNull=false)]
		public DateTime CurrentDate1
		{
			get
			{
				return this._CurrentDate1;
			}
			set
			{
				if (this._CurrentDate1 != value)
				{
					this._CurrentDate1 = value;
				}
			}
		}
		
	}
	#endregion spMultiResultsResult1

	#region spMultiResultsResult2
	public partial class spMultiResultsResult2
	{
		#region Storage members
		private int _RowID;
		private int _Name;
		#endregion Storage members

		public spMultiResultsResult2(){ }

		/// <summary>
		/// Column DbType=Int
		/// </summary>
		[ColumnAttribute(Storage="_RowID", DbType="Int", CanBeNull=false)]
		public int RowID
		{
			get
			{
				return this._RowID;
			}
			set
			{
				if (this._RowID != value)
				{
					this._RowID = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=Int
		/// </summary>
		[ColumnAttribute(Storage="_Name", DbType="Int", CanBeNull=false)]
		public int Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if (this._Name != value)
				{
					this._Name = value;
				}
			}
		}
		
	}
	#endregion spMultiResultsResult2

	#region spMultiResultsResult3
	public partial class spMultiResultsResult3
	{
		#region Storage members
		private string _Name;
		private string _Value;
		#endregion Storage members

		public spMultiResultsResult3(){ }

		/// <summary>
		/// Column DbType=VarChar(100)
		/// </summary>
		[ColumnAttribute(Storage="_Name", DbType="VarChar(100)", CanBeNull=true)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if (this._Name != value)
				{
					this._Name = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=VarChar(100)
		/// </summary>
		[ColumnAttribute(Storage="_Value", DbType="VarChar(100)", CanBeNull=true)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if (this._Value != value)
				{
					this._Value = value;
				}
			}
		}
		
	}
	#endregion spMultiResultsResult3

	#region spMultiResultsResult4
	public partial class spMultiResultsResult4
	{
		#region Storage members
		private DateTime _CurrentDate2;
		#endregion Storage members

		public spMultiResultsResult4(){ }

		/// <summary>
		/// Column DbType=DateTime
		/// </summary>
		[ColumnAttribute(Storage="_CurrentDate2", DbType="DateTime", CanBeNull=false)]
		public DateTime CurrentDate2
		{
			get
			{
				return this._CurrentDate2;
			}
			set
			{
				if (this._CurrentDate2 != value)
				{
					this._CurrentDate2 = value;
				}
			}
		}
		
	}
	#endregion spMultiResultsResult4

	#region spMultiResults2Result1
	public partial class spMultiResults2Result1
	{
		#region Storage members
		private DateTime _StartDate;
		private DateTime _EndDate;
		#endregion Storage members

		public spMultiResults2Result1(){ }

		/// <summary>
		/// Column DbType=DateTime
		/// </summary>
		[ColumnAttribute(Storage="_StartDate", DbType="DateTime", CanBeNull=false)]
		public DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if (this._StartDate != value)
				{
					this._StartDate = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=DateTime
		/// </summary>
		[ColumnAttribute(Storage="_EndDate", DbType="DateTime", CanBeNull=false)]
		public DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if (this._EndDate != value)
				{
					this._EndDate = value;
				}
			}
		}
		
	}
	#endregion spMultiResults2Result1

	#region spMultiResults2Result2
	public partial class spMultiResults2Result2
	{
		#region Storage members
		private int _Ordinal;
		private string _Name;
		#endregion Storage members

		public spMultiResults2Result2(){ }

		/// <summary>
		/// Column DbType=Int
		/// </summary>
		[ColumnAttribute(Storage="_Ordinal", DbType="Int", CanBeNull=false)]
		public int Ordinal
		{
			get
			{
				return this._Ordinal;
			}
			set
			{
				if (this._Ordinal != value)
				{
					this._Ordinal = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=VarChar(6)
		/// </summary>
		[ColumnAttribute(Storage="_Name", DbType="VarChar(6)", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if (this._Name != value)
				{
					this._Name = value;
				}
			}
		}
		
	}
	#endregion spMultiResults2Result2

	#region spRandomNumberResult
	public partial class spRandomNumberResult
	{
		#region Storage members
		private double? _Random;
		#endregion Storage members

		public spRandomNumberResult(){ }

		/// <summary>
		/// Column DbType=Float
		/// </summary>
		[ColumnAttribute(Storage="_Random", DbType="Float", CanBeNull=true)]
		public double? Random
		{
			get
			{
				return this._Random;
			}
			set
			{
				if (this._Random != value)
				{
					this._Random = value;
				}
			}
		}
		
	}
	#endregion spRandomNumberResult

	#region spSysRebuildAllIndexesResult
	public partial class spSysRebuildAllIndexesResult
	{
		#region Storage members
		private string _Schema;
		private string _Table;
		private string _Index;
		private double? _avg_fragmentation_in_percent;
		private long? _page_count;
		#endregion Storage members

		public spSysRebuildAllIndexesResult(){ }

		/// <summary>
		/// Column DbType=NVarChar(128)
		/// </summary>
		[ColumnAttribute(Storage="_Schema", DbType="NVarChar(128)", CanBeNull=false)]
		public string Schema
		{
			get
			{
				return this._Schema;
			}
			set
			{
				if (this._Schema != value)
				{
					this._Schema = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=NVarChar(128)
		/// </summary>
		[ColumnAttribute(Storage="_Table", DbType="NVarChar(128)", CanBeNull=false)]
		public string Table
		{
			get
			{
				return this._Table;
			}
			set
			{
				if (this._Table != value)
				{
					this._Table = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=NVarChar(128)
		/// </summary>
		[ColumnAttribute(Storage="_Index", DbType="NVarChar(128)", CanBeNull=true)]
		public string Index
		{
			get
			{
				return this._Index;
			}
			set
			{
				if (this._Index != value)
				{
					this._Index = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=Float
		/// </summary>
		[ColumnAttribute(Storage="_avg_fragmentation_in_percent", DbType="Float", CanBeNull=true)]
		public double? avg_fragmentation_in_percent
		{
			get
			{
				return this._avg_fragmentation_in_percent;
			}
			set
			{
				if (this._avg_fragmentation_in_percent != value)
				{
					this._avg_fragmentation_in_percent = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=BigInt
		/// </summary>
		[ColumnAttribute(Storage="_page_count", DbType="BigInt", CanBeNull=true)]
		public long? page_count
		{
			get
			{
				return this._page_count;
			}
			set
			{
				if (this._page_count != value)
				{
					this._page_count = value;
				}
			}
		}
		
	}
	#endregion spSysRebuildAllIndexesResult

	#region guest_spGetAppMembersResult1
	public partial class guest_spGetAppMembersResult1
	{
		#region Storage members
		private int? _num;
		private int _AppMemberID;
		private int _AppMemberStatusID;
		private string _MSISDN;
		private string _FacebookId;
		private string _GoogleId;
		private string _Email;
		private string _Username;
		private string _Password;
		private DateTime? _BirthDate;
		private DateTime? _CreationDate;
		private DateTime? _LastLoginDate;
		private int _LoginsCount;
		private string _FirstName;
		private string _LastName;
		private string _Gender;
		private string _PersonalNote;
		private string _WebUrl;
		private string _Address;
		private string _ZipCode;
		private string _City;
		private string _Country;
		private string _IP;
		private int? _PosFirmaID;
		private bool? _IsQuizQuestionsEditor;
		private decimal? _StanjeRacuna;
		private int? _HomeMemberAddressID;
		private int? _WorkMemberAddressID;
		private int? _PrimaryMemberAddressID;
		#endregion Storage members

		public guest_spGetAppMembersResult1(){ }

		/// <summary>
		/// Column DbType=Int
		/// </summary>
		[ColumnAttribute(Storage="_num", DbType="Int", CanBeNull=true)]
		public int? num
		{
			get
			{
				return this._num;
			}
			set
			{
				if (this._num != value)
				{
					this._num = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=Int
		/// </summary>
		[ColumnAttribute(Storage="_AppMemberID", DbType="Int", CanBeNull=false)]
		public int AppMemberID
		{
			get
			{
				return this._AppMemberID;
			}
			set
			{
				if (this._AppMemberID != value)
				{
					this._AppMemberID = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=Int
		/// </summary>
		[ColumnAttribute(Storage="_AppMemberStatusID", DbType="Int", CanBeNull=false)]
		public int AppMemberStatusID
		{
			get
			{
				return this._AppMemberStatusID;
			}
			set
			{
				if (this._AppMemberStatusID != value)
				{
					this._AppMemberStatusID = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=VarChar(15)
		/// </summary>
		[ColumnAttribute(Storage="_MSISDN", DbType="VarChar(15)", CanBeNull=true)]
		public string MSISDN
		{
			get
			{
				return this._MSISDN;
			}
			set
			{
				if (this._MSISDN != value)
				{
					this._MSISDN = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=VarChar(50)
		/// </summary>
		[ColumnAttribute(Storage="_FacebookId", DbType="VarChar(50)", CanBeNull=true)]
		public string FacebookId
		{
			get
			{
				return this._FacebookId;
			}
			set
			{
				if (this._FacebookId != value)
				{
					this._FacebookId = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=VarChar(50)
		/// </summary>
		[ColumnAttribute(Storage="_GoogleId", DbType="VarChar(50)", CanBeNull=true)]
		public string GoogleId
		{
			get
			{
				return this._GoogleId;
			}
			set
			{
				if (this._GoogleId != value)
				{
					this._GoogleId = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=VarChar(150)
		/// </summary>
		[ColumnAttribute(Storage="_Email", DbType="VarChar(150)", CanBeNull=true)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if (this._Email != value)
				{
					this._Email = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=NVarChar(50)
		/// </summary>
		[ColumnAttribute(Storage="_Username", DbType="NVarChar(50)", CanBeNull=true)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if (this._Username != value)
				{
					this._Username = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=NVarChar(50)
		/// </summary>
		[ColumnAttribute(Storage="_Password", DbType="NVarChar(50)", CanBeNull=true)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if (this._Password != value)
				{
					this._Password = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=DateTime
		/// </summary>
		[ColumnAttribute(Storage="_BirthDate", DbType="DateTime", CanBeNull=true)]
		public DateTime? BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if (this._BirthDate != value)
				{
					this._BirthDate = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=DateTime
		/// </summary>
		[ColumnAttribute(Storage="_CreationDate", DbType="DateTime", CanBeNull=true)]
		public DateTime? CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if (this._CreationDate != value)
				{
					this._CreationDate = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=DateTime
		/// </summary>
		[ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime", CanBeNull=true)]
		public DateTime? LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if (this._LastLoginDate != value)
				{
					this._LastLoginDate = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=Int
		/// </summary>
		[ColumnAttribute(Storage="_LoginsCount", DbType="Int", CanBeNull=false)]
		public int LoginsCount
		{
			get
			{
				return this._LoginsCount;
			}
			set
			{
				if (this._LoginsCount != value)
				{
					this._LoginsCount = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=NVarChar(100)
		/// </summary>
		[ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)", CanBeNull=true)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if (this._FirstName != value)
				{
					this._FirstName = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=NVarChar(100)
		/// </summary>
		[ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)", CanBeNull=true)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if (this._LastName != value)
				{
					this._LastName = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=VarChar(10)
		/// </summary>
		[ColumnAttribute(Storage="_Gender", DbType="VarChar(10)", CanBeNull=true)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if (this._Gender != value)
				{
					this._Gender = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=NVarChar(1000)
		/// </summary>
		[ColumnAttribute(Storage="_PersonalNote", DbType="NVarChar(1000)", CanBeNull=true)]
		public string PersonalNote
		{
			get
			{
				return this._PersonalNote;
			}
			set
			{
				if (this._PersonalNote != value)
				{
					this._PersonalNote = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=VarChar(255)
		/// </summary>
		[ColumnAttribute(Storage="_WebUrl", DbType="VarChar(255)", CanBeNull=true)]
		public string WebUrl
		{
			get
			{
				return this._WebUrl;
			}
			set
			{
				if (this._WebUrl != value)
				{
					this._WebUrl = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=NVarChar(255)
		/// </summary>
		[ColumnAttribute(Storage="_Address", DbType="NVarChar(255)", CanBeNull=true)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if (this._Address != value)
				{
					this._Address = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=NVarChar(50)
		/// </summary>
		[ColumnAttribute(Storage="_ZipCode", DbType="NVarChar(50)", CanBeNull=true)]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if (this._ZipCode != value)
				{
					this._ZipCode = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=NVarChar(250)
		/// </summary>
		[ColumnAttribute(Storage="_City", DbType="NVarChar(250)", CanBeNull=true)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if (this._City != value)
				{
					this._City = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=NVarChar(250)
		/// </summary>
		[ColumnAttribute(Storage="_Country", DbType="NVarChar(250)", CanBeNull=true)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if (this._Country != value)
				{
					this._Country = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=VarChar(50)
		/// </summary>
		[ColumnAttribute(Storage="_IP", DbType="VarChar(50)", CanBeNull=true)]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if (this._IP != value)
				{
					this._IP = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=Int
		/// </summary>
		[ColumnAttribute(Storage="_PosFirmaID", DbType="Int", CanBeNull=true)]
		public int? PosFirmaID
		{
			get
			{
				return this._PosFirmaID;
			}
			set
			{
				if (this._PosFirmaID != value)
				{
					this._PosFirmaID = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=Bit
		/// </summary>
		[ColumnAttribute(Storage="_IsQuizQuestionsEditor", DbType="Bit", CanBeNull=true)]
		public bool? IsQuizQuestionsEditor
		{
			get
			{
				return this._IsQuizQuestionsEditor;
			}
			set
			{
				if (this._IsQuizQuestionsEditor != value)
				{
					this._IsQuizQuestionsEditor = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=Money
		/// </summary>
		[ColumnAttribute(Storage="_StanjeRacuna", DbType="Money", CanBeNull=true)]
		public decimal? StanjeRacuna
		{
			get
			{
				return this._StanjeRacuna;
			}
			set
			{
				if (this._StanjeRacuna != value)
				{
					this._StanjeRacuna = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=Int
		/// </summary>
		[ColumnAttribute(Storage="_HomeMemberAddressID", DbType="Int", CanBeNull=true)]
		public int? HomeMemberAddressID
		{
			get
			{
				return this._HomeMemberAddressID;
			}
			set
			{
				if (this._HomeMemberAddressID != value)
				{
					this._HomeMemberAddressID = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=Int
		/// </summary>
		[ColumnAttribute(Storage="_WorkMemberAddressID", DbType="Int", CanBeNull=true)]
		public int? WorkMemberAddressID
		{
			get
			{
				return this._WorkMemberAddressID;
			}
			set
			{
				if (this._WorkMemberAddressID != value)
				{
					this._WorkMemberAddressID = value;
				}
			}
		}
		
		/// <summary>
		/// Column DbType=Int
		/// </summary>
		[ColumnAttribute(Storage="_PrimaryMemberAddressID", DbType="Int", CanBeNull=true)]
		public int? PrimaryMemberAddressID
		{
			get
			{
				return this._PrimaryMemberAddressID;
			}
			set
			{
				if (this._PrimaryMemberAddressID != value)
				{
					this._PrimaryMemberAddressID = value;
				}
			}
		}
		
	}
	#endregion guest_spGetAppMembersResult1

	#region guest_spGetAppMembersResult2
	public partial class guest_spGetAppMembersResult2
	{
		#region Storage members
		private int? _TotalCount;
		#endregion Storage members

		public guest_spGetAppMembersResult2(){ }

		/// <summary>
		/// Column DbType=Int
		/// </summary>
		[ColumnAttribute(Storage="_TotalCount", DbType="Int", CanBeNull=true)]
		public int? TotalCount
		{
			get
			{
				return this._TotalCount;
			}
			set
			{
				if (this._TotalCount != value)
				{
					this._TotalCount = value;
				}
			}
		}
		
	}
	#endregion guest_spGetAppMembersResult2

	#endregion Entity Return types

}
#pragma warning restore 1591
