using Calysto.CCFServices.Generator;
using Calysto.Utility;
using System;
using System.IO;
using System.Linq;

namespace Calysto.GenesisTests.Generators
{
	class Program
	{
		static void Main(string[] args)
		{
			Console.WriteLine("GenesisTests.Generators start");
			GenerateCalystoGenesisRemoteClient();
			Console.WriteLine("GenesisTests.Generators completed");
		}

		public static string ResolveRootFromProcess()
		{
			DirectoryInfo dd2 = new DirectoryInfo(Environment.CurrentDirectory);
			while (dd2 != null)
			{
				if (dd2.GetFiles("*.csproj").Any())
				{
					return dd2.FullName;
				}
				dd2 = dd2.Parent;
			}
			throw new DirectoryNotFoundException();
		}

		const string _destinationFile = @"..\Calysto.GenesisTests\Calysto\CCFServices\Generator\Contract\RemoteClient.cs";

		static void GenerateCalystoGenesisRemoteClient()
		{
			string txt = GenerateWorker();
			string root = ResolveRootFromProcess();
			CalystoTools.WriteFileIfChanged(Path.Combine(root, _destinationFile), txt);
		}

		private static string GenerateWorker()
		{
			return @"//********************************************************************
//   Generated by CCFService ClientGenerator
//********************************************************************
" + GenerateClass();
		}

		private static string GenerateClass()
		{
			var generator = new ClientGenerator();

			return generator.GenerateClass<UnitTests.Calysto.CCFServices.Contract.IRemoteController>(
					  "RemoteClient",
					  "UnitTests.Calysto.CCFServices.Contract");
		}
	}
}
